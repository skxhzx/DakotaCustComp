/*-------------------------------------------------------------------*/
/*                                                                   */
/*  SL330CL   Slot listing.                                          */
/*  20 March 1996                                                    */
/*  Hemant Kapadia                                                   */
/*  Dave Sommerville                                                 */
/*                                                                   */
/*  **NOTE**  When compiling be sure to set DFTACTGRP to *NO         */
/*                                                                   */
/*  Revisions                                                        */
/*    05/01/97  RH   2.20                                            */
/*      - Change MSG command to MSGBFC.                              */
/*    03/06/00  RH   4.13                                            */
/*      - Add item/description option to call SL333/SL334            */
/*    12/02/02  RH   4.16                                            */
/*      - Fix - Add parms to to call to put job on JOBQ              */
/*    10/07/03  DAS  4.17                                            */
/*      - Enh - Revised key for &SEQ=1 to user SLDISP.               */
/*    09/24/04  DAS  4.17                                            */
/*      - Fix - Revised program to add &PRTF2 printer                */
/*        override to SL333PR.                                       */
/*    03/26/09  CWM  5.20                                            */
/*      -ENH:  Added code for Report Distribution/Print Over Rides   */
/*    01/14/10  GJA  6.10a                                           */
/*      -Fix:  Added CLOF command for SLOT1 and DLTOVR for &PRTF2    */
/*    02/01/12  LMC  6.40a                                           */
/*      -Fix:  Set &PRTF to correct value if &ITMD = 'Y'             */
/*    04/13/12  RH   6.40b                                           */
/*      -Enh:  Add &STAT status to select by slot status or *ALL     */
/*    04/05/13  GJA  6.50a                                           */
/*      -Enh:  Add &SIDE, &LOCS, &LOCE, and &VSLT                    */
/*                                                                   */
/*-------------------------------------------------------------------*/

/*SL330CL:    PGM        PARM(&WHSE &WHDP &RETURN &DEV &FORM)     */
/*L330CL:    PGM        PARM(&WHSE &WHDP &RETURN &DEV &FORM &ITMD)*/
/*L330CL:    PGM        PARM(&WHSE &WHDP &AISL &PICK &SEQ &RETURN */
/*SL330CL:    PGM        PARM(&WHSE &WHDP &AISL &PICK &SEQ &STAT +
                             &RETURN &VP &JOBQ &DEV &FORM &ITMD) */
 SL330CL:    PGM        PARM(&WHSE &WHDP &AISL &PICK &SEQ &STAT +
                      &RETURN &VP &JOBQ &ITMD &SIDE &VSLT &LOCS &LOCE)

/*-------------------------------------------------------------------*/
/*  Constant declarations                                            */
/*-------------------------------------------------------------------*/

  /* Name of this program. */

             DCL        VAR(&SBMPGM) TYPE(*CHAR) LEN(10) +
                          VALUE(SL330CL)

  /* Option program. */

             DCL        VAR(&OPTPGM) TYPE(*CHAR) LEN(10) +
                          VALUE(SL330)

  /* Report program and printer file name. */

             DCL        VAR(&PRTF) TYPE(*CHAR) LEN(10) VALUE(SL331PR)
             DCL       VAR(&PRTF2) TYPE(*CHAR) LEN(10) VALUE(SL333PR) /*(417a)*/

  /* Informational message. */

             DCL        VAR(&CANCELMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Slot lisitng')
             DCL        VAR(&WORKINGMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Printing slot listing')

/*-------------------------------------------------------------------*/
/*  Field declarations                                               */
/*-------------------------------------------------------------------*/

             DCL        VAR(&AISL)       TYPE(*CHAR) LEN(3)
             DCL        VAR(&DEV)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&FORM)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBQ)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEMBER)     TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&PICK)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&QRYSLT)     TYPE(*CHAR) LEN(2000)
             DCL        VAR(&QUOTE)      TYPE(*CHAR) LEN(1) VALUE('"')
             DCL        VAR(&RETURN)     TYPE(*CHAR) LEN(8)
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)
             DCL        VAR(&SEQ)        TYPE(*CHAR) LEN(1)
/*640bA*/    DCL        VAR(&STAT)       TYPE(*CHAR) LEN(2)
             DCL        VAR(&TYPE)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&UNQKEY)     TYPE(*CHAR) LEN(50)
             DCL        VAR(&WHSE)       TYPE(*CHAR) LEN(3)
             DCL        VAR(&WHDP)       TYPE(*CHAR) LEN(5)
             DCL        VAR(&SECTN)      TYPE(*CHAR) LEN(1)
             DCL        VAR(&VP)         TYPE(*CHAR) LEN(1)
             DCL        VAR(&ITMD)       TYPE(*CHAR) LEN(1)

/*520 A*/    DCL        VAR(&CANCEL)     TYPE(*CHAR) LEN(8)
/*520 A*/    DCL        VAR(&PARMS)      TYPE(*CHAR) LEN(80)
/*520 A*/    DCL        VAR(&PRTCTR)     TYPE(*DEC)  LEN(15 5) VALUE(1)
/*520 A*/    DCL        VAR(&CMD)        TYPE(*CHAR) LEN(1024)
/*520 A*/    DCL        VAR(&LEN)        TYPE(*DEC) LEN(15 5) VALUE(1024)
/*520 A*/    DCL        VAR(&POVR)       TYPE(*CHAR) LEN(1)
/*520 A*/    DCL        VAR(&ONETIM)     TYPE(*CHAR) LEN(1)
/*650aA*/    DCL        VAR(&SIDE)       TYPE(*CHAR) LEN(1)
/*650aA*/    DCL        VAR(&VSLT)       TYPE(*CHAR) LEN(1)
/*650aA*/    DCL        VAR(&LOCS)       TYPE(*CHAR) LEN(3)
/*650aA*/    DCL        VAR(&LOCE)       TYPE(*CHAR) LEN(3)

             MONMSG     MSGID(CPF0000)   EXEC(GOTO CMDLBL(GETOUT))
/*-------------------------------------------------------------------*/
/*  Main line                                                        */
/*-------------------------------------------------------------------*/

START:

/*  Don't get options, if being run from JOBQ. */

             RTVJOBA    TYPE(&TYPE)
             IF (&TYPE = '0') THEN(GOTO REPORT)

/*  Get report options. */

/*640mA*/    CALL       PGM(&OPTPGM) PARM(&WHSE &WHDP &AISL &PICK +
                          &SEQ &STAT &RETURN &VP &JOBQ &ITMD &POVR +
                          &SIDE &VSLT &LOCS &LOCE)
 /*650aD                  &SEQ &STAT &RETURN &VP &JOBQ &ITMD &POVR) */
 /* 520 A                 &RETURN &VP &JOBQ  &ITMD &POVR)     */
 /* 520 D                 &RETURN &VP &JOBQ &DEV &FORM &ITMD) */
 /*                       &RETURN &VP &JOBQ &DEV &FORM)       */

/*  See if user wants to proceed. */

             IF (&RETURN = '*EXIT' *OR &RETURN = '*CANCEL') THEN(DO)

               SNDPGMMSG  MSGID(PIR9801) MSGF(PIRMSGF) +
                          MSGDTA(&CANCELMSG) +
                          MSGTYPE(*INFO)
               RETURN
               ENDDO


/* See if user wants to put report on jobq. */

             IF (&JOBQ = 'Y') THEN(DO)
             SBMJOB     CMD(CALL PGM(&SBMPGM) PARM(&WHSE &WHDP +
                          &AISL &PICK &SEQ &STAT &RETURN &VP +
                          &JOBQ &ITMD &SIDE &VSLT &LOCS &LOCE))  +
                           JOB(&SBMPGM)
/*6.50a                   &JOBQ &DEV &FORM &ITMD)) JOB(&SBMPGM) */
/*                        &AISL &PICK &SEQ &RETURN &VP +          /* (640dD) */
/*                        &DEV &FORM &ITMD)) JOB(&SBMPGM)         /* (640dD) */
 /*                       &RETURN &DEV &FORM &ITMD)) JOB(&SBMPGM) */
 /*                       &RETURN &DEV &FORM)) JOB(&SBMPGM)   */
             GOTO       CMDLBL(GETOUT)
             ENDDO

/*  Otherwise, run program. */

 REPORT:

   /* Override printer file. */

/* 520 D     OVRPRTF    FILE(&PRTF) DEV(&DEV) OUTQ(*DEV) +
                          FORMTYPE(&FORM)                     */
/* 520 D     OVRPRTF    FILE(&PRTF2) DEV(&DEV) OUTQ(*DEV) +
                          FORMTYPE(&FORM)  */    /* (417a) */

/*  Setup One Time Run Print Override  */

/*520 A*/    IF (&POVR = 'Y') THEN(DO)
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 1 8)) VALUE('*ADD    ')
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 9 10)) VALUE(&SBMPGM)
/*520 A*/      IF (&ITMD = 'N') THEN(DO)
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 19 10)) VALUE('SL331PR   ')
/*520 A*/      ENDDO
/*520 A*/      IF (&ITMD = 'Y') THEN(DO)
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 19 10)) VALUE('SL333PR   ')
             CHGVAR VAR(&PRTF) VALUE(&PRTF2)                         /* 520  */
/*520 A*/      ENDDO
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 29 3)) VALUE('000')
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 32 3)) VALUE(&WHSE)
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 35 45)) VALUE(' ')
/*520 A*/    CHGVAR VAR(%SUBSTRING(&PARMS 68 1)) VALUE('Y')
/*520 A*/    CALL       PGM(RP152) PARM(&PARMS)
/*520 A*/    CHGVAR VAR(&CANCEL)  VALUE(%SST(&PARMS 69 8))
/*520 A*/    IF         COND(&CANCEL *EQ '*CANCEL ') THEN(DO)
/*520 A*/    CHGVAR VAR(&CANCEL)  VALUE(' ')
/*520 A*/    GOTO       CMDLBL(START)
/*520 A*/    ENDDO
/*520 A*/    ENDDO
/*640 A*/      IF (&ITMD = 'Y') THEN(DO)
/*640 A*/    CHGVAR VAR(&PRTF) VALUE(&PRTF2)
/*640 A*/      ENDDO

/*520 A*/    DOUNTIL    COND(&PRTCTR *EQ 0)
/*520 A*/    CALL       PGM(RPT120) PARM(&PRTF &PRTCTR &CMD &ONETIM)
/*520 A*/    IF         COND(&PRTCTR *NE 0) THEN(DO)


   /* Create selection criteria string. */

             CHGVAR     VAR(&QRYSLT) VALUE('SLWHSE *EQ ' *CAT &WHSE)

   /* If viewing the report, select all records for this warehouse */
   /* Skip all other selection. */

             IF         COND(&VP *EQ 'V') THEN(GOTO CMDLBL(VIEW))


             IF (&WHDP *NE '*ALL') THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLWHDP *EQ +
                          ' *BCAT &QUOTE *CAT &WHDP *CAT &QUOTE)
             ENDDO

             IF (&AISL *NE '*AL' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLAISL *EQ +
                          ' *BCAT &QUOTE *CAT &AISL *CAT &QUOTE)
             ENDDO

             IF (&STAT *NE '*A' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSTAT *EQ +
                          ' *BCAT &QUOTE *CAT &STAT *CAT &QUOTE)
             ENDDO

             IF (&PICK *EQ '2' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLPICK *EQ +
                          ' *BCAT &QUOTE *CAT 'Y' *CAT &QUOTE)
             ENDDO

             IF (&PICK *EQ '3' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLPICK *EQ +
                          ' *BCAT &QUOTE *CAT 'N' *CAT &QUOTE)
             ENDDO
/*6.50a*/
             IF (&SIDE *EQ 'O' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSIDE *EQ +
                          ' *BCAT &QUOTE *CAT '1' *CAT &QUOTE)
             ENDDO
             IF (&SIDE *EQ 'E' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSIDE *EQ +
                          ' *BCAT &QUOTE *CAT '0' *CAT &QUOTE)
             ENDDO
             IF (&VSLT *EQ 'Y' ) THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLRSRV *EQ +
                          ' *BCAT &QUOTE *CAT 'V' *CAT &QUOTE)
             ENDDO

             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT ('SLLOC *GE +
                          ' *CAT &LOCS))
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT ('SLLOC *LE +
                          ' *CAT &LOCE))

 VIEW:


   /* Use OPNQRYF to select and order the records we need */

             OVRDBF     FILE(SLOT1) SHARE(*YES)

             IF (&SEQ = '1') THEN(DO)
/*417D       OPNQRYF    FILE((SLOT1)) QRYSLT(&QRYSLT) KEYFLD(*FILE) + */
/*                        SEQONLY(*NO) OPTIMIZE(*FIRSTIO)             */
             OPNQRYF    FILE((SLOT1)) QRYSLT(&QRYSLT) +
                          KEYFLD((SLOT1/SLWHSE) (SLOT1/SLWHDP) +
                          (SLOT1/SLDISP)) SEQONLY(*NO) +
                          OPTIMIZE(*FIRSTIO)
             ENDDO

             IF (&SEQ = '2') THEN(DO)
             OPNQRYF    FILE((SLOT1)) QRYSLT(&QRYSLT) +
                          KEYFLD((SLOT1/SLWHSE) (SLOT1/SLWHDP) +
                          (SLOT1/SLAISL) (SLOT1/SLPSEQ) (SLOT1/SLRLVL) +
                          (SLOT1/SLHAND)) SEQONLY(*NO) +
                          OPTIMIZE(*FIRSTIO)
             ENDDO

/*  If user viewed the data then we are done so exit. */

             IF (&VP = 'V') THEN(DO)
              CALL       PGM(SL332) PARM(&WHSE &WHDP &SECTN)
              GOTO       CMDLBL(OUT)
             ENDDO


             RMVMSG     CLEAR(*ALL)
             MSGBFC     MESSAGE(&WORKINGMSG)

 /*520 A*/   CHGVAR     VAR(&PRTCTR) VALUE(&PRTCTR + 1)
 /*520 A*/   CALL       PGM(QCMDEXC) PARM(&CMD &LEN)

               IF (&ITMD = 'N') THEN(DO)
                CALL       PGM(SL331)
               ENDDO
               IF (&ITMD = 'Y') THEN(DO)
                CALL       PGM(SL333)
               ENDDO

 /*520 A*/   IF         COND(&ONETIM *EQ 'Y') THEN(DO)
 /*520 A*/   CHGVAR     VAR(&PRTCTR) VALUE(0)
 /*520 A*/   ENDDO
 /*610aA*/   CLOF       OPNID(SLOT1)
 /*610aA*/   DLTOVR     FILE(&PRTF2)
 /*520 A*/   DLTOVR     FILE(&PRTF)
 /*520 A*/   MONMSG     MSGID(CPF9841)
 /*520 A*/   ENDDO
 /*520 A*/   ENDDO

 /* Receive any messages and pass them on */

 GETOUT:
 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                        MSGDTA(&MSGDTA) MSGTYPE(*COMP)
             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 OUT:
 NOMSG:

   /* Clean up before leaving */

             RCLRSC     LVL(*CALLER)

             ENDPGM
