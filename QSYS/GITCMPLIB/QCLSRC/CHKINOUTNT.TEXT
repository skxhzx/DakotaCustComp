

                     Notes About CHKINOUT Command


  The check In/Out command was designed for one reason:

    1) To allow a job to identify that it is running and that no one
       else should be running any conficting jobs.

  A good example of this would be the exporting of Customer Routes
  at Quality Foods. Quality decided to have a consultant write the
  actual FTP process that transfers an exported route to the host
  system. Along with that, Quality didn't want one route per file,
  they wanted multiple routes in a specific file name on their system.
  Therefore, we made a special modification to the export program to
  write the records to be exported into a single member in the export
  file.

  Because of this methodology, we needed to ensure that we were not
  trying to write records to the export file at the same time the
  file was being transfered to the host system and visa versa.

  Therefore, CHKINOUT was created to prevent this situation from
  happening. Now, whenever a user takes the option to export a customer
  route, the program tries to check out data area EXPORD. If
  successful, the program proceeds. Otherwise the user is prevented
  from doing the export. Likewise, the program the is actually doing
  the FTP transfer will need to check out EXPORD before proceeding.


  CHKINOUT Parameters:

    TYPE  - *IN    Check a data area in

                   The program will check to make sure the data area
                   exists. If one doesn't exist, it will be created.

                   Last of all the program tries to get an exclusive
                   lock on the data area. If no error occurs, the
                   the program returns and the calling program should
                   proceed as normal. If an error does occur, it is
                   assumed that another user, using the same user id
                   on a different terminal has already locked the
                   data area. In that case, error CPF9898 is returned
                   to the calling program. The calling program should
                   then abort and not let the user go any futher.

            *OUT   Check a user out

                   This option deallocates the exclusive lock that
                   was put on the data area. If it is not locked
                   to begin with, no harm done.

            *VIEW  View locks for data area

                   This option executes the WRKOBJLCK command for
                   the data area

    DTAARA - Data area

            The data area to be locked. It can not be blank.


  How to use CHKINOUT in a CL program:

    1) The CL program needs to contain the standard logic to forward
       messages.

    2) Put the following code at the beginning of the program.

             CHKINOUT   TYPE(*IN) DTAARA(data area name)
             MONMSG     MSGID(CPF9898) EXEC(GOTO GETOUT)

       If an error occurs, CPF9898 is returned. The program jumps to
       the message forwarding logic and sends the CPF9898 message
       onto the user.

       Note: If the CL program uses the WORKOPT file, then the code
             must come after the creation and override of the member.
             Reason: If CHKINOUT came first and had an error, the CL
             program would bomb when it tried to delete the override
             and clear the WORKOPT member.

    3) The following code should be put at the end of the program:

             CHKINOUT   TYPE(*OUT) DTAARA(data area name)

    4) Always check the program by signing onto two terminals
       and running the program on both terminals.
       The program should be prevented from running on one of the
       terminals.

