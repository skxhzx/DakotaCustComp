/*-------------------------------------------------------------------*/
/*                                                                   */
/*  SL310CL   Verified Open Slot report - PIRRCV/OPT# 4.             */
/*  01 September, 1994                                               */
/*  Hemant Kapadia                                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Revisions                                                        */
/*    05/01/97  RH   2.20                                            */
/*      - Change MSG command to MSGBFC.                              */
/*                                                                   */
/*    04/04/17  MLB  7.10                                            */
/*      - Enh: Added MONMSG to CLOF cmd.                             */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions                                          */
/*                                                                   */
/*    10/22/08  CBI-JGD                                              */
/*    Added a new piece to the opnqry criteria to be able to         */
/*    report on all slots or on overstock slots only.                */
/*                                                                   */
/*    07/22/09  CBIa-JGD                                             */
/*    Add logic to exclude invalid virtual overstock locations       */
/*    from report, also, (Per Mike E.) include the entire query      */
/*    criteria if user selects 'VIEW' same as when the selection     */
/*    is 'PRINT'.                                                    */
/*                                                                   */
/*----------------------------------------------------------------   */

 SL310CL:    PGM        PARM(&WHSE &WHDP &RETURN &DEV &FORM &SLTYP)

/*-------------------------------------------------------------------*/
/*  Constant declarations                                            */
/*-------------------------------------------------------------------*/

  /* Name of this program. */

             DCL        VAR(&SBMPGM) TYPE(*CHAR) LEN(10) +
                          VALUE(SL310CL)

  /* Option program. */

             DCL        VAR(&OPTPGM) TYPE(*CHAR) LEN(10) +
                          VALUE(SL310)

  /* Report program and printer file name. */

             DCL        VAR(&FILE) TYPE(*CHAR) LEN(10) VALUE(SLOT)
             DCL        VAR(&PRTF) TYPE(*CHAR) LEN(10) VALUE(SL311PR)

  /* Informational message. */

             DCL        VAR(&CANCELMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Verified open slot report')
             DCL        VAR(&WORKINGMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Printing Verified open slot report')

/*-------------------------------------------------------------------*/
/*  Field declarations                                               */
/*-------------------------------------------------------------------*/

             DCL        VAR(&DEV)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&FORM)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBQ)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&MEMBER)     TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&QRYSLT)     TYPE(*CHAR) LEN(2000)
             DCL        VAR(&QUOTE)      TYPE(*CHAR) LEN(1) VALUE('"')
             DCL        VAR(&RETURN)     TYPE(*CHAR) LEN(8)
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)
             DCL        VAR(&TYPE)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&UNQKEY)     TYPE(*CHAR) LEN(50)
             DCL        VAR(&WHSE)       TYPE(*CHAR) LEN(3)
             DCL        VAR(&WHDP)       TYPE(*CHAR) LEN(5)
             DCL        VAR(&SECTN)      TYPE(*CHAR) LEN(1)
             DCL        VAR(&SLTYP)      TYPE(*CHAR) LEN(4)   /* CBI A */
             DCL        VAR(&VP)         TYPE(*CHAR) LEN(1)

             MONMSG     MSGID(CPF0000)   EXEC(GOTO CMDLBL(GETOUT))
/*-------------------------------------------------------------------*/
/*  Main line                                                        */
/*-------------------------------------------------------------------*/

/*  Don't get options, if being run from JOBQ. */

             RTVJOBA    TYPE(&TYPE)
             IF (&TYPE = '0') THEN(GOTO REPORT)

/*  Get report options. */

             CALL       PGM(&OPTPGM) PARM(&WHSE &WHDP &SECTN &RETURN +
                          &VP &JOBQ &DEV &FORM &SLTYP)        /* CBI A */

/*  See if user wants to proceed. */

             IF (&RETURN = '*EXIT' *OR &RETURN = '*CANCEL') THEN(DO)

               SNDPGMMSG  MSGID(PIR9801) MSGF(PIRMSGF) +
                          MSGDTA(&CANCELMSG) +
                          MSGTYPE(*INFO)
               RETURN
               ENDDO


/* See if user wants to put report on jobq. */

             IF (&JOBQ = 'Y') THEN(DO)
             SBMJOB     CMD(CALL PGM(&SBMPGM) PARM(&WHSE &WHDP +
                          &RETURN &DEV &FORM)) JOB(&SBMPGM)
             GOTO       CMDLBL(GETOUT)
             ENDDO

/*  Otherwise, run program. */

 REPORT:

   /* Override printer file. */

             OVRPRTF    FILE(&PRTF) DEV(&DEV) OUTQ(*DEV) +
                          FORMTYPE(&FORM)

   /* Create selection criteria string. */

             CHGVAR     VAR(&QRYSLT) VALUE('SLWHSE *EQ ' *CAT &WHSE)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSTAT +
                          *EQ' *BCAT &QUOTE *CAT 'V' *CAT &QUOTE)

   /* If viewing the report, select all records for this warehouse */
   /* Skip all other selection. */

/* CBIa D    IF         COND(&VP *EQ 'V') THEN(GOTO CMDLBL(VIEW))  */


             IF (&WHDP *NE '*ALL') THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLWHDP *EQ +
                          ' *BCAT &QUOTE *CAT &WHDP *CAT &QUOTE)
             ENDDO

             IF (&RETURN = '*PIR') THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSTYP +
                          *EQ' *BCAT &QUOTE *CAT 'P' *CAT &QUOTE)
             ENDDO

             IF (&RETURN = '*FIXED') THEN(DO)
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLSTYP +
                          *EQ' *BCAT &QUOTE *CAT 'F' *CAT &QUOTE)
             ENDDO

             IF (&SLTYP = 'O') THEN(DO)                       /* CBI A */
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT '*AND')
             CHGVAR     VAR(&QRYSLT) VALUE(&QRYSLT *BCAT 'SLPICK +
                          *EQ' *BCAT &QUOTE *CAT 'N' *CAT &QUOTE)
             ENDDO

 VIEW:
/*---------------------------*/
/* Get unique member to use  */
/*---------------------------*/
/* CBIa A */ CALL       PGM(GETUNQMEM) PARM(*REUSE SL311B &MEMBER)


   /* Use OPNQRYF to select and order the records we need */

             OVRDBF     FILE(SL311) TOFILE(&FILE) SHARE(*YES)
             OPNQRYF    FILE((&FILE)) FORMAT(SL311) +
                          QRYSLT(&QRYSLT) KEYFLD((SLOT/SLWHSE) +
                          (SLOT/SLWHDP) (SLOT/SLSTYP) (SLOT/SLDESG) +
                          (SLOT/SLSDEF)) SEQONLY(*NO) +
                          OPTIMIZE(*FIRSTIO)


/*----------------------*/
/* Populate SL311B file */
/*----------------------*/
             OVRDBF     FILE(SL311B) MBR(&MEMBER)             /* CBIa A */
             CALL       PGM(SL311B)                           /* CBIa A */



/*  If user viewed the data then we are done so exit. */

             IF (&VP = 'V') THEN(DO)
             CALL       PGM(SL312) PARM(&WHSE &WHDP &SECTN)
               GOTO       CMDLBL(OUT)
             ENDDO


             RMVMSG     CLEAR(*ALL)
             MSGBFC     MESSAGE(&WORKINGMSG)

             CALL       PGM(SL311) PARM(&SLTYP)               /* CBI A */

 /* Receive any messages and pass them on */

 GETOUT:
 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                        MSGDTA(&MSGDTA) MSGTYPE(*COMP)
             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 OUT:
 NOMSG:

   /* Clean up before leaving */

             RCLRSC     LVL(*CALLER)
             CLOF       OPNID(&FILE)
             MONMSG     MSGID(CPF4519 CPF4520)                    /* (710 A) */
             CLOF       OPNID(SL311B)                             /* (710 A) */
             MONMSG     MSGID(CPF4519 CPF4520)                    /* (710 A) */
             DLTOVR     FILE(*ALL)                            /* CBIa A */
             MONMSG     MSGID(CPF9841)                            /* (710 A) */
             IF         COND(&MEMBER > ' ') THEN(DO)          /* CBIa A */
             RMVM       FILE(SL311B) MBR(&MEMBER)             /* CBia A */
             MONMSG     MSGID(CPF320A CPF3203 CPF3220 +
                              CPF3273 CPF7301 CPF7310)        /* CBIa A */
             ENDDO                                            /* CBIa A */

             ENDPGM
