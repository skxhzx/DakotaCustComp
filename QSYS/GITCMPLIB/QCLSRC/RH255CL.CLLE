/*-------------------------------------------------------------------*/
/*   Copyright (C) 2006 BFC Software, Inc. - All Rights Reserved     */
/*   BFC Software, Inc.                                              */
/*   245 W. Roosevelt Rd.  Bldg 8, Suite 51                          */
/*   West Chicago, IL  60185                                         */
/*   (630) 562-0375                                                  */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*  RH255CL   FTP export closed will call orders                     */
/*  08 March 1999                                                    */
/*  Dave Sommerville                                                 */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Revisions:                                                       */
/*                                                                   */
/*    06/11/99  DAS  4.11                                            */
/*     - Revised to put warehouse number in positions 2 & 3          */
/*       of member names.                                            */
/*                                                                   */
/*    09/13/00  DAS  4.14                                            */
/*      - Revised to use export script EXPFADJ instead of DEFAULT.   */
/*      - Revised to check script for *NO EXPORT*.                   */
/*                                                                   */
/*    05/08/02  DAS  4.16                                            */
/*      - Program was still using script default DEFAULT. Fixed.     */
/*      - Revised to not create a unique member when we don't        */
/*        actually ftp file (script has *NO EXPORT* in it).          */
/*                                                                   */
/*    02/08/06  MLB  5.00                                            */
/*      - Enh: Added client custom code support to program.          */
/*    02/08/06  MLB  5.00a                                           */
/*      - Enh: Added support to program to export to additional      */
/*        files, EXPFORDB, EXPFORDE.                                 */
/*    07/20/06  MLB  5.10b                                           */
/*      - Enh: Added MONMSG's to all RMVM's at end of pgm.           */
/*    10/08/06  MLB  5.10c                                           */
/*      - Enh: Changed &RTN test to goto GETOUT instead of doing     */
/*        RETURN.                                                    */
/*    10/08/06  MLB  5.10d                                           */
/*      - Enh: Added 6 new return parms on call to FTPCRTSCRP        */
/*        program to return path statement created for export files. */
/*    05/17/07  RBD  5.10e                                           */
/*      - Added new order detail label# export file EXPFORDL.        */
/*    05/20/07  DAS  5.10f                                           */
/*      - Added new order detail piece seq# export file EXPFORDP.    */
/*    04/10/08  RBD  5.20  P#00011                                   */
/*      - Added new order detail ASN SSCC-18 export file EXPFORDASN. */
/*      - Added call to pgm XM157 which creates XML ASN (advanced    */
/*        ship notice) files and export file EXPFORDASN.             */
/*      - Defined length of variable &RMTFILEA as 20.                */
/*    09/21/08  MLB  5.20a                                           */
/*      - Fix: Changed TFRNEEDED to 6 from 4 to match number of      */
/*        files being sent to Host system.                           */
/*                                                                   */
/*    05/07/12  MLB  6.40                                            */
/*      - Fix: Changed TFRNEEDED to 8 from 6 to match number of      */
/*        files being sent to Host system.                           */
/*    08/10/12  LMC  6.40a                                           */
/*      - Added new order detail LOT export file EXPFORDO.           */
/*    09/25/13  RTR  6.50                                            */
/*      - Added logging to BFCLOG.                                   */
/*      - Added debug OPTIONS flag checking to leave members.        */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: City Line                               */
/*                                                                   */
/*    09/02/04  MLB  CTY                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFWILHxxxx.txt where xxxx is           */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFWILH, EXPFWILD, EXPFWILC and EXPFWILT. */
/*    11/10/04  MLB  CTYa                                            */
/*      - Revised above mod to rename remote files to use same       */
/*        format as regular route files. EXPFORDH, EXPFORDD, EXPFORC */
/*        and EXPFORDT.                                              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: European Imports                        */
/*                                                                   */
/*    02/07/06  MLB  EI                                              */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Ellenbee-Leggett                        */
/*                                                                   */
/*    05/25/07  MLB  ELL                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Harbor Wholesale                        */
/*                                                                   */
/*    05/30/06  MLB  HAR                                             */
/*      - Add Harbor to EI mod above to create semi-generic          */
/*        export file names.                                         */
/*                                                                   */
/*    04/10/08  RBD  HARa                                            */
/*      - Make call to XM157 client specific for Harbor.             */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Grocery Supply                          */
/*                                                                   */
/*    06/09/06  MLB  GSC                                             */
/*      - Revised program to remove all members from export files.   */
/*        GSC does not use exported data.                            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Packer's Provision                      */
/*                                                                   */
/*    06/26/06  MLB  PAK                                             */
/*      - Revised program to add member to SAPEXP file for           */
/*        SAP unique export file for customer orders.                */
/*    10/08/06  MLB  PAKa                                            */
/*      - Revised program to use CPYTOIMPF command to send SAPEXP    */
/*        file to shared folder instead of using FTP. Messages       */
/*        will still be sent to the FTP message queues.              */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: TPC                                     */
/*                                                                   */
/*    02/22/07  MLB  TPC                                             */
/*      - Revised program to call GETEXP# for use in creating        */
/*        remote export file name.                                   */
/*    12/06/07  MLB  TPCa                                            */
/*      - Revised program to copy data from EXPFORDH,D,C,T to extend */
/*        length files, EXPFORDHSP, EXPFORDDSP, EXPFORDCSP and       */
/*        EXPFORDTSP. Stanpack requires specific length files.       */
/*    01/28/17  MLB  TPCb                                            */
/*      - Revised program to set TFRNEEDED to 4.                     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Cash WA Distributing                    */
/*                                                                   */
/*    11/03/08  MLB  CWD                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Dairyland                               */
/*                                                                   */
/*    02/02/10  MLB  DRY                                             */
/*      - Revised program to call BFCECO01C to process exported      */
/*        route.                                                     */
/*    02/03/10  MLB  DRYa                                            */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*    02/12/10  MLB  DRYb                                            */
/*      - Revised mod, DRY to pass retrieved Dakota data files       */
/*        library name to Host interface program.                    */
/*    08/23/11  MLB  DRYc                                            */
/*      - Revised pgm to print copy of joblog to outq BFCEXCP in     */
/*        the event of a terminal error on call to BFCECO01C.        */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Fischer Food Company                    */
/*                                                                   */
/*    03/29/10  MLB  FFC                                             */
/*      - Add Fischer to EI mod above to create semi-generic         */
/*        export file names.                                         */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Capitol City Produce                    */
/*                                                                   */
/*    06/24/10  MLB  CCPa                                            */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Glazier Foods                           */
/*                                                                   */
/*    08/31/10  MLB  GLZ                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*      - Added GLZ to DRYa mod.                                     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: HM Wagner                               */
/*                                                                   */
/*    07/13/12  MLB  HMW                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFORDHxxxx.txt where xxxx is           */
/*        a unique number.                                           */
/*      - Added HMW to CTY mod.                                      */
/*    01/07/15  RTR  HMWb                                            */
/*      - Revised to never FTP willcall orders for H&M Wagner.       */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Stern Produce                           */
/*                                                                   */
/*    12/07/12  MLB  SPI                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported.                                            */
/*      - Added SPI to CLD mod.                                      */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Get Fresh Sales                         */
/*                                                                   */
/*    05/15/13  RTR  GFS                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all four     */
/*        files exported: EXPFORDD, EXPFORC and EXPFORDT.            */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Greenleaf Produce                       */
/*                                                                   */
/*    09/25/13  RTR  GFS                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported: EXPFORDD, EXPFORC, EXPFORDT, etc.          */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Springfield Grocery                     */
/*                                                                   */
/*    10/31/13  MLB  SGC                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFWILHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported to Host.                                    */
/*      - The original DRYa mod will be enhanced to allow for        */
/*        unique file prefix values to be specified allowing for     */
/*        additional client flexibility.                             */
/*      - Added GLZ to DRYa mod.                                     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Seashore Fruit & Produce                */
/*                                                                   */
/*    08/03/18  MLB  SFP                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported.                                            */
/*      - Added SFP to CLD mod.                                      */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: T&T Produce                             */
/*                                                                   */
/*    08/03/18  MLB  TNT                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFORDHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported.                                            */
/*      - Added TNT to CLD mod.                                      */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Presto Foods                            */
/*                                                                   */
/*    11/19/14  RTR  PFC                                             */
/*      - Revised remote file names to exclude the warehouse number. */
/*        Create remote file name in the following format:           */
/*        EXPFWILHxxxx.txt where xxxx is                             */
/*        a unique number. This format will be used for all          */
/*        files exported to Host.                                    */
/*      - Added PFC to DRYa mod.                                     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Parameters:                                                      */
/*                                                                   */
/*    &PGM    -  Program to send messages back to                    */
/*    &WHSE   -  Warehouse                                           */
/*    &RTID   -  Route id                                            */
/*    &RTE    -  Host route                                          */
/*    &RTN    -  Return code                                         */
/*    &MSGKEY -  Message id for *PGMQ                                */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Notes:                                                           */
/*                                                                   */
/*   This program will create a unique member name and then create   */
/*   new members in all of the export files and in the FTP script    */
/*   and log files.                                                  */
/*                                                                   */
/*   The remote file name will start with the member name followed   */
/*   by a letter to identify it's type (H,D,C,T). The extension      */
/*   will be RTE.                                                    */
/*                                                                   */
/*-------------------------------------------------------------------*/

 RH255CL:    PGM        PARM(&PGM &WHSE &RTID &RTE &RTN &MSGKEY)

/*-------------------------------------------------------------------*/
/*  Constant declarations                                            */
/*-------------------------------------------------------------------*/

  /* Client ID's.    */                                           /* (500 A) */

             DCL        VAR(&CAPITOLCTY) TYPE(*CHAR) LEN(10) +
                          VALUE('CAPITOLCTY')                     /* (CCPaA) */
             DCL        VAR(&CITYLINE) TYPE(*CHAR) LEN(8) +
                          VALUE('CITYLINE')                       /* (CLD A) */
             DCL        VAR(&EI)     TYPE(*CHAR) LEN(8) +
                          VALUE('EI')                             /* (EI  A) */
             DCL        VAR(&ELLENBEE) TYPE(*CHAR) LEN(8) +
                          VALUE('ELLENBEE')                       /* (ELL A) */
             DCL        VAR(&HARBOR) TYPE(*CHAR) LEN(8) +
                          VALUE('HARBOR')                         /* (HAR A) */
             DCL        VAR(&HMWAGNER) TYPE(*CHAR) LEN(10) +
                          VALUE('HMWAGNER')                       /* (HMW A) */
             DCL        VAR(&PACKERS) TYPE(*CHAR) LEN(8) +
                          VALUE('PACKERS ')                       /* (PAK A) */
             DCL        VAR(&TPC)     TYPE(*CHAR) LEN(8) +
                          VALUE('TPC')                            /* (TPC A) */
             DCL        VAR(&CBI)     TYPE(*CHAR) LEN(10) +
                          VALUE('CHENEYBROS')                     /* (510eA) */
             DCL        VAR(&CASHWA)  TYPE(*CHAR) LEN(10) +
                          VALUE('CASHWA')                         /* (CWD A) */
             DCL        VAR(&DAIRYLAND) TYPE(*CHAR) LEN(10) +
                          VALUE('DAIRYLAND')                      /* (DRY A) */
             DCL        VAR(&FISCHER) TYPE(*CHAR) LEN(10) +
                          VALUE('FISCHER')                        /* (FFC A) */
             DCL        VAR(&GLAZIER) TYPE(*CHAR) LEN(10) +
                          VALUE('GLAZIER')                        /* (GLZ A) */
             DCL        VAR(&STERN) TYPE(*CHAR) LEN(10) +
                          VALUE('STERN')                          /* (SPI A) */
             DCL        VAR(&GETFRESH) TYPE(*CHAR) LEN(10) +
                          VALUE('GETFRESH')                       /* (GFS A) */
             DCL        VAR(&GREENLEAF) TYPE(*CHAR) LEN(10) +
                          VALUE('GREENLEAF')                      /* (GLP A) */
             DCL        VAR(&SGC) TYPE(*CHAR) LEN(10) +
                          VALUE('SGC')                            /* (SGC A) */
             DCL        VAR(&SEASHORE) TYPE(*CHAR) LEN(10) +
                          VALUE('SEASHORE')                       /* (SFP A) */
             DCL        VAR(&TNT) TYPE(*CHAR) LEN(10) +
                          VALUE('T&TPRODUCE')                     /* (TNT A) */
             DCL        VAR(&PRESTO) TYPE(*CHAR) LEN(10) +
                          VALUE('PRESTOFOOD')                     /* (PFC A) */

  /* Current program. */

             DCL        VAR(&CURPGM) TYPE(*CHAR) LEN(10) +
                          VALUE(RH255CL)                          /* (650 A) */

  /* Export program. */

             DCL        VAR(&EXPPGM) TYPE(*CHAR) LEN(8) +
                          VALUE(RH255)

  /* Export script */  /* 414A */

             DCL        VAR(&EXPSCRP) TYPE(*CHAR) LEN(8) +
                          VALUE(EXPFORD)

  /* Messag queues */

             DCL        VAR(&FTPMSGQ) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPORD')
             DCL        VAR(&FTPERRMSGQ) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPORDERR')

  /* Messages */
             DCL        VAR(&WORKINGMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Exporting FTP Order Will Call +
                          Updates')                               /* (650 A) */

  /* Import files */

             DCL        VAR(&FILEH) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDH')
             DCL        VAR(&FILED) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDD')
             DCL        VAR(&FILEC) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDC')
             DCL        VAR(&FILET) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDT')
             DCL        VAR(&FILEb) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDB')                       /* (500aA) */
             DCL        VAR(&FILEe) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDE')                       /* (500aA) */
             DCL        VAR(&FILEL) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDL')                       /* (510eA) */
             DCL        VAR(&FILEP) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDP')                       /* (510fA) */
             DCL        VAR(&FILEA) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDASN')                     /* (520 A) */
             DCL        VAR(&FILEF) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFORDO')                       /* (640aA) */

  /* Number of 'Transfer complete' messages to look for */

/*           DCL        VAR(&TFRNEEDED) TYPE(*DEC) LEN(1 0) VALUE(4) (520aD) */
/*           DCL        VAR(&TFRNEEDED) TYPE(*DEC) LEN(1 0) VALUE(6) /*(640 D)*/
             DCL        VAR(&TFRNEEDED) TYPE(*DEC) LEN(1 0) VALUE(8) /*(640 M)*/

/*-------------------------------------------------------------------*/
/*  Field declarations                                               */
/*-------------------------------------------------------------------*/

             DCL        VAR(&client)     TYPE(*CHAR) LEN(10)      /* (500 A) */
             DCL        VAR(&clientloc)  TYPE(*CHAR) LEN(10)      /* (500 A) */
             DCL        VAR(&CURDTYYMD)  TYPE(*CHAR) LEN(8)       /* (PAK A) */
             DCL        VAR(&CURDTMDY)   TYPE(*CHAR) LEN(6)       /* (PAK A) */
             DCL        VAR(&CURTIME)    TYPE(*CHAR) LEN(6)       /* (PAK A) */
             DCL        VAR(&DEBUG)      TYPE(*CHAR) LEN(117)     /* (650 A) */
             DCL        VAR(&DEBUGMSG)   TYPE(*CHAR) LEN(1024)    /* (650 A) */
             DCL        VAR(&ERRCNT)     TYPE(*DEC)  LEN(1 0)
             DCL        VAR(&EXIST)      TYPE(*LGL)
             DCL        VAR(&EXPFNBR)    TYPE(*CHAR) LEN(1)       /* (TPC A) */
             DCL        VAR(&EXPFLAG)    TYPE(*CHAR) LEN(8) /* 414A */
             DCL        VAR(&EXPTYPE)    TYPE(*CHAR) LEN(8)
             DCL        VAR(&FILEPREFX)  TYPE(*CHAR) LEN(7)       /* (SGC A) */
             DCL        VAR(&FINISHED)   TYPE(*LGL)
             DCL        VAR(&HOSTLIB)    TYPE(*CHAR) LEN(10) +
                                              VALUE('DARLIB_TST') /* (DRY A) */
             DCL        VAR(&LCLFILEC)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILED)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILEH)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILET)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILEB)   TYPE(*CHAR) LEN(33)      /* (500aA) */
             DCL        VAR(&LCLFILEE)   TYPE(*CHAR) LEN(33)      /* (500aA) */
             DCL        VAR(&LCLFILEL)   TYPE(*CHAR) LEN(33)      /* (510eA) */
             DCL        VAR(&LCLFILEP)   TYPE(*CHAR) LEN(33)      /* (510fA) */
             DCL        VAR(&LCLFILEA)   TYPE(*CHAR) LEN(33)      /* (520 A) */
             DCL        VAR(&LCLFILEF)   TYPE(*CHAR) LEN(33)      /* (640aA) */
             DCL        VAR(&LIBC)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBD)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBH)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBT)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBB)       TYPE(*CHAR) LEN(10)      /* (500aA) */
             DCL        VAR(&LIBE)       TYPE(*CHAR) LEN(10)      /* (500aA) */
             DCL        VAR(&LIBL)       TYPE(*CHAR) LEN(10)      /* (510eA) */
             DCL        VAR(&LIBP)       TYPE(*CHAR) LEN(10)      /* (510fA) */
             DCL        VAR(&LIBA)       TYPE(*CHAR) LEN(10)      /* (520 A) */
             DCL        VAR(&LIBF)       TYPE(*CHAR) LEN(10)      /* (640aA) */
             DCL        VAR(&MBR)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGKEY)     TYPE(*CHAR) LEN(4)
             DCL        VAR(&NXTNUM)     TYPE(*DEC)  LEN(7)
             DCL        VAR(&NXTNUMA)    TYPE(*CHAR) LEN(7)
             DCL        VAR(&PGM)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&PATHH)      TYPE(*CHAR) LEN(45)      /* (510dA) */
             DCL        VAR(&PATHD)      TYPE(*CHAR) LEN(45)      /* (510dA) */
             DCL        VAR(&PATHC)      TYPE(*CHAR) LEN(45)      /* (510dA) */
             DCL        VAR(&PATHT)      TYPE(*CHAR) LEN(45)      /* (510dA) */
             DCL        VAR(&PATHB)      TYPE(*CHAR) LEN(45)      /* (510dA) */
             DCL        VAR(&PATHE)      TYPE(*CHAR) LEN(45)      /* (510bA) */
             DCL        VAR(&PATHL)      TYPE(*CHAR) LEN(45)      /* (510eA) */
             DCL        VAR(&PATHP)      TYPE(*CHAR) LEN(45)      /* (510fA) */
             DCL        VAR(&PATHA)      TYPE(*CHAR) LEN(45)      /* (520 A) */
             DCL        VAR(&PATHF)      TYPE(*CHAR) LEN(45)      /* (640aA) */
             DCL        VAR(&RMTFILEC)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILED)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILEH)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILET)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILEB)   TYPE(*CHAR) LEN(16)      /* (500aA) */
             DCL        VAR(&RMTFILEE)   TYPE(*CHAR) LEN(16)      /* (500aA) */
             DCL        VAR(&RMTFILEL)   TYPE(*CHAR) LEN(16)      /* (510eA) */
             DCL        VAR(&RMTFILEP)   TYPE(*CHAR) LEN(16)      /* (510fA) */
             DCL        VAR(&RMTFILEA)   TYPE(*CHAR) LEN(20)      /* (520 A) */
             DCL        VAR(&RMTFILEF)   TYPE(*CHAR) LEN(20)      /* (640aA) */
             DCL        VAR(&RTE)        TYPE(*CHAR) LEN(5)
             DCL        VAR(&RTID)       TYPE(*CHAR) LEN(5)
             DCL        VAR(&RTN)        TYPE(*CHAR) LEN(8)
             DCL        VAR(&RTNH)       TYPE(*CHAR) LEN(8)       /* (DRY A) */
             DCL        VAR(&RUNTIMEENV) TYPE(*CHAR) LEN(10)      /* (DRYbM) */
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)
             DCL        VAR(&SHORTNUMA)  TYPE(*CHAR) LEN(4)   /* CTY A */
             DCL        VAR(&WHSE)       TYPE(*DEC)  LEN(3 0)
             DCL        VAR(&WHSEA)      TYPE(*CHAR) LEN(3)   /* 411 A */

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(GETOUT))

/* Get Client ID */                                               /* (500 A) */
             CALL       PGM(GETCLIENT) PARM(&CLIENT &CLIENTLOC)   /* (500 A) */

             CHGVAR     VAR(&ERRCNT) VALUE(0)
             CHGVAR     VAR(&EXIST) VALUE('0')
             CHGVAR     VAR(&FINISHED) VALUE('0')

/*-------------------------------------------------------------------*/
/*  Main line                                                        */
/*-------------------------------------------------------------------*/

/* Get debug flag */
             CALL       PGM(GETOPTIONS) PARM('000' '*DBGEXP' '003' +
                          '001' &DEBUG)                           /* (650 A) */
             MONMSG     MSGID(CPF0000)                            /* (650 A) */

/* Log run */
             CALL       PGM(WRTLOG) PARM(&CURPGM &EXPSCRP &WORKINGMSG) +
                                                                  /* (650 A) */
             MONMSG     MSGID(CPF0000)                            /* (650 A) */

/* See if we do the actual ftp to host system */  /* 416 A */

             OVRDBF     FILE(FTPEXPDFT) MBR(&EXPSCRP)
             CALL       PGM(FTPCHKSCR) PARM(&EXPFLAG)
             DLTOVR     FILE(FTPEXPDFT)

/*  Get current date/time to create SAP FTP remote file name.        (PAK A) */
             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               RTVSYSVAL  SYSVAL(QDATE) RTNVAR(&CURDTMDY)         /* (PAK A) */
               RTVSYSVAL  SYSVAL(QTIME) RTNVAR(&CURTIME)          /* (PAK A) */
               CVTDAT   DATE(&CURDTMDY) TOVAR(&CURDTYYMD) +
                          FROMFMT(*MDY) TOFMT(*YYMD) TOSEP(*NONE) /* (PAK A) */
             ENDDO                                                /* (PAK A) */

/* Create member name */

  /* Create unique member name when we do the ftp */   /* 416A */

             IF         COND(&EXPFLAG *NE '*NOEXP') THEN(DO) /* 416A */
             CALL       PGM(PIRFTP#) PARM(&NXTNUM)
             CHGVAR     VAR(&NXTNUMA) VALUE(&NXTNUM)
             CHGVAR     VAR(&WHSEA) VALUE(&WHSE)                   /* 411 A */
       /*    CHGVAR     VAR(&MBR) VALUE('W' *CAT &NXTNUMA)            411 D */
             CHGVAR     VAR(&MBR) VALUE('W' *CAT %SST(&WHSEA 2 2) +
                          *CAT &NXTNUMA)                           /* 411 M */
             ENDDO                                           /* 416A */

  /* Create non-unique member name when we don't do the ftp */ /*416A*/

             IF         COND(&EXPFLAG = '*NOEXP') THEN(DO)
             CHGVAR     VAR(&WHSEA) VALUE(&WHSE)
             IF         COND(&CLIENT = &DAIRYLAND +
                         *OR &CLIENT = &GLAZIER) THEN(DO)         /* (DRYaM) */
/*               Create unique member name even though FTP isn't being used. */
                 CALL       PGM(PIRFTP#) PARM(&NXTNUM)            /* (DRYaA) */
                 CHGVAR     VAR(&NXTNUMA) VALUE(&NXTNUM)          /* (DRYaA) */
                 CHGVAR     VAR(&MBR) VALUE('R' *CAT %SST(&WHSEA 2 2) +
                            *CAT &NXTNUMA)                        /* (DRYaA) */
               Enddo                                              /* (DRYaA) */
             ELSE       CMD(DO)                                   /* (DRYaA) */
             CHGVAR     VAR(&MBR) VALUE('W' *CAT &WHSEA)
             Enddo                                                /* (DRYaA) */
             ENDDO

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Exporting route' *BCAT &RTE *TCAT +
                          ' into member' *BCAT &MBR *TCAT ' in +
                          order export files') TOPGMQ(*EXT) +
                          MSGTYPE(*STATUS)

/* Create members for export files */

             IF         COND(&EXPFLAG *NE '*NOEXP') THEN(DO) /* 416A */
             ADDPFM     FILE(&FILEH) MBR(&MBR)
             ADDPFM     FILE(&FILED) MBR(&MBR)
             ADDPFM     FILE(&FILEC) MBR(&MBR)
             ADDPFM     FILE(&FILET) MBR(&MBR)
             ADDPFM     FILE(&FILEB) MBR(&MBR)                    /* (500aA) */
             ADDPFM     FILE(&FILEE) MBR(&MBR)                    /* (500aA) */
             ADDPFM     FILE(&FILEL) MBR(&MBR)                    /* (510eA) */
             ADDPFM     FILE(&FILEP) MBR(&MBR)                    /* (510fA) */
             ADDPFM     FILE(&FILEA) MBR(&MBR)                    /* (520 A) */
             ADDPFM     FILE(&FILEF) MBR(&MBR)                    /* (640aA) */
/*  Add members to extended length export files for TPC.             (TPCaA) */
             IF         COND(&client *eq &TPC) THEN(DO)           /* (TPCaA) */
               ADDPFM     FILE(EXPFORDHSP) MBR(&MBR)              /* (TPCaA) */
               ADDPFM     FILE(EXPFORDDSP) MBR(&MBR)              /* (TPCaA) */
               ADDPFM     FILE(EXPFORDCSP) MBR(&MBR)              /* (TPCaA) */
               ADDPFM     FILE(EXPFORDTSP) MBR(&MBR)              /* (TPCaA) */
             ENDDO                                                /* (TPCaA) */
             ENDDO                                           /* 416A */

             IF         COND(&EXPFLAG *EQ '*NOEXP') THEN(DO) /* 416A */

             CHKOBJ     OBJ(&FILEH) OBJTYPE(*FILE) MBR(&MBR)
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEH) +
                          MBR(&MBR))

             CHKOBJ     OBJ(&FILED) OBJTYPE(*FILE) MBR(&MBR)
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILED) +
                          MBR(&MBR))

             CHKOBJ     OBJ(&FILEC) OBJTYPE(*FILE) MBR(&MBR)
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEC) +
                          MBR(&MBR))

             CHKOBJ     OBJ(&FILET) OBJTYPE(*FILE) MBR(&MBR)
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILET) +
                          MBR(&MBR))

             CHKOBJ     OBJ(&FILEB) OBJTYPE(*FILE) MBR(&MBR)      /* (500aA) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEB) +
                          MBR(&MBR))                              /* (500aA) */

             CHKOBJ     OBJ(&FILEE) OBJTYPE(*FILE) MBR(&MBR)      /* (500aA) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEE) +
                          MBR(&MBR))                              /* (500aA) */

             CHKOBJ     OBJ(&FILEL) OBJTYPE(*FILE) MBR(&MBR)      /* (510eA) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEL) +
                          MBR(&MBR))                              /* (510eA) */

             CHKOBJ     OBJ(&FILEP) OBJTYPE(*FILE) MBR(&MBR)      /* (510fA) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEP) +
                          MBR(&MBR))                              /* (510fA) */

             CHKOBJ     OBJ(&FILEA) OBJTYPE(*FILE) MBR(&MBR)      /* (520 A) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEA) +
                          MBR(&MBR))                              /* (520 A) */

             CHKOBJ     OBJ(&FILEF) OBJTYPE(*FILE) MBR(&MBR)      /* (640aA) */
             MONMSG     MSGID(CPF9815) EXEC(ADDPFM FILE(&FILEF) +
                          MBR(&MBR))                              /* (640aA) */

             ENDDO                                           /* 416A */

/*  Create SAP Export Sales Orders file member.                      (PAK A) */
             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */

               ADDPFM     FILE(SAPEXP) MBR(&MBR)                  /* (PAK A) */
               MONMSG     MSGID(CPF7306) EXEC(DO)
/*               Ignore member not added at this time.               (PAK A) */
/*               Clrpfm file(SAPEXP) mbr(&MBR)                       (PAK A) */
               Enddo                                              /* (PAK A) */

             enddo                                                /* (PAK A) */

/*  Call program to move route to export files */

             OVRDBF     FILE(&FILEH) MBR(&MBR)
             OVRDBF     FILE(&FILED) MBR(&MBR)
             OVRDBF     FILE(&FILEC) MBR(&MBR)
             OVRDBF     FILE(&FILET) MBR(&MBR)
             OVRDBF     FILE(&FILEB) MBR(&MBR)                    /* (500aA) */
             OVRDBF     FILE(&FILEE) MBR(&MBR)                    /* (500aA) */
             OVRDBF     FILE(&FILEL) MBR(&MBR)                    /* (510eA) */
             OVRDBF     FILE(&FILEP) MBR(&MBR)                    /* (510fA) */
             OVRDBF     FILE(&FILEA) MBR(&MBR)                    /* (520 A) */
             OVRDBF     FILE(&FILEF) MBR(&MBR)                    /* (640aA) */
/*  Override to SAP Export file member.                              (PAK A) */
             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               OVRDBF     FILE(SAPEXP) MBR(&MBR)                  /* (PAK A) */
             ENDDO                                                /* (PAK A) */

/*   Call pgm to create XML ASN files and EXPFORDASN file      HARaA */
             IF         COND(&client *eq &HARBOR) THEN(DO)
             CALL       PGM(XM157) PARM(&WHSE &RTID &RTE &RTN)
             ENDDO

             CALL       PGM(&EXPPGM) PARM(&WHSE &RTID &RTE &RTN)

             DLTOVR     FILE(&FILEH &FILED &FILEC &FILET)
/**          DLTOVR     FILE(&FILEB &FILEE)                          (510eD) */
             DLTOVR     FILE(&FILEB &FILEE &FILEL)                /* (510eM) */
             DLTOVR     FILE(&FILEP)                              /* (510fA) */
             DLTOVR     FILE(&FILEA)                              /* (520 A) */
             DLTOVR     FILE(&FILEF)                              /* (640aA) */
             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               dltovr     FILE(SAPEXP)                            /* (PAK A) */
             enddo                                                /* (PAK A) */
             IF         COND(&client *eq &TPC) THEN(DO)           /* (TPCaA) */
               CPYF       FROMFILE(&FILEH) TOFILE(EXPFORDHSP) +
                            FROMMBR(&MBR) TOMBR(&MBR) +
                            MBROPT(*REPLACE) FMTOPT(*MAP)         /* (TPCaA) */
               MONMSG     MSGID(CPF2869 CPF2817)                  /* (TPCaA) */
               CPYF       FROMFILE(&FILED) TOFILE(EXPFORDDSP) +
                            FROMMBR(&MBR) TOMBR(&MBR) +
                            MBROPT(*REPLACE) FMTOPT(*MAP)         /* (TPCaA) */
               MONMSG     MSGID(CPF2869 CPF2817)                  /* (TPCaA) */
               CPYF       FROMFILE(&FILEC) TOFILE(EXPFORDCSP) +
                            FROMMBR(&MBR) TOMBR(&MBR) +
                            MBROPT(*REPLACE) FMTOPT(*MAP)         /* (TPCaA) */
               MONMSG     MSGID(CPF2869 CPF2817)                  /* (TPCaA) */
               CPYF       FROMFILE(&FILET) TOFILE(EXPFORDTSP) +
                            FROMMBR(&MBR) TOMBR(&MBR) +
                            MBROPT(*REPLACE) FMTOPT(*MAP)         /* (TPCaA) */
               MONMSG     MSGID(CPF2869 CPF2817)                  /* (TPCaA) */
             enddo                                                /* (TPCaA) */

/* Check if we should export file to host system */  /* 414 A */

   /* &EXPFLAG retreived at beginning of program */  /* 414 A */

        /*   OVRDBF     FILE(FTPEXPDFT) MBR(&EXPSCRP)   416 D */
        /*   CALL       PGM(FTPCHKSCR) PARM(&EXPFLAG)   416 D */
        /*   DLTOVR     FILE(FTPEXPDFT)                 416 D */

             IF         COND(&EXPFLAG = '*NOEXP') THEN(GOTO SKIPFTP)

/* For H&M Wagner, skip ftp section */               /* HMWbA */
             IF         COND(&CLIENT = 'HMWAGNER') THEN(GOTO SKIPFTP)

/* Create members for ftp files */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Creating export script for route' +
                          *BCAT &RTE *TCAT ' from member' *BCAT +
                          &MBR) TOPGMQ(*EXT) MSGTYPE(*STATUS)

             ADDPFM     FILE(FTPEXPLOG) MBR(&MBR)
         /*  CPYSRCF    FROMFILE(FTPEXPDFT) TOFILE(FTPEXPSCRP) +   416D */
         /*               FROMMBR(DEFAULT) TOMBR(&MBR)             416D */

             CPYSRCF    FROMFILE(FTPEXPDFT) TOFILE(FTPEXPSCRP) +
                          FROMMBR(&EXPSCRP) TOMBR(&MBR)          /*416M*/

/* Retrieve library names for files */

             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               RTVMBRD    FILE(SAPEXP) MBR(&MBR) RTNLIB(&LIBH)    /* (PAK A) */
             ENDDO                                                /* (PAK A) */
             ELSE       CMD(DO)                                   /* (PAK A) */
             RTVMBRD    FILE(&FILEH) MBR(&MBR) RTNLIB(&LIBH)
             RTVMBRD    FILE(&FILED) MBR(&MBR) RTNLIB(&LIBD)
             RTVMBRD    FILE(&FILEC) MBR(&MBR) RTNLIB(&LIBC)
             RTVMBRD    FILE(&FILET) MBR(&MBR) RTNLIB(&LIBT)
             RTVMBRD    FILE(&FILEB) MBR(&MBR) RTNLIB(&LIBB)      /* (500aA) */
             RTVMBRD    FILE(&FILEE) MBR(&MBR) RTNLIB(&LIBE)      /* (500aA) */
             RTVMBRD    FILE(&FILEL) MBR(&MBR) RTNLIB(&LIBL)      /* (510eA) */
             RTVMBRD    FILE(&FILEP) MBR(&MBR) RTNLIB(&LIBP)      /* (510fA) */
             RTVMBRD    FILE(&FILEA) MBR(&MBR) RTNLIB(&LIBA)      /* (520 A) */
             RTVMBRD    FILE(&FILEF) MBR(&MBR) RTNLIB(&LIBF)      /* (640aA) */
             ENDDO                                                /* (PAK A) */

/* Create FTP local and remote file names */

             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               CHGVAR     VAR(&LCLFILEH) VALUE(&LIBH *TCAT +
                            '/SAPEXP.' *CAT &MBR)                 /* (PAK A) */
             ENDDO                                                /* (PAK A) */
             Else if cond(&client = &TPC) THEN(DO)                /* (TPCaA) */
               CHGVAR     VAR(&LCLFILEH) VALUE(&LIBH *TCAT +
                            '/EXPFORDHSP.' *CAT &MBR)             /* (TPCaA) */
               CHGVAR     VAR(&LCLFILED) VALUE(&LIBH *TCAT +
                            '/EXPFORDDSP.' *CAT &MBR)             /* (TPCaA) */
               CHGVAR     VAR(&LCLFILEC) VALUE(&LIBH *TCAT +
                            '/EXPFORDCSP.' *CAT &MBR)             /* (TPCaA) */
               CHGVAR     VAR(&LCLFILET) VALUE(&LIBH *TCAT +
                            '/EXPFORDTSP.' *CAT &MBR)             /* (TPCaA) */
             ENDDO                                                /* (TPCaA) */
             else cmd(DO)                                         /* (PAK A) */
             CHGVAR     VAR(&LCLFILEH) VALUE(&LIBH *TCAT +
                          '/EXPFORDH.' *CAT &MBR)
             CHGVAR     VAR(&LCLFILED) VALUE(&LIBD *TCAT +
                          '/EXPFORDD.' *CAT &MBR)
             CHGVAR     VAR(&LCLFILEC) VALUE(&LIBC *TCAT +
                          '/EXPFORDC.' *CAT &MBR)
             CHGVAR     VAR(&LCLFILET) VALUE(&LIBT *TCAT +
                          '/EXPFORDT.' *CAT &MBR)                 /* (500aM) */
             CHGVAR     VAR(&LCLFILEB) VALUE(&LIBB *TCAT +
                          '/EXPFORDB.' *CAT &MBR)                 /* (500aA) */
             CHGVAR     VAR(&LCLFILEE) VALUE(&LIBE *TCAT +
                          '/EXPFORDE.' *CAT &MBR)                 /* (500aA) */
             CHGVAR     VAR(&LCLFILEL) VALUE(&LIBL *TCAT +
                          '/EXPFORDL.' *CAT &MBR)                 /* (510eA) */
             CHGVAR     VAR(&LCLFILEP) VALUE(&LIBP *TCAT +
                          '/EXPFORDP.' *CAT &MBR)                 /* (510fA) */
             CHGVAR     VAR(&LCLFILEA) VALUE(&LIBA *TCAT +
                          '/EXPFORDASN.' *CAT &MBR)               /* (520 A) */
             CHGVAR     VAR(&LCLFILEF) VALUE(&LIBF *TCAT +
                          '/EXPFORDO.' *CAT &MBR)                 /* (640aA) */
             ENDDO                                                /* (PAK A) */

     /*      CHGVAR     VAR(&RMTFILEH) VALUE(&MBR *TCAT 'H.ORD')  */
     /*      CHGVAR     VAR(&RMTFILED) VALUE(&MBR *TCAT 'D.ORD')  */
     /*      CHGVAR     VAR(&RMTFILEC) VALUE(&MBR *TCAT 'C.ORD')  */
     /*      CHGVAR     VAR(&RMTFILET) VALUE(&MBR *TCAT 'T.ORD')  */

             IF         COND(&CLIENT *EQ &CITYLINE *OR &CLIENT *EQ +
                          &EI *or &client *eq &HARBOR +
                              *or &client *eq &ELLENBEE +
                              *or &client *eq &CAPITOLCTY +
                              *or &client *eq &CASHWA +
                              *or &client *eq &FISCHER +
                              *or &client *eq &HMWAGNER +
                              *or &client *eq &GETFRESH +
                              *or &client *eq &GREENLEAF +
                              *or &client *eq &STERN +
                              *or &client *eq &SGC +
                              *or &client *eq &SEASHORE +
                              *or &client *eq &TNT +
                              *or &client *eq &PRESTO +
                              *or &client *eq &CBI) THEN(DO)      /* (TNT M) */
     /*                   &EI *OR &CLIENT *EQ &HARBOR) THEN(DO)   /* (510eD) */
               CHGVAR     VAR(&SHORTNUMA) VALUE(%SST(&NXTNUMA 4 4)) +
                                                                  /* (EI  A) */
               SELECT                                             /* (SGC A) */
     /*        WHEN       COND(&CLIENT = &SGC) THEN(DO)              (PFC D) */
               WHEN       COND(&CLIENT = &SGC +
                           *OR &CLIENT = &PRESTO) +
                          THEN(DO)                                /* (PFC M) */
                 CHGVAR     VAR(&FILEPREFX) VALUE('EXPFWIL')      /* (SGC A) */
               ENDDO                                              /* (SGC A) */
               OTHERWISE  CMD(DO)                                 /* (SGC A) */
                 CHGVAR     VAR(&FILEPREFX) VALUE('EXPFORD')      /* (SGC A) */
               ENDDO                                              /* (SGC A) */
               ENDSELECT                                          /* (SGC A) */

               CHGVAR     VAR(&RMTFILEH) VALUE(&FILEPREFX *CAT 'H' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILED) VALUE(&FILEPREFX *CAT 'D' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEC) VALUE(&FILEPREFX *CAT 'C' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILET) VALUE(&FILEPREFX *CAT 'T' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEB) VALUE(&FILEPREFX *CAT 'B' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEE) VALUE(&FILEPREFX *CAT 'E' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEL) VALUE(&FILEPREFX *CAT 'L' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEP) VALUE(&FILEPREFX *CAT 'P' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEA) VALUE(&FILEPREFX *CAT 'ASN' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
               CHGVAR     VAR(&RMTFILEF) VALUE(&FILEPREFX *CAT 'O' +
                            *CAT &SHORTNUMA *TCAT '.TXT')         /* (SGC M) */
             ENDDO                                                /* (EI  A) */

    /*       IF         COND(&CLIENT *NE &CITYLINE *AND &CLIENT *NE +
                          &EI) THEN(DO)     (HAR D) */
    ELSE       CMD(DO)                  /*  (HAR M) */

             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               CHGVAR     VAR(&RMTFILEH) VALUE(&CURDTYYMD *CAT &CURTIME)
                                                                  /* (PAK A) */
             ENDDO                                                /* (PAK A) */

             IF         COND(&client *eq &TPC) THEN(DO)           /* (TPC A) */
               CALL       PGM(GETEXP#) PARM('*ORD' &EXPFNBR)      /* (TPC A) */
               CHGVAR     VAR(&RMTFILEH) VALUE('wmwh' *CAT &expfnbr) +
                                                                  /* (TPC A) */
               CHGVAR     VAR(&RMTFILED) VALUE('wmwd' *CAT &expfnbr) +
                                                                  /* (TPC A) */
               CHGVAR     VAR(&RMTFILEC) VALUE('wmwc' *CAT &expfnbr) +
                                                                  /* (TPC A) */
               CHGVAR     VAR(&RMTFILET) VALUE('wmwt' *CAT &expfnbr) +
                                                                  /* (TPC A) */
             ENDDO                                                /* (TPC A) */

             else cmd(DO)                                         /* (PAK A) */

             CHGVAR     VAR(&RMTFILEH) VALUE('EXPFWILL' *CAT %SST(&WHSEA +
                          2 2) *CAT 'H.Txt')
             CHGVAR     VAR(&RMTFILED) VALUE('EXPFWILL' *CAT %SST(&WHSEA +
                          2 2) *CAT 'D.Txt')
             CHGVAR     VAR(&RMTFILEC) VALUE('EXPFWILL' *CAT %SST(&WHSEA +
                          2 2) *CAT 'C.Txt')
             CHGVAR     VAR(&RMTFILET) VALUE('EXPFWILL' *CAT %SST(&WHSEA +
                          2 2) *CAT 'T.Txt')
             CHGVAR     VAR(&RMTFILEB) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'B.Txt')                      /* (500aA) */
             CHGVAR     VAR(&RMTFILEE) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'E.Txt')                      /* (500aA) */
             CHGVAR     VAR(&RMTFILEL) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'L.Txt')                      /* (510eA) */
             CHGVAR     VAR(&RMTFILEP) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'P.Txt')                      /* (510fA) */
             CHGVAR     VAR(&RMTFILEA) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'ASN.Txt')                    /* (520 A) */
             CHGVAR     VAR(&RMTFILEF) VALUE('EXPFORD' *CAT %SST(&WHSEA +
                          2 2) *CAT 'LOT.Txt')                    /* (640aA) */
      ENDDO                                                       /* (PAK A) */
    enddo                                                         /* (500 A) */

/* Call program to create script */

             CHGVAR     VAR(&EXPTYPE) VALUE('*ORD')
             OVRDBF     FILE(FTPEXPSCRP) MBR(&MBR)

/*           CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +            */
/*                        &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +          */
/*                        &RMTFILED &RMTFILEC &RMTFILET)          /* (500aD) */
/*           CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +            */
/*                        &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +          */
/*                        &RMTFILED &RMTFILEC &RMTFILET &LCLFILEB +
/*                        &RMTFILEB &LCLFILEE &RMTFILEE)          /* (510dD) */
             CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +
                          &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +
                          &RMTFILED &RMTFILEC &RMTFILET &LCLFILEB +
                          &RMTFILEB &LCLFILEE &RMTFILEE &PATHH +
                          &PATHD &PATHC &PATHT &PATHB &PATHE +
                          &LCLFILEL &RMTFILEL &PATHL +
                          &LCLFILEP &RMTFILEP &PATHP +
                          &LCLFILEA &RMTFILEA &PATHA +
                          &LCLFILEF &RMTFILEF &PATHF)             /* (640aA) */
/*                        &LCLFILEA &RMTFILEA &PATHA)             /* (640aD) */
/*                        &LCLFILEP &RMTFILEP &PATHP)   (520 D)   /* (510fM) */
/*                        &LCLFILEL &RMTFILEL &PATHL)                (510fD) */
/*                        &PATHD &PATHC &PATHT &PATHB &PATHE)        (510eD) */

             DLTOVR     FILE(FTPEXPSCRP)

/* Execute FTP */

             IF         COND(&CLIENT *EQ &PACKERS) THEN(DO)       /* (PAKaA) */

/*             Send file to IFS instead of using FTP.                (PAKaA) */
               CPYTOIMPF  FROMFILE(*LIBL/SAPEXP &MBR) +
                            TOSTMF(&PATHH) MBROPT(*REPLACE) +
                            STMFCODPAG(*PCASCII) RCDDLM(*CRLF) +
                            DTAFMT(*FIXED)                        /* (PAKaA) */
               MONMSG     MSGID(CPF2817) EXEC(DO)                 /* (PAKaA) */
                 CHGVAR     VAR(&RTN) VALUE('*PGMQ')              /* (PAKaA) */
               ENDDO                                              /* (PAKaA) */

             ENDDO                                                /* (PAKaA) */

             ELSE       CMD(DO)                                   /* (PAKaA) */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export files using FTP for +
                          member' *BCAT &MBR) TOPGMQ(*EXT) +
                          MSGTYPE(*STATUS)

             OVRDBF     FILE(INPUT) TOFILE(*LIBL/FTPEXPSCRP) MBR(&MBR)
             OVRDBF     FILE(OUTPUT) TOFILE(*LIBL/FTPEXPLOG) MBR(&MBR)

             FTP        RMTSYS(DUMMYSYSTEM)

             DLTOVR     FILE(INPUT OUTPUT)

/* Now check FTP log file for errors */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Checking FTP log for errors') +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)

             CHGVAR     VAR(&EXPTYPE) VALUE('*ORD')
             OVRDBF     FILE(FTPEXPLOG) MBR(&MBR)
             IF         COND(&CLIENT = &TPC) THEN(DO)             /* (TPCbA) */
               CHGVAR     VAR(&TFRNEEDED) VALUE(4)                /* (TPCbA) */
             ENDDO                                                /* (TPCbA) */

             CALL       PGM(FTPCHKLOG) PARM(&TFRNEEDED &MBR &PGM +
                          &RTN &MSGKEY)

             DLTOVR     FILE(FTPEXPLOG)

             ENDDO                                                /* (PAKaA) */

/* If there was an error, just return */

/*           IF         COND(&RTN = '*PGMQ') THEN(RETURN)            (510CD) */
             IF         COND(&RTN = '*PGMQ') THEN(GOTO GETOUT)    /* (510cM) */

/* This is the place to skip to if script had *NO EXPORT* */ /* 414A */

SKIPFTP:

/* We finished without error */

             CHGVAR     VAR(&FINISHED) VALUE('1')
             CHGVAR     VAR(&RTN) VALUE('*OK')

             SELECT                                               /* (DRY A) */
             WHEN       COND(&CLIENT = &DAIRYLAND) THEN(DO)       /* (DRY A) */

               RTVMBRD    FILE(&FILEH) MBR(&MBR) RTNLIB(&RUNTIMEENV) /*(DRYbM)*/

/*           Call Dairyland Interface Pgm.                           (DRY A) */
               CALL       PGM(&HOSTLIB/BFCECO01C) PARM(&WHSE &RTE +
                            &RTID &MBR &RUNTIMEENV &RTNH)         /* (DRY A) */
               MONMSG     MSGID(CPF0001) EXEC(CHGVAR VAR(&FINISHED) +
                            VALUE('0'))                           /* (DRY A) */
               SELECT                                             /* (DRY A) */
/*             Set flag for export mbr cleanup.                      (DRY A) */
               When       COND(&RTNH *EQ '*OK') THEN(DO)          /* (DRY A) */
                 CHGVAR     VAR(&EXPFLAG) VALUE(&RTNH)            /* (DRY A) */
               ENDDO                                              /* (DRY A) */

/*             Set flag for export failure, leave mbrs behind.       (DRY A) */
               When       COND(&RTNH *NE '*OK') THEN(DO)          /* (DRY A) */
                 CHGVAR     VAR(&FINISHED) VALUE('0')             /* (DRY A) */
               ENDDO                                              /* (DRY A) */
               ENDSELECT                                          /* (DRY A) */
               IF         COND(&FINISHED = '0' *OR &RTNH *NE '*OK') +
                            THEN(DO)                              /* (DRYcA) */
                 OVRPRTF    FILE(QEZJOBLOG) TOFILE(QEZJOBLOG) OUTQ(BFCEXCP) +
                                                                  /* (DRYcA) */
                 DSPJOBLOG  OUTPUT(*PRINT)                        /* (DRYcA) */
               ENDDO                                              /* (DRYcA) */

             ENDDO                                                /* (DRY A) */
             ENDSELECT                                            /* (DRY A) */

/*  Clean up before leaving */

             DLTOVR     FILE(*ALL)

/* If we skipped FTP then don't delete members */  /* 414 A */


             IF         COND(&client  = 'GSC') THEN(DO)           /* (GSC A) */
/*             GSC wants export mbrs removed after export.        /* (GSC A) */
               CHGVAR     VAR(&EXPFLAG) VALUE('*EXPORT ')         /* (GSC A) */
             enddo                                                /* (GSC A) */
        /*   IF         COND(&EXPFLAG = '*NOEXP') THEN(GOTO SKIPFTP2) +
                                                                  /* (650 D) */
             IF         COND(&EXPFLAG = '*NOEXP' *OR &DEBUG *EQ 'Y') +
                          THEN(GOTO CMDLBL(SKIPFTP2))             /* (650 M) */

             RMVM       FILE(&FILEH) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILED) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILEC) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILET) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILEB) MBR(&MBR)                    /* (500aA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILEE) MBR(&MBR)                    /* (500aA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(&FILEL) MBR(&MBR)                    /* (510eA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510eA) */
             RMVM       FILE(&FILEP) MBR(&MBR)                    /* (510fA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510fA) */
             RMVM       FILE(&FILEA) MBR(&MBR)                    /* (520 A) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (520 A) */
             RMVM       FILE(&FILEF) MBR(&MBR)                    /* (640aA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (640aA) */
             IF         COND(&client *eq &packers) THEN(DO)       /* (PAK A) */
               rmvm     FILE(SAPEXP) mbr(&mbr)                    /* (PAK A) */
               MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                            CPF3273 CPF7301 CPF7310)              /* (PAK A) */
             enddo                                                /* (PAK A) */
             IF         COND(&client *eq &TPC) THEN(DO)           /* (TPCaA) */
               rmvm     FILE(EXPFORDHSP) mbr(&mbr)                /* (TPCaA) */
               MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                            CPF3273 CPF7301 CPF7310)              /* (TPCaA) */
               rmvm     FILE(EXPFORDDSP) mbr(&mbr)                /* (TPCaA) */
               MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                            CPF3273 CPF7301 CPF7310)              /* (TPCaA) */
               rmvm     FILE(EXPFORDCSP) mbr(&mbr)                /* (TPCaA) */
               MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                            CPF3273 CPF7301 CPF7310)              /* (TPCaA) */
               rmvm     FILE(EXPFORDTSP) mbr(&mbr)                /* (TPCaA) */
               MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                            CPF3273 CPF7301 CPF7310)              /* (TPCaA) */
             enddo                                                /* (TPCaA) */
             RMVM       FILE(FTPEXPSCRP) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */
             RMVM       FILE(FTPEXPLOG) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (510bA) */

SKIPFTP2:                                                /* 414A */

             RMVMSG     CLEAR(*ALL)

/* For H&M Wagner, skip sending message */            /* HMWbA */
             IF         COND(&CLIENT = 'HMWAGNER') THEN(GOTO GETOUT)

/*  Send Successful message */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for route' +
                          *BCAT &RTE *TCAT '(FTP Mbr' *BCAT &MBR +
                          *TCAT ').') TOMSGQ(&FTPMSGQ) +
                          MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for route' +
                          *BCAT &RTE *TCAT '(FTP Mbr' *BCAT &MBR +
                          *TCAT ').') MSGTYPE(*INFO) KEYVAR(&MSGKEY)

             CHGVAR     VAR(&DEBUGMSG) VALUE('Export successful for +
                          route' *BCAT &RTE *TCAT '(FTP Mbr' *BCAT +
                          &MBR *TCAT ').')
             CALL       PGM(WRTLOG) PARM(&CURPGM &EXPSCRP &DEBUGMSG) +
                                                                  /* (650 A) */
             MONMSG     MSGID(CPF0000)                            /* (650 A) */

             RETURN

/*  Receive any messages and pass them on  */

 GETOUT:

             CHGVAR     VAR(&ERRCNT) VALUE(&ERRCNT + 1)
             IF COND(&ERRCNT = 3) THEN(GOTO CMDLBL(BOTTOM))

             IF COND(&FINISHED = '0') THEN(DO)
             CHGVAR     VAR(&RTN) VALUE('*PGMQ')
             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Route' *BCAT &RTE *TCAT '(FTP +
                          Mbr' *BCAT &MBR *TCAT ').') +
                          TOMSGQ(&FTPMSGQ) MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Route' *BCAT &RTE *TCAT '(FTP +
                          Mbr' *BCAT &MBR *TCAT ').') +
                          TOMSGQ(&FTPERRMSGQ) MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Route' *BCAT &RTE *TCAT '(FTP +
                          Mbr' *BCAT &MBR *TCAT ').') +
                          MSGTYPE(*INFO) KEYVAR(&MSGKEY)
             ENDDO

 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))

               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                     MSGDTA(&MSGDTA) MSGTYPE(*COMP)

               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                     MSGDTA(&MSGDTA) TOMSGQ(&FTPMSGQ) MSGTYPE(*COMP)

             IF COND(&FINISHED = '0') THEN(DO)
               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) TOMSGQ(&FTPERRMSGQ) +
                          MSGTYPE(*COMP)
             ENDDO

             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 NOMSG:

 BOTTOM:

             ENDPGM
