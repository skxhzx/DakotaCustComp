/*-------------------------------------------------------------------*/
/*                                                                   */
/*  RH550CL    Batch PIR Label Printing                              */
/*  September 4, 2012                                                */
/*  Rod Roller                                                       */
/*                                                                   */
/*  NOTE: For this to work the customer must also have UT880CL,      */
/*        AND PFMT revisions 640a & 640b,                            */
/*        AND you must set user BFCPRINT authority to *PUBLIC *USE!  */
/*                                                                   */
/*  Revisions                                                        */
/*                                                                   */
/*    02/08/13  RTR  650a                                            */
/*      - Revised to use 50 transaction numbers.                     */
/*                                                                   */
/*-------------------------------------------------------------------*/

 RH550CL:    PGM

  /* Option program. */

             DCL        VAR(&OPTPGM) TYPE(*CHAR) LEN(10) VALUE(RH550)

  /* Report program. */

             DCL        VAR(&RPTPGM) TYPE(*CHAR) LEN(10) VALUE(RH555CL)

  /* Informational message. */

             DCL        VAR(&CANCELMSG) TYPE(*CHAR) LEN(60) +
                          VALUE('Batch PIR Label Printing')

             DCL        VAR(&DEV)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&FORM)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&RETURN)     TYPE(*CHAR) LEN(8)
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)
             DCL        VAR(&TR01)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR02)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR03)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR04)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR05)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR06)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR07)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR08)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR09)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR10)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR11)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR12)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR13)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR14)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR15)       TYPE(*CHAR) LEN(7)
             DCL        VAR(&TR16)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR17)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR18)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR19)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR20)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR21)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR22)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR23)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR24)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR25)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR26)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR27)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR28)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR29)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR30)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR31)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR32)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR33)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR34)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR35)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR36)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR37)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR38)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR39)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR40)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR41)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR42)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR43)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR44)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR45)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR46)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR47)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR48)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR49)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&TR50)       TYPE(*CHAR) LEN(7)           /* 650a */
             DCL        VAR(&WHSE)       TYPE(*CHAR) LEN(3)

             MONMSG     MSGID(CPF0000)   EXEC(GOTO CMDLBL(GETOUT))

/*  Get report options. */

 PROMPT:
             CALL       PGM(&OPTPGM) PARM(&RETURN &TR01 &TR02 +
                          &TR03 &TR04 &TR05 &TR06 &TR07 &TR08 +
                          &TR09 &TR10 &TR11 &TR12 &TR13 &TR14 +
                          &TR15 &TR16 &TR17 &TR18 &TR19 &TR20 +
                          &TR21 &TR22 &TR23 &TR24 &TR25 &TR26 +
                          &TR27 &TR28 &TR29 &TR30 &TR31 &TR32 +
                          &TR33 &TR34 &TR35 &TR36 &TR37 &TR38 +
                          &TR39 &TR40 &TR41 &TR42 &TR43 &TR44 +
                          &TR45 &TR46 &TR47 &TR48 &TR49 &TR50 +
                          &DEV &FORM &WHSE)                   /* 650a */

/*  See if user wants to proceed. */

             IF (&RETURN = '*EXIT' *OR &RETURN = '*CANCEL') THEN(DO)

               SNDPGMMSG  MSGID(PIR9801) MSGF(PIRMSGF) +
                          MSGDTA(&CANCELMSG) +
                          MSGTYPE(*INFO)
               RETURN
               ENDDO

/*  Otherwise, run program. */

 SUBMIT:
      /*     SBMJOB     CMD(CALL PGM(&RPTPGM) PARM(&TR01 &TR02 &TR03 +
                          &TR04 &TR05 &TR06 &TR07 &TR08 &TR09 &TR10 +
                          &TR11 &TR12 &TR13 &TR14 &TR15 &DEV &FORM +
                          &WHSE))                                650a */
             SBMJOB     CMD(CALL PGM(&RPTPGM) PARM(&TR01 &TR02 +
                          &TR03 &TR04 &TR05 &TR06 &TR07 &TR08 +
                          &TR09 &TR10 &TR11 &TR12 &TR13 &TR14 +
                          &TR15 &TR16 &TR17 &TR18 &TR19 &TR20 +
                          &TR21 &TR22 &TR23 &TR24 &TR25 &TR26 +
                          &TR27 &TR28 &TR29 &TR30 &TR31 &TR32 +
                          &TR33 &TR34 &TR35 &TR36 &TR37 &TR38 +
                          &TR39 &TR40 &TR41 &TR42 &TR43 &TR44 +
                          &TR45 &TR46 &TR47 &TR48 &TR49 &TR50 +
                          &DEV &FORM &WHSE))                  /* 650a */

             GOTO       CMDLBL(PROMPT)

 /* Receive any messages and pass them on */

 GETOUT:
 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                        MSGDTA(&MSGDTA) MSGTYPE(*COMP)
             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 OUT:
 NOMSG:

   /* Clean up before leaving */

             RCLRSC     LVL(*CALLER)

             ENDPGM
