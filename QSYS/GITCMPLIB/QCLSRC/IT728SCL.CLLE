/*********************************************************************/
/*   Copyright (C) 2004 BFC Software, Inc. - All Rights Reserved     */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*  IT728SCL   FTP export item adjustments w/sign                    */
/*  08 September 2004                                                */
/*  Max Blacknik                                                     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Revisions:                                                       */
/*                                                                   */
/*  09/08/04  MLB  4.17                                              */
/*    - Created.                                                     */
/*                                                                   */
/*  03/26/08  MLB  5.20                                              */
/*    - Enh: Added client custom code support to program.            */
/*  03/26/08  MLB  5.20a                                             */
/*    - Enh: Added MONMSG's to all RMVM's at end of pgm.             */
/*  03/26/08  MLB  5.20b                                             */
/*    - Enh: Added support to program for type *ORD to build         */
/*      export strings for two new files, EXPFORDB, EXPFORDE.        */
/*                                                                   */
/*  03/01/13  MLB  6.50                                              */
/*    - Fix: Revised pgm to correct value loaded into &PGM.          */
/*  04/21/13  RTR  6.50a                                             */
/*    - Enh: Added adjustment license file.                          */
/*    01/31/13  MLB  6.50c                                           */
/*      - Enh: Added 6 new return parms on call to FTPCRTSCRP        */
/*        program to return path statement created for export files. */
/*  09/03/15  RTR  7.00a                                             */
/*    - Enh: Added call for Returns as Adjustments.                  */
/*  09/04/15  RTR  7.00b                                             */
/*    - Enh: Added LICADJ processing.                                */
/*  02/01/17  RTR  7.00c                                             */
/*    - Fix: Changed 700a to use option value for Rtn-as-Adj.        */
/*                                                                   */
/*    09/19/17  RTR  7.10a                                           */
/*      - Enh: Removed extra message when no records, added          */
/*        'adjustment' to message.                                   */
/*    05/08/20  RTR  7.40a                                           */
/*      - Enh: Added email when FTP fails, addresses in OPTIONINT    */
/*        record.                                                    */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Springfield Grocery                     */
/*                                                                   */
/*    03/25/08  MLB  SGC                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Halsey Foodservice                      */
/*                                                                   */
/*    10/22/09  MLB  HAL                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client to SGC mod.                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Capitol City Produce                    */
/*                                                                   */
/*    04/22/10  MLB  CCP                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client to SGC mod.                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Crumbley Paper & Foodservice            */
/*                                                                   */
/*    06/17/11  MLB  CPC                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client to SGC mod.                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: European Imports                        */
/*                                                                   */
/*    07/16/11  MLB  EI                                              */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client to SGC mod.                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Stern Produce                           */
/*                                                                   */
/*    12/07/12  MLB  SPI                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client SPI to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Cashwa                                  */
/*                                                                   */
/*    02/18/13  LMC  CWD                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client CWD to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Greenleaf                               */
/*                                                                   */
/*    02/27/13  MLB  GLP                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client GLP to SGC mod.                               */
/*    04/21/13  RTR  GLPb                                            */
/*      - Added 'S' to EXPFADJ filename at request of ProducePro     */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Get Fresh Sales                         */
/*                                                                   */
/*    01/31/13  MLB  GFS                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client GFS to SGC mod.                               */
/*    01/31/13  MLB  GFSa                                            */
/*      - Revised program to loop two times. First time, look for    */
/*        items that start with Gxxxxxxxx. Second time, will be to   */
/*        look for items that start with Fxxxxxxxx. The export files */
/*        will be placed into a separate folder for each company.    */
/*        BFCExpPrd/G01 or BFCExpPrd/F02 for production or           */
/*        BFCExpTst/G01 or BFCExpTst/F02 for test.                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: H&M Wagner                              */
/*                                                                   */
/*    08/06/14  RTR  HMW                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJSxxxx.txt where xxxx is           */
/*        a unique number.                                           */
/*      - Added client HMW to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: S.Bertram                               */
/*                                                                   */
/*    09/04/15  RTR  SBRa                                            */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJSxxxx.txt where xxxx is           */
/*        a unique number.                                           */
/*      - Added client SBR to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Foods Galore                            */
/*                                                                   */
/*    04/06/16  RTR  FGLa                                            */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJSxxxx.txt where xxxx is           */
/*        a unique number.                                           */
/*      - Added client FGL to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Seashore Fruit & Produce                */
/*                                                                   */
/*    02/23/18  RTR  SFPa                                            */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJSxxxx.txt where xxxx is           */
/*        a unique number.                                           */
/*      - Added client SFP to SGC mod.                               */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Client Custom Revisions: Presto Foods                            */
/*                                                                   */
/*    10/02/14  RTR  PFC                                             */
/*      - Revised program to create remote file name in the          */
/*        following format: EXPFADJxxxx.txt where xxxx is            */
/*        a unique number.                                           */
/*      - Added client to SGC mod.                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Parameters:                                                      */
/*                                                                   */
/*    &WHSE   -  Warehouse                                           */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*  Notes:                                                           */
/*                                                                   */
/*   This program will create a unique member name and then create   */
/*   new member in the export file and in the FTP script             */
/*   and log files.                                                  */
/*                                                                   */
/*   This program is similar to using IT726CL except that it         */
/*   hard codes the sign character instead of letting ftp change     */
/*   the high order bit of the right most number.                    */
/*                                                                   */
/*   Option 10 - Export Item Adjustments only uses the high order    */
/*   bit method.                                                     */
/*                                                                   */
/*   This program can be used in place of IT726CL - Export           */
/*   item adjustments. That program would execute IT726              */
/*   which would generate and execute an ftp script to send the      */
/*   adjustment export file to the host system.                      */
/*                                                                   */
/*-------------------------------------------------------------------*/

 IT728SCL:    PGM        PARM(&WHSE)

/*-------------------------------------------------------------------*/
/*  Constant declarations                                            */
/*-------------------------------------------------------------------*/

  /* Client ID's.    */                                           /* (520 A) */

             DCL        VAR(&CAPITOLCTY) TYPE(*CHAR) LEN(10) +
                          VALUE('CAPITOLCTY')                     /* (CCP A) */
             DCL        VAR(&CRUMBLEY) TYPE(*CHAR) LEN(10) +
                          VALUE('CRUMBLEY')                       /* (CPC A) */
             DCL        VAR(&EuroImport) TYPE(*CHAR) LEN(10) +
                          VALUE('EI')                             /* (EI  A) */
             DCL        VAR(&GETFRESH) TYPE(*CHAR) LEN(10) +
                          VALUE('GETFRESH')                       /* (GFS A) */
             DCL        VAR(&HALSEY)  TYPE(*CHAR) LEN(10) +
                          VALUE('HALSEY    ')                     /* (HAL A) */
             DCL        VAR(&SGC)     TYPE(*CHAR) LEN(8) +
                          VALUE('SGC')                            /* (SGC A) */
             DCL        VAR(&STERN)   TYPE(*CHAR) LEN(10) +
                          VALUE('STERN')                          /* (SPI A) */
             DCL        VAR(&CASHWA)  TYPE(*CHAR) LEN(10) +
                          VALUE('CASHWA')                         /* (CWD A) */
             DCL        VAR(&GREENLEAF)  TYPE(*CHAR) LEN(10) +
                          VALUE('GREENLEAF ')                     /* (GLP A) */
             DCL        VAR(&HMWAGNER)  TYPE(*CHAR) LEN(10) +
                          VALUE('HMWAGNER  ')                     /* (HMW A) */
             DCL        VAR(&SBERTRAM)  TYPE(*CHAR) LEN(10) +
                          VALUE('SBERTRAM  ')                     /* (SBR A) */
             DCL        VAR(&FOODSGAL) TYPE(*CHAR) LEN(10) +
                          VALUE('FOODSGALOR')                     /* (FGLaA) */
             DCL        VAR(&SEASHORE) TYPE(*CHAR) LEN(10) +
                          VALUE('SEASHORE  ')                     /* (SFPaA) */
             DCL        VAR(&PRESTO)  TYPE(*CHAR) LEN(10) +
                          VALUE('PRESTOFOOD')                     /* (PFC A) */

  /* Export program. */

             DCL        VAR(&EXPPGM) TYPE(*CHAR) LEN(8) +
                          VALUE(IT728)
             DCL        VAR(&EXPRTN) TYPE(*CHAR) LEN(8) +
                          VALUE(OR738)                            /* (700aA) */

  /* Export script */

             DCL        VAR(&EXPSCRP) TYPE(*CHAR) LEN(8) +
                          VALUE(EXPFADJ)

  /* Messag queues */

             DCL        VAR(&FTPMSGQ) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPADJ')
             DCL        VAR(&FTPERRMSGQ) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPADJERR')

  /* Import files */

             DCL        VAR(&FILE) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFADJS')
             DCL        VAR(&FILED) TYPE(*CHAR) LEN(10) +
                          VALUE('EXPFADJL')                       /* (650aA) */

  /* Number of 'Transfer complete' messages to look for */

             DCL        VAR(&TFRNEEDED) TYPE(*DEC) LEN(1 0) VALUE(1)

/*-------------------------------------------------------------------*/
/*  Field declarations                                               */
/*-------------------------------------------------------------------*/

             DCL        VAR(&client)     TYPE(*CHAR) LEN(10)      /* (520 A) */
             DCL        VAR(&clientloc)  TYPE(*CHAR) LEN(10)      /* (520 A) */
             DCL        VAR(&CmpId)      TYPE(*CHAR) LEN(1) +
                                              VALUE('G')          /* (GFSaA) */
             DCL        VAR(&CmpNbr)     TYPE(*CHAR) LEN(2) +
                                              VALUE('01')         /* (GFSaA) */
             DCL        VAR(&ERRCNT)     TYPE(*DEC)  LEN(1 0)
             DCL        VAR(&EXIST)      TYPE(*LGL)
             DCL        VAR(&EXPTYPE)    TYPE(*CHAR) LEN(8)
             DCL        VAR(&EXPFLAG)    TYPE(*CHAR) LEN(8)
             DCL        VAR(&FINISHED)   TYPE(*LGL)
             DCL        VAR(&JOB)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&LCLFILEC)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILED)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILEH)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILET)   TYPE(*CHAR) LEN(33)
             DCL        VAR(&LCLFILEB)   TYPE(*CHAR) LEN(33)       /* (520bA) */
             DCL        VAR(&LCLFILEE)   TYPE(*CHAR) LEN(33)       /* (520bA) */
             DCL        VAR(&LCLFILEL)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&LCLFILEP)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&LCLFILEA)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&LCLFILEF)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&LIBD)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBH)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&Loop)       TYPE(*DEC)  LEN(2 0) +
                                              VALUE(01)           /* (GFSaA) */
             DCL        VAR(&MBR)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&MSGKEY)     TYPE(*CHAR) LEN(4)
             DCL        VAR(&NXTNUM)     TYPE(*DEC)  LEN(7)
             DCL        VAR(&NXTNUMA)    TYPE(*CHAR) LEN(7)
             DCL        VAR(&OPTVAL)     TYPE(*CHAR) LEN(117)     /* (700bA) */
             DCL        VAR(&PGM)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&PATHH)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHD)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHC)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHT)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHB)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHE)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&PATHL)      TYPE(*CHAR) LEN(45)      /* (650cA) */
             DCL        VAR(&PATHP)      TYPE(*CHAR) LEN(45)      /* (650cA) */
             DCL        VAR(&PATHA)      TYPE(*CHAR) LEN(45)      /* (650cA) */
             DCL        VAR(&PATHF)      TYPE(*CHAR) LEN(45)      /* (650 A) */
             DCL        VAR(&QRYSLT)     TYPE(*CHAR) LEN(2000)
             DCL        VAR(&QUOTE)      TYPE(*CHAR) LEN(1) VALUE('"')
             DCL        VAR(&RECS)       TYPE(*DEC)  LEN(10 0)
             DCL        VAR(&RMTFILEC)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILED)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILEH)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILET)   TYPE(*CHAR) LEN(16)
             DCL        VAR(&RMTFILEB)   TYPE(*CHAR) LEN(16)      /* (520bA) */
             DCL        VAR(&RMTFILEE)   TYPE(*CHAR) LEN(16)      /* (520bA) */
             DCL        VAR(&RMTFILEL)   TYPE(*CHAR) LEN(16)      /* (650cA) */
             DCL        VAR(&RMTFILEP)   TYPE(*CHAR) LEN(16)      /* (650cA) */
             DCL        VAR(&RMTFILEA)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&RMTFILEF)   TYPE(*CHAR) LEN(33)      /* (650cA) */
             DCL        VAR(&RTN)        TYPE(*CHAR) LEN(8)
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)
             DCL        VAR(&SHORTNUMA)  TYPE(*CHAR) LEN(4)       /* (SGC A) */
             DCL        VAR(&TYPE)       TYPE(*CHAR) LEN(1)
             DCL        VAR(&USER)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&WHSE)       TYPE(*CHAR) LEN(3)
             DCL        VAR(&EMLTO)      TYPE(*CHAR) LEN(1000)    /* (740aA) */
             DCL        VAR(&EMLSUB)     TYPE(*CHAR) LEN(100)     /* (740aA) */
             DCL        VAR(&EMLBODY)    TYPE(*CHAR) LEN(5000)    /* (740aA) */
             DCL        VAR(&OPTSYS)     TYPE(*CHAR) LEN(12) +
                          VALUE('Interface')                      /* (740aA) */
             DCL        VAR(&OPTTYPE) TYPE(*CHAR) LEN(20) +
                          VALUE('Export Adjustments')             /* (740aA) */
             DCL        VAR(&OPTNAME)    TYPE(*CHAR) LEN(20)      /* (740aA) */
             DCL        VAR(&OPTVALT)    TYPE(*CHAR) LEN(1)       /* (740aA) */
             DCL        VAR(&OPTVALN)    TYPE(*DEC) LEN(15 5)     /* (740aA) */
             DCL        VAR(&OPTVALA)    TYPE(*CHAR) LEN(100)     /* (740aA) */
             DCL        VAR(&OPTRET)     TYPE(*CHAR) LEN(10)      /* (740aA) */
             DCL        VAR(&TEXT1)      TYPE(*CHAR) LEN(80)      /* (740aA) */
             DCL        VAR(&TEXT2)      TYPE(*CHAR) LEN(200)     /* (740aA) */

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(GETOUT))

/* Get Client ID */                                               /* (520 A) */
             CALL       PGM(GETCLIENT) PARM(&CLIENT &CLIENTLOC)   /* (520 A) */

             CHGVAR     VAR(&ERRCNT) VALUE(0)
             CHGVAR     VAR(&EXIST) VALUE('0')
             CHGVAR     VAR(&FINISHED) VALUE('0')

/*-------------------------------------------------------------------*/
/*  Main line                                                        */
/*-------------------------------------------------------------------*/

/*           CHGVAR     VAR(&PGM) VALUE('IT726CL')                   (650 D) */
             CHGVAR     VAR(&PGM) VALUE('IT728SCL')               /* (650 M) */

/* Get job information */

             RTVJOBA    JOB(&JOB) USER(&USER) TYPE(&TYPE)

/* Create member name */

             CALL       PGM(PIRFTP#) PARM(&NXTNUM)
             CHGVAR     VAR(&NXTNUMA) VALUE(&NXTNUM)
             CHGVAR     VAR(&MBR) VALUE('A' *CAT %SST(&WHSE 2 2) +
                          *CAT &NXTNUMA)

/* Create members for export files */

             ADDPFM     FILE(&FILE) MBR(&MBR)
             ADDPFM     FILE(&FILED) MBR(&MBR)                    /* (650aA) */

/* Use OPNQRYF to select and order the records we need */

Selectrcds:                                                       /* (GFSaA) */
             MSGBFC     MESSAGE('Selecting records to export')

             OVRDBF     FILE(ITEMADJ) SHARE(*YES)
             CHGVAR     VAR(&QRYSLT) VALUE('(IAWHSE *EQ' *BCAT &WHSE +
                          *CAT ') *AND (IAUDTE *EQ 0)')

             IF         COND(&CLIENT = &GETFRESH) THEN(DO)        /* (GFSaA) */
               CHGVAR     VAR(&QRYSLT) VALUE(&qryslt *Bcat '*And +
                            (%SST(IAITEM 1 1) *EQ' *BCAT &QUOTE *CAT +
                            &CmpID *CAT &QUOTE *CAT ')' )         /* (GFSaA) */
             ENDDO                                                /* (GFSaA) */

             OPNQRYF    FILE((ITEMADJ)) OPTION(*ALL) QRYSLT(&QRYSLT) +
                          KEYFLD((IAWHSE) (IAITEM) (IADATE) (IATIME))

             RMVMSG     CLEAR(*ALL)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Exporting adjustments into +
                          member' *BCAT &MBR *TCAT ' in adj export +
                          files') TOPGMQ(*EXT) MSGTYPE(*STATUS)


/*  Call program to move route to export files */

             OVRDBF     FILE(&FILE) MBR(&MBR)
             OVRDBF     FILE(&FILED) MBR(&MBR)                    /* (650aA) */

/*  Check if using LICADJ instead of ITEMADJ.                        (700bA) */
             CALL       PGM(GETOPTIONS) PARM(&WHSE '*ADJUST' +
                          '002' '001' &OPTVAL)                    /* (700bA) */
             IF         COND(&OPTVAL *EQ 'Y') THEN(CHGVAR +
                          VAR(&EXPPGM) VALUE('IT728B  '))

             CALL       PGM(&EXPPGM)

             CALL       PGM(GETOPTIONS) PARM(&WHSE '*RETURNS' +
                          '006' '001' &OPTVAL)                    /* (700cA) */
             IF         COND(&OPTVAL *EQ 'Y') THEN(DO)
               CALL       PGM(&EXPRTN) PARM(&WHSE)                /* (700cA) */
             ENDDO                                                /* (700cA) */

             DLTOVR     FILE(&FILE)
             DLTOVR     FILE(&FILED)                              /* (650aA) */

/* If no records were exported, delete member and get out */

             RTVMBRD    FILE(&FILE) MBR(&MBR) NBRCURRCD(&RECS)

             IF         COND(&RECS = 0) THEN(DO)

             SELECT                                               /* (GFSaA) */
             WHEN       COND(&CLIENT = &Getfresh) THEN(DO)        /* (GFSaA) */

               CHGVAR     VAR(&LOOP) VALUE(&Loop + 1)             /* (GFSaA) */
               Select                                             /* (GFSaA) */
               When       COND(&LOOP = 2) THEN(DO)                /* (GFSaA) */
                 CLOF       OPNID(ITEMADJ)                        /* (GFSaA) */
                 MONMSG     MSGID(CPF4519 CPF4520)                /* (GFSaA) */
                 CLOF       OPNID(&FILE)                          /* (GFSaA) */
                 MONMSG     MSGID(CPF4519 CPF4520)                /* (GFSaA) */

                 CHGVAR     VAR(&CMPID) VALUE('F')                /* (GFSaA) */
                 CHGVAR     VAR(&CMPNBR) VALUE('02')              /* (GFSaA) */
                 GOTO       CMDLBL(SELECTRCDS)                    /* (GFSaA) */
               ENDDO                                              /* (GFSaA) */
               ENDSELECT                                          /* (GFSaA) */
             ENDDO                                                /* (GFSaA) */
             ENDSELECT                                            /* (GFSaA) */

             RMVM       FILE(&FILE) MBR(&MBR)
             RMVM       FILE(&FILED) MBR(&MBR)               /* (650aA) */
             RMVMSG     CLEAR(*ALL)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) MSGDTA('No adjustment +
                          records to export in member' *BCAT &MBR) +
                          TOMSGQ(&FTPMSGQ) MSGTYPE(*INFO)          /* (710aM) */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) MSGDTA('No adjustment +
                          records to export in member' *BCAT &MBR) +
                          MSGTYPE(*INFO) KEYVAR(&MSGKEY)           /* (710aM) */

          /* SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for member' +
                          *BCAT &MBR) TOMSGQ(&FTPMSGQ) MSGTYPE(*INFO) (710aD) */

          /* SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for member' +
                          *BCAT &MBR) MSGTYPE(*INFO) KEYVAR(&MSGKEY)  (710aD) */

             DLTOVR     FILE(*ALL)
             CHGVAR     VAR(&RTN) VALUE('*OK')
             RETURN

             ENDDO

/* Check if we should export file to host system */

             OVRDBF     FILE(FTPEXPDFT) MBR(&EXPSCRP)
             CALL       PGM(FTPCHKSCR) PARM(&EXPFLAG)
             DLTOVR     FILE(FTPEXPDFT)
             IF         COND(&EXPFLAG = '*NOEXP') THEN(GOTO SKIPFTP)

/* Create members for ftp files */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Creating export script from +
                          member' *BCAT &MBR) TOPGMQ(*EXT) +
                          MSGTYPE(*STATUS)

             ADDPFM     FILE(FTPEXPLOG) MBR(&MBR)
             MONMSG     MSGID(CPF7306) EXEC(DO)                   /* (GFS A) */
               CLRPFM     FILE(FTPEXPLOG) MBR(&MBR)               /* (GFS A) */
             ENDDO                                                /* (GFS A) */
             CPYSRCF    FROMFILE(FTPEXPDFT) TOFILE(FTPEXPSCRP) +
                          FROMMBR(&EXPSCRP) TOMBR(&MBR)

/* Retrieve library names for files */

             RTVMBRD    FILE(&FILE) MBR(&MBR) RTNLIB(&LIBH)
             RTVMBRD    FILE(&FILED) MBR(&MBR) RTNLIB(&LIBD)      /* (650aA) */

/* Create FTP local and remote file names */

             CHGVAR     VAR(&LCLFILEH) VALUE(&LIBH *TCAT +
                          '/EXPFADJS.' *CAT &MBR)
             CHGVAR     VAR(&LCLFILED) VALUE(&LIBD *TCAT +
                          '/EXPFADJL.' *CAT &MBR)                 /* (650aA) */

/*           IF         COND(&client *eq &SGC)      THEN(DO)      /* (HAL D) */
             IF         COND(&CLIENT *EQ &SGC +
                         *OR &CLIENT *EQ &CAPITOLCTY +
                         *OR &CLIENT *EQ &CRUMBLEY +
                         *OR &CLIENT *EQ &EUROIMPORT +
                         *OR &CLIENT *EQ &STERN +
                         *OR &CLIENT *EQ &CASHWA +
                         *OR &CLIENT *EQ &SBERTRAM +
                         *OR &CLIENT *EQ &FOODSGAL +
                         *OR &CLIENT *EQ &SEASHORE +
                         *OR &CLIENT *EQ &PRESTO +
                         *OR &CLIENT *EQ &GETFRESH +
                         *OR &CLIENT *EQ &HALSEY) THEN(DO)        /* (GFS M) */
               CHGVAR     VAR(&SHORTNUMA) VALUE(%SST(&NXTNUMA 4 4)) +
                                                                  /* (SGC A) */
               CHGVAR     VAR(&RMTFILEH) VALUE('EXPFADJ' *CAT &SHORTNUMA +
                                                 *Tcat '.TXT')    /* (SGC A) */
               CHGVAR     VAR(&RMTFILED) VALUE('EXPFADJL' *CAT &SHORTNUMA +
                                                 *Tcat '.TXT')    /* (SGC A) */
             ENDDO                                                /* (SGC A) */
             ELSE CMD(DO)                                         /* (SGC A) */
             CHGVAR     VAR(&RMTFILEH) VALUE('EXPFADJ' *CAT +
                          %SST(&WHSE 2 2) *CAT '.Txt')
             CHGVAR     VAR(&RMTFILED) VALUE('EXPFADJL' *CAT +
                          %SST(&WHSE 2 2) *CAT '.Txt')            /* (650aA) */
             ENDDO                                                /* (SGC A) */

             IF         COND(&CLIENT *EQ &GREENLEAF +
                         *OR &CLIENT *EQ &SBERTRAM +
                         *OR &CLIENT *EQ &FOODSGAL +
                         *OR &CLIENT *EQ &PRESTO +
                         *OR &CLIENT *EQ &HMWAGNER) THEN(DO)      /* (HMW M) */
               CHGVAR     VAR(&SHORTNUMA) VALUE(%SST(&NXTNUMA 4 4)) +
                                                                  /* (GLPbA) */
               CHGVAR     VAR(&RMTFILEH) VALUE('EXPFADJS' *CAT &SHORTNUMA +
                                                 *Tcat '.TXT')    /* (GLPbA) */
               CHGVAR     VAR(&RMTFILED) VALUE('EXPFADJL' *CAT &SHORTNUMA +
                                                 *Tcat '.TXT')    /* (GLPbA) */
             ENDDO                                                /* (GLPbA) */

/* Call program to create script */

             CHGVAR     VAR(&EXPTYPE) VALUE('*ADJ')
             OVRDBF     FILE(FTPEXPSCRP) MBR(&MBR)

/*           CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +
                          &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +
                          &RMTFILED &RMTFILEC &RMTFILET)             (520bD) */
             SELECT                                               /* (GFSaA) */
             WHEN       COND(&CLIENT = &GETFRESH) THEN(DO)        /* (GFSaA) */
               CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +
                            &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +
                            &RMTFILED &RMTFILEC &RMTFILET &LCLFILEB +
                            &RMTFILEB &LCLFILEE &RMTFILEE &PATHH +
                            &PATHD &PATHC &PATHT &PATHB &PATHE +
                            &LCLFILEL &RMTFILEL &PATHL +
                            &LCLFILEP &RMTFILEP &PATHP +
                            &LCLFILEA &RMTFILEA &PATHA +
                            &LCLFILEF &RMTFILEF &PATHF +
                            &Cmpid &CmpNbr)                       /* (GFSaA) */
             enddo                                                /* (GFSaA) */
             OTHERWISE  CMD(DO)                                   /* (GFSaA) */
/*           CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +
                          &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +
                          &RMTFILED &RMTFILEC &RMTFILET &LCLFILEB +
                          &RMTFILEB &LCLFILEE &RMTFILEE +
                          &PATHH &PATHD &PATHC &PATHT &PATHB &PATHE) +
                                                                  /* (650 M) */
               CALL       PGM(FTPCRTSCRP) PARM(&EXPTYPE &LCLFILEH +
                            &LCLFILED &LCLFILEC &LCLFILET &RMTFILEH +
                            &RMTFILED &RMTFILEC &RMTFILET &LCLFILEB +
                            &RMTFILEB &LCLFILEE &RMTFILEE &PATHH +
                            &PATHD &PATHC &PATHT &PATHB &PATHE +
                            &LCLFILEL &RMTFILEL &PATHL +
                            &LCLFILEP &RMTFILEP &PATHP +
                            &LCLFILEA &RMTFILEA &PATHA +
                            &LCLFILEF &RMTFILEF &PATHF)           /* (650cM) */
             ENDDO                                                /* (GFSaA) */
             ENDSELECT                                            /* (GFSaA) */

             DLTOVR     FILE(FTPEXPSCRP)

             RMVMSG     CLEAR(*ALL)

/* Execute FTP */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export files using FTP for +
                          member' *BCAT &MBR) TOPGMQ(*EXT) +
                          MSGTYPE(*STATUS)

             OVRDBF     FILE(INPUT) TOFILE(*LIBL/FTPEXPSCRP) MBR(&MBR)
             OVRDBF     FILE(OUTPUT) TOFILE(*LIBL/FTPEXPLOG) MBR(&MBR)

             FTP        RMTSYS(DUMMYSYSTEM)

             DLTOVR     FILE(INPUT OUTPUT)

/* Now check FTP log file for errors */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Checking FTP log for errors') +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)

             OVRDBF     FILE(FTPEXPLOG) MBR(&MBR)

             CALL       PGM(FTPCHKLOG) PARM(&TFRNEEDED &MBR &PGM +
                          &RTN &MSGKEY)

             DLTOVR     FILE(FTPEXPLOG)

/* If there was an error, just return */

             IF         COND(&RTN = '*PGMQ') THEN(GOTO GETOUT)

/* This is the place to skip to if script had *NO EXPORT* */

             SELECT                                               /* (GFSaA) */
             WHEN       COND(&CLIENT = &Getfresh) THEN(DO)        /* (GFSaA) */

               CHGVAR     VAR(&LOOP) VALUE(&Loop + 1)             /* (GFSaA) */
               Select                                             /* (GFSaA) */
               When       COND(&LOOP = 2) THEN(DO)                /* (GFSaA) */
                 CLOF       OPNID(ITEMADJ)                        /* (GFSaA) */
                 MONMSG     MSGID(CPF4519 CPF4520)                /* (GFSaA) */
                 CLOF       OPNID(&FILE)                          /* (GFSaA) */
                 MONMSG     MSGID(CPF4519 CPF4520)                /* (GFSaA) */

                 CLRPFM     FILE(&FILE) MBR(&MBR)                 /* (GFSaA) */

                 CHGVAR     VAR(&CMPID) VALUE('F')                /* (GFSaA) */
                 CHGVAR     VAR(&CMPNBR) VALUE('02')              /* (GFSaA) */
                 GOTO       CMDLBL(SELECTRCDS)                    /* (GFSaA) */
               ENDDO                                              /* (GFSaA) */
               ENDSELECT                                          /* (GFSaA) */
             ENDDO                                                /* (GFSaA) */
             ENDSELECT                                            /* (GFSaA) */

SKIPFTP:

/* We finished without error */

             CHGVAR     VAR(&FINISHED) VALUE('1')
             CHGVAR     VAR(&RTN) VALUE('*OK')

/*  Clean up before leaving */

             DLTOVR     FILE(*ALL)

/* If we skipped FTP then don't delete members */

             IF         COND(&EXPFLAG = '*NOEXP') THEN(GOTO SKIPFTP2)

             RMVM       FILE(&FILE) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (520aA) */
             RMVM       FILE(&FILED) MBR(&MBR)                    /* (650aA) */
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (650aA) */
             RMVM       FILE(FTPEXPSCRP) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (520aA) */
             RMVM       FILE(FTPEXPLOG) MBR(&MBR)
             MONMSG     MSGID(CPF320A CPF320B CPF3203 CPF3220 +
                          CPF3273 CPF7301 CPF7310)                /* (520aA) */

SKIPFTP2:

             RMVMSG     CLEAR(*ALL)

/*  Send Successful message */

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for member' +
                          *BCAT &MBR) TOMSGQ(&FTPMSGQ) MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export successful for member' +
                          *BCAT &MBR) MSGTYPE(*INFO) KEYVAR(&MSGKEY)

             RETURN

/*  Receive any messages and pass them on  */

 GETOUT:

             CHGVAR     VAR(&ERRCNT) VALUE(&ERRCNT + 1)
             IF COND(&ERRCNT = 3) THEN(GOTO CMDLBL(BOTTOM))

             IF COND(&FINISHED = '0') THEN(DO)
             CHGVAR     VAR(&RTN) VALUE('*PGMQ')
             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Member' *BCAT &MBR *TCAT '.') +
                          TOMSGQ(&FTPMSGQ) MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Member' *BCAT &MBR *TCAT '.') +
                          TOMSGQ(&FTPERRMSGQ) MSGTYPE(*INFO)

             SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Export FAILED, see following +
                          messages. Member' *BCAT &MBR *TCAT '.') +
                          MSGTYPE(*INFO) KEYVAR(&MSGKEY)

      /* Get email list from OPTIONINT                               (740aA) */
             CHGVAR     VAR(&OPTNAME) VALUE('Error Email         ')
             CALL       PGM(GETOPTINT) PARM(&OPTSYS &OPTTYPE +
                          &OPTNAME &OPTVALT &OPTVALN &OPTVALA &OPTRET)
             IF         COND(&OPTRET *EQ '*OK') THEN(DO)          /* (740aA) */
             CHGVAR     VAR(&EMLTO) VALUE(&OPTVALA)               /* (740aA) */
      /* Compose email                                               (740aA) */
             CHGVAR     VAR(&EMLSUB) VALUE('ERROR: Adjustment Export +
                          Failed')                                /* (740aA) */
             CHGVAR     VAR(&EMLBODY) VALUE('Adjustment FTP Export +
                          FAILED.  Member' *BCAT &MBR *TCAT '.' *BCAT +
                          &CLIENT *BCAT &LIBH)                    /* (740aA) */
      /* Send email                                                  (740aA) */
             BFCEMAIL   EMAILTO(&EMLTO) SUBJECT(&EMLSUB) BODY(&EMLBODY) +
                                                                  /* (740aA) */
             ENDDO                                                /* (740aA) */

             ENDDO

 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))

               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                     MSGDTA(&MSGDTA) MSGTYPE(*COMP)

               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                     MSGDTA(&MSGDTA) TOMSGQ(&FTPMSGQ) MSGTYPE(*COMP)

             IF COND(&FINISHED = '0') THEN(DO)
               SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) TOMSGQ(&FTPERRMSGQ) +
                          MSGTYPE(*COMP)
             ENDDO

             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 NOMSG:

 BOTTOM:

             IF COND(&TYPE = '0') THEN(DO)

               RCLRSC     LVL(*CALLER)

        /*  Send '*Escape' message to caller */

               IF COND(&FINISHED = '0') THEN(DO)
                 SNDPGMMSG  MSGID(CPF9898) MSGF(QSYS/QCPFMSG) +
                          MSGDTA('Error Occured Processing Member' +
                          *BCAT &MBR) MSGTYPE(*ESCAPE)
               ENDDO

             ENDDO

             ENDPGM
