/*-------------------------------------------------------------------*/
/*                                                                   */
/*  STRAPTFTP   Start APTFTP server                                  */
/*  September 30, 2011                                               */
/*  Rod Roller                                                       */
/*                                                                   */
/*  Revisions                                                        */
/*                                                                   */
/*    09/30/11  RTR  6.40                                            */
/*      - Created.                                                   */
/*                                                                   */
/*-------------------------------------------------------------------*/
 STRAPTFTP:  PGM        PARM(&PUTJOBQ &JOBD &JOBQ &LIBL)

/*-------------------------------------------------------------------*/
/*  Field declarations                                               */
/*-------------------------------------------------------------------*/

             DCL        VAR(&JOBD)       TYPE(*CHAR) LEN(20)
             DCL        VAR(&JOBDLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBDNAME)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBNAME)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBQ)       TYPE(*CHAR) LEN(20)
             DCL        VAR(&JOBQLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&JOBQNAME)   TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIB)        TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBL)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&PUTJOBQ)    TYPE(*CHAR) LEN(4)

 /* Variables for sending messages to calling screen */

             DCL        VAR(&MSGDTA)     TYPE(*CHAR) LEN(256)
             DCL        VAR(&MSGF)       TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGFLG)     TYPE(*LGL)  VALUE('0')
             DCL        VAR(&MSGFLIB)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
             DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2 0)

             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(GETOUT))

/*-------------------------------------------------------------------*/
/*  Main line                                                        */
/*-------------------------------------------------------------------*/

             CHGVAR     VAR(&LIB) VALUE('*LIBL')

/*  Extract job description name and library */

             CHGVAR     VAR(&JOBDNAME) VALUE(%SST(&JOBD 1 10))
             CHGVAR     VAR(&JOBDLIB) VALUE(%SST(&JOBD 11 10))

/*  Extract job queue name and library */

             CHGVAR     VAR(&JOBQNAME) VALUE('QS36EVOKE ')
             CHGVAR     VAR(&JOBQLIB) VALUE('*LIBL     ')
          /* CHGVAR     VAR(&JOBQNAME) VALUE(%SST(&JOBQ 1 10))  */
          /* CHGVAR     VAR(&JOBQLIB) VALUE(%SST(&JOBQ 11 10))  */

/* See if program should be run interactively */

             IF COND(&PUTJOBQ *EQ '*NO') THEN(DO)
                CALL PGM(APTFTP)
                GOTO ENDPGM
             ENDDO

/* Reorg data file first to remove deleted recs */

        /*   RGZPFM     FILE(APTDATA)                 */
        /*   MONMSG     MSGID(CPF0000)                */

/* Otherwise, put on job queue */

             CHGVAR     VAR(&MSGDTA) VALUE('Submitting APT FTP +
                          server program APTFTP')

             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(&MSGDTA) +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)

             IF         COND(%SST(&JOBD 1 1) *EQ '*' & %SST(&JOBQ 1 +
                          1) *EQ '*') THEN(DO)
             SBMJOB     CMD(CALL PGM(APTFTP)) JOB(APTFTP) +
                          JOBD(&JOBD) JOBQ(&JOBQ) CURLIB(*CRTDFT) +
                          INLLIBL(&LIBL)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))
             ENDDO

             IF         COND(%SST(&JOBD 1 1) *EQ '*' & %SST(&JOBQ 1 +
                          1) *NE '*') THEN(DO)
             SBMJOB     CMD(CALL PGM(APTFTP)) +
                          JOB(APTFTP) JOBD(&JOBD) +
                          JOBQ(&JOBQLIB/&JOBQNAME) CURLIB(*CRTDFT) +
                          INLLIBL(&LIBL)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))
             ENDDO

             IF         COND(%SST(&JOBD 1 1) *NE '*' & %SST(&JOBQ 1 +
                          1) *EQ '*') THEN(DO)
             SBMJOB     CMD(CALL PGM(APTFTP)) +
                          JOB(APTFTP) +
                          JOBD(&JOBDLIB/&JOBDNAME) JOBQ(&JOBQ) +
                          CURLIB(*CRTDFT) INLLIBL(&LIBL)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))
             ENDDO

             IF         COND(%SST(&JOBD 1 1) *NE '*' & %SST(&JOBQ 1 +
                          1) *NE '*') THEN(DO)
             SBMJOB     CMD(CALL PGM(APTFTP)) +
                          JOB(APTFTP) +
                          JOBD(&JOBDLIB/&JOBDNAME) +
                          JOBQ(&JOBQLIB/&JOBQNAME) CURLIB(*CRTDFT) +
                          INLLIBL(&LIBL)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))
             ENDDO

             CHGVAR     VAR(&MSGDTA) VALUE('APT FTP server +
                          APTFTP submitted using jobd ' +
                          *CAT &JOBDLIB *CAT '/' *CAT &JOBDNAME)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(&MSGDTA)
             GOTO       CMDLBL(ENDPGM)

 ERROR:
             CHGVAR     VAR(&MSGDTA) VALUE('Could not submit APT +
                          FTP server APTFTP using jobd ' +
                          *CAT &JOBDLIB *CAT '/' *CAT &JOBDNAME)
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA(&MSGDTA)

/*  Receive any messages and pass them on  */

 GETOUT:
             IF         COND(&MSGFLG) THEN(GOTO CMDLBL(ENDPGM))
             CHGVAR     VAR(&MSGFLG) VALUE('1')
 NEXTMSG:    DO
             RCVMSG     PGMQ(*SAME *) MSGQ(*PGMQ) MSGDTA(&MSGDTA) +
                          MSGID(&MSGID) SEV(&SEV) +
                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
             IF         COND(&MSGID *EQ ' ') THEN(GOTO CMDLBL(NOMSG))
             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
                          MSGDTA(&MSGDTA) MSGTYPE(*COMP)
             GOTO       CMDLBL(NEXTMSG)
             ENDDO
 NOMSG:

 ENDPGM:     ENDPGM
