     F*----------------------------------------------------------------
     F*   Copyright (C) 1999 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  LDI125    Layout Designer LAYIDEF => ITEMDEF - Create
     F*  25 February 1999
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
     F*----------------------------------------------------------------
     F*
     F*  Notes
     F*
     F*    - The screen for this program must be compiled with
     F*      defer write equal to *NO.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FLDI125FMCF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FLAYIDEF IP  E                    DISK
     FPIRITEM IF  E           K        DISK
     FITEMDEF UF  E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PWHSE  Warehouse number
     C*      $PJTYP  0 - Batch
     C*              1 - Interactive
     C*
     C*    Returned Parameters
     C*      None
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PWHSE  30
     C                     PARM           $PJTYP  1
     C*----------------------------------------------------------------
     C*  Main Line
     C*
     C*  Make sure item exists.
     C*
     C           KEYIT     CHAINPIRITEM              79
     C           *IN79     IFEQ *ON
     C                     ADD  1         W1SKP
     C                     GOTO BOTTOM
     C                     ENDIF
     C*
     C*   Get Tie/High def.  If not found, add it.
     C*
     C           KEYID     CHAINITEMDEF              79
     C*
     C*     Either add the item (and qty rec) if not found . . .
     C*
     C           *IN79     IFEQ *ON
     C*
     C                     CLEARIDREC
     C                     Z-ADDITWHSE    IDWHSE
     C                     MOVE ITITEM    IDITEM
     C                     MOVE LDSDEF    IDSDEF
     C                     Z-ADDLDTIE     IDTIE
     C                     Z-ADDLDHIGH    IDHIGH
     C                     MOVE 'N'       IDUM
     C                     MOVE LDPREF    IDPREF
     C                     WRITEIDREC                  49
     C           *IN49     IFEQ *OFF
     C                     ADD  1         W1ADD
     C                     ELSE
     C                     ADD  1         W1SKP
     C                     ENDIF
     C*
     C                     ELSE
     C                     Z-ADDLDTIE     IDTIE
     C                     Z-ADDLDHIGH    IDHIGH
     C                     MOVE 'N'       IDUM
     C                     MOVE LDPREF    IDPREF
     C                     UPDATIDREC                  49
     C           *IN49     IFEQ *OFF
     C                     ADD  1         W1UPD
     C                     ELSE
     C                     ADD  1         W1SKP
     C                     ENDIF
     C*
     C                     ENDIF
     C*
     C*      Keep user informed if running interactively.
     C*
     C           BOTTOM    TAG
     C*
     C                     ADD  1         COUNT2  30
     C           $PJTYP    IFEQ *ON
     C           COUNT2    ANDEQ100
     C                     Z-ADD0         COUNT2
     C                     MOVE ITITEM    W1ITEM
     C                     WRITESCREEN1
     C                     ENDIF
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize variables
     C*
     CSR                   MOVE *ON       FOREVR  1
     CSR                   MOVE *OFF      ERROR   1
     C*
     C*  Define key for PIRITEM
     C*
     CSR         KEYIT     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           LDITEM
     C*
     C*  Define key for ITEMDEF
     C*
     CSR         KEYID     KLIST
     CSR                   KFLD           ITWHSE
     CSR                   KFLD           ITITEM
     CSR                   KFLD           LDSDEF
     C*
     C*   Open display file if this program is being run interactively.
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   OPEN LDI125FM
     CSR                   ENDIF
     C*
     C*   Initialize message handling
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZMIMSG
     CSR                   ENDIF
     C*
     C*   Fool the compiler.
     C*
     CSR                   MOVE *BLANKS   DUMMY   1
     CSR         DUMMY     IFNE *BLANKS
     CSR                   READ LDI125FM                 50
     CSR                   ENDIF
     C*
     CSR                   MOVE #PROG     $PPRG  10
     CSR                   ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCSBF  Clear message subfile.
     C*
     CSR         ZMCSBF    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   UT81201  Item recalculated successfully.
     C*
     CSR         ZM01      BEGSR
     CSR                   MOVE 'UT81201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG   4
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81221  Item not recalculated - No ITEMQTY record.
     C*
     CSR         ZM21      BEGSR
     CSR                   MOVE 'UT81221' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81222  Item not recalculated - Item does not exist.
     C*
     CSR         ZM22      BEGSR
     CSR                   MOVE 'UT81222' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81223  Item not recalculated - Error updating ITEMQTY.
     C*
     CSR         ZM23      BEGSR
     CSR                   MOVE 'UT81223' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
