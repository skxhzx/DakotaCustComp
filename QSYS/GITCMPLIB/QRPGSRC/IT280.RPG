     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  IT280     RF replenishments
     F*  20 January, 1997
     F*  Dave Sommerville
     F*  Hemant Kapadia
     F*
     F*  Notes
     F*       8 X 20 Screens for hand held scanners
     F*       FOUND= *ON Replenishment record exists, where "From"
     F*                  and "To" aisles are different.
     F*       SAME = *ON Replenishment record exists, where "From"
     F*                  and "To" aisles are same.
     F*       MORE = *ON Replenishment record exists, for the entered
     F*                  department.
     F*       SURE = *ON Everything is Ok. Go ahead with replenishment.
     F*       DONE = *ON No more replenishment records exists for the
     F*                  department.
     F*
     F*
     F*
     F*
     F*  Revisions
408 AF*    01/23/98  RH   4.08
    AF*      - Revised to update pick slot entered and expiration dates
     F*        with dates from 'From' slot.
409 AF*    06/29/98  RH   4.09
    AF*      - Revised to verify zero slots, added SC8 Verify Zero Slot
     F*        Virtual slot is deleted, regular slot status = 'V'
409a F*    07/06/98  RH   4.11
     F*      - Can't verify slot if it has virtual slots tied to it.
411  F*    05/18/99  RH    4.11
     F*      - Fix error - trying to update RPLFILE before chain.
     F*        Lost record when we SETGT on line 1812.71.
411 AF*    06/18/99  RH   4.11
411 AF*      - Recompiled, ITEMLNK file changed.
     F*
413aAF*    02/14/00  MLB  4.13a
     F*      - Revised routine ZZZERO to unlock SLOT2 if SLSTAT
     F*        *NE 'Z'.
413bAF*    02/23/00  MLB  4.13b
     F*      - Revised routine ZZCLSE to bypass processing when close
     F*        of tranaction was not successful.
     F*      - Revised routine ZZUPD3 to re-display SCREEN3 when close
     F*        of tranaction was not successful.
413cAF*    02/24/00  MLB  4.13c
     F*      - Revised routine ZZABRT to check available quantity does
     F*        not go negative when transaction is aborted.
     F*      - Revised routine SC2 to redisplay SCREEN2 when an error
     F*        occurs.
     F*      - Added new error msg routine ZM1320.
     F*
414aAF*    07/06/00  MLB  4.14a
     F*      - Revised routine ZZUPD6 to update new fields added to
     F*        ITMEXCP.
     F*
640aAF*    06/07/12  LMC  6.40a
     F*      - Enh: Added call to WRTTRAN1 for PIRTRAND.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT280FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FRPLFILE UF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     FITEMDEF IF  E           K        DISK
     FITEMDEF2IF  E           K        DISK
     FPIRTRAN UF  E           K        DISK
     FITMEXCP O   E           K        DISK
     FSLOT2   UF  E           K        DISK
     FLABEL   UF  E           K        DISK                      A
     FBATCTL  O   E           K        DISK
     FTASKDET UF  E           K        DISK
     FITEMLNK IF  E           K        DISK
409 AFVSLOT1  UF  E           K        DISK
409aAFVSLOT2  IF  E           K        DISK
     F            VSREC                             KRENAMEVSREC2
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
409 ME                    DESC    1   3 50
409 DE*                   DESC    1   2 50
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$CERM       DS
     I                                        1  60 XCERM
     I                                        1   4 $CMSG
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'FRMTIT'              C         @FMTIT
     I              'ADDSTDTRN'           C         @ADDTR
     I              'ADJTSKDET'           C         @ADJTD
     I              'ADJTRAN  '           C         @ADJTR
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I                                       81  88 $LTYPE
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*
     I                                       22  26 $LRTE
     I                                       27  35 $LPO
     I                                       36  420$LTRN#
     I*
     I*----------------------------------------------------------------
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I*                                   P   1   20ERWHSE
     I*
     I                                        1  30 ERFLD
     I*
     I                                    P   1   40ERQTY
     I                                    P   5   80ERNQTY
413cAI*
413cAI                                        1  12 ERFMSL
413cAI                                       13  24 ERTOSL
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  PIRTRAN record layout for use as parameters
     I*
     IPTPARM    E DSPIRTRAN
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      None
     C*
     C*    Returned Parameters
     C*      None
     C*
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     ENDIF
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C           NXTSCR    CASEQ'03 '     SC3
     C           NXTSCR    CASEQ'04 '     SC4
     C           NXTSCR    CASEQ'05 '     SC5
     C           NXTSCR    CASEQ'06 '     SC6
     C           NXTSCR    CASEQ'07 '     SC7
409 AC           NXTSCR    CASEQ'08 '     SC8
     C                     ENDCS
     C                     ENDDO
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   ENDIF
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXFMTSCREEN2                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '03 '
     CSR                   EXFMTSCREEN3                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '04 '
     CSR                   EXFMTSCREEN4                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '05 '
     CSR                   EXFMTSCREEN5                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '06 '
     CSR                   EXFMTSCREEN6                50
     CSR                   ENDIF
     CSR         NXTSCR    IFEQ '07 '
     CSR                   EXFMTSCREEN7                50
     CSR                   ENDIF
409 ACSR         NXTSCR    IFEQ '08 '
409 ACSR                   EXFMTSCREEN8                50
409 ACSR                   ENDIF
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     9298
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   EXSR ZZFIL1
     CSR                   MOVE *OFF      REFRSH  1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     CSR                   EXSR ZZFIL2
     CSR                   MOVE *OFF      REFRSH
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 03 initialization
     C*
     CSR         SCR03I    BEGSR
     CSR                   MOVE '03 '     NXTSCR  3
     CSR         EXCPTN    IFEQ *OFF
     CSR                   EXSR ZZFIL3
     CSR                   ENDIF
     CSR                   MOVE *OFF      REFRSH
     CSR                   MOVE *OFF      OVRRID  1
     CSR         END03I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 04 initialization
     C*
     CSR         SCR04I    BEGSR
     CSR                   MOVE '04 '     NXTSCR  3
     CSR                   EXSR ZZFIL4
     CSR                   MOVE *OFF      REFRSH
     CSR         END04I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 05 initialization
     C*
     CSR         SCR05I    BEGSR
     CSR                   MOVE '05 '     NXTSCR  3
     CSR                   EXSR ZZFIL5
     CSR                   MOVE *OFF      REFRSH
     CSR         END05I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 06 initialization
     C*
     CSR         SCR06I    BEGSR
     CSR                   MOVE '06 '     NXTSCR  3
     CSR                   EXSR ZZFIL6
     CSR                   MOVE *OFF      REFRSH
     CSR         END06I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 07 initialization
     C*
     CSR         SCR07I    BEGSR
     CSR                   MOVE '07 '     NXTSCR  3
     CSR                   EXSR ZZFIL7
     CSR                   MOVE *OFF      REFRSH
     CSR         END07I    ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  Screen 08 initialization
409 AC*
409 ACSR         SCR08I    BEGSR
409 ACSR                   MOVE '08 '     NXTSCR  3
409 ACSR                   EXSR ZZFIL8
409 ACSR                   MOVE *OFF      REFRSH
409 ACSR         END08I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR         DONE      IFEQ *OFF
     CSR                   EXSR ZZABRT
413cAC*
413cAC*    Unable to abort transaction - re-display screen.
413cAC*
413cACSR                   SELEC
413cACSR         ERROR     WHEQ *ON
413cACSR                   EXSR SCR02I
413cACSR                   GOTO ENDSC2
413cACSR                   ENDSL
     CSR                   ENDIF
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR         DONE      IFEQ *OFF
     CSR                   EXSR ZZABRT
413cAC*
413cAC*    Unable to abort transaction - re-display screen.
413cAC*
413cACSR                   SELEC
413cACSR         ERROR     WHEQ *ON
413cACSR                   EXSR SCR02I
413cACSR                   GOTO ENDSC2
413cACSR                   ENDSL
     CSR                   ENDIF
     CSR                   EXSR ZZINZ2
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ*ON       ENDSC2
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC3  -  Screen 3
     C*
     CSR         SC3       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC3
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR03I
     CSR                   GOTO ENDSC3
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR         EXCPTN    IFEQ *ON
     CSR                   EXSR ZZRVRS
     CSR                   ENDIF
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC3
     CSR                   END
     C*
     C*  Test for other command keys
     C*
     CSR                   EXSR ZZCMD3
     CSR         CMDTKN    CABEQ*ON       ENDSC3
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     C*
     CSR                   EXSR ZZCHK3
     CSR         ERROR     CABEQ*ON       ENDSC3
     CSR                   EXSR ZZUPD3
     CSR         ERROR     CABEQ*ON       ENDSC3
     C*
     CSR         ENDSC3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC4  -  Screen 4
     C*
     CSR         SC4       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC4
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR04I
     CSR                   GOTO ENDSC4
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR03I
     CSR                   GOTO ENDSC4
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD4
     CSR         CMDTKN    CABEQ*ON       ENDSC4
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK4
     CSR         ERROR     CABEQ*ON       ENDSC4
     C**                   EXSR ZZUPD4
     CSR         ERROR     CABEQ*ON       ENDSC4
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD4
     CSR         CMDTKN    CABEQ*ON       ENDSC4
     C*
     CSR         ENDSC4    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC5  -  Screen 5
     C*
     CSR         SC5       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC5
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR05I
     CSR                   GOTO ENDSC5
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC5
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD5
     CSR         CMDTKN    CABEQ*ON       ENDSC5
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK5
     CSR         ERROR     CABEQ*ON       ENDSC5
     CSR                   EXSR ZZUPD5
     CSR         ERROR     CABEQ*ON       ENDSC5
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD5
     CSR         CMDTKN    CABEQ*ON       ENDSC5
     C*
     CSR         ENDSC5    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC6  -  Screen 6
     C*
     CSR         SC6       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC6
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR06I
     CSR                   GOTO ENDSC6
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR05I
     CSR                   GOTO ENDSC6
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD6
     CSR         CMDTKN    CABEQ*ON       ENDSC6
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK6
     CSR         ERROR     CABEQ*ON       ENDSC6
     CSR                   EXSR ZZUPD6
     CSR         ERROR     CABEQ*ON       ENDSC6
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD6
     CSR         CMDTKN    CABEQ*ON       ENDSC6
     C*
     CSR         ENDSC6    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC7  -  Screen 7
     C*
     CSR         SC7       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC7
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR07I
     CSR                   GOTO ENDSC7
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR05I
     CSR                   GOTO ENDSC7
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD7
     CSR         CMDTKN    CABEQ*ON       ENDSC7
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK7
     CSR         ERROR     CABEQ*ON       ENDSC7
     CSR                   EXSR ZZUPD7
     CSR         ERROR     CABEQ*ON       ENDSC7
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD7
     CSR         CMDTKN    CABEQ*ON       ENDSC7
     C*
     CSR         ENDSC7    ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  SC8  -  Screen 8
409 AC*
409 ACSR         SC8       BEGSR
409 AC*
409 AC*  Test for F3 - Exit
409 AC*
409 ACSR         *INKC     IFEQ *ON
409 ACSR                   MOVE 'EOJ'     NXTSCR
409 ACSR                   GOTO ENDSC8
409 ACSR                   ENDIF
409 AC*
409 AC*  Test for F5 - Refresh
409 AC*
409 ACSR         *INKE     IFEQ *ON
409 ACSR                   MOVE *ON       REFRSH
409 ACSR                   EXSR SCR08I
409 ACSR                   GOTO ENDSC8
409 ACSR                   END
409 AC*
409 AC*  Test for F12 - Previous
409 AC*
409 ACSR         *INKL     IFEQ *ON
409 ACSR                   EXSR SCR02I
409 ACSR                   GOTO ENDSC8
409 ACSR                   END
409 AC*
409 AC*  Test for other command keys
409 AC*
409 ACSR                   EXSR ZZCMD8
409 ACSR         CMDTKN    CABEQ*ON       ENDSC8
409 AC*
409 AC*  Some other key pressed.
409 AC*
409 AC*     Check input and write/update record.
409 AC*
409 AC*
409 ACSR                   EXSR ZZCHK8
409 ACSR         ERROR     CABEQ*ON       ENDSC8
409 ACSR                   EXSR ZZUPD8
409 ACSR         ERROR     CABEQ*ON       ENDSC8
409 AC*
409 ACSR         ENDSC8    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
413cAC*----------------------------------------------------------------
413cAC*   IT13208  Replenishment transaction cannot be cancelled.
413cAC*
413cACSR         ZM1320    BEGSR
413cACSR                   MOVE 'IT13208' #MSGID
413cACSR                   MOVE '*DIAG  ' #MSGTP
413cACSR                   MOVEAERRMSG    $MD,1
413cACSR                   EXSR ZMPMSG
413cACSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28001  Invalid slot entered.(FROM)
     C*
     CSR         ZM2801    BEGSR
     CSR                   MOVE 'IT28001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28002  Invalid slot entered.(TO)
     C*
     CSR         ZM2802    BEGSR
     CSR                   MOVE 'IT28002' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28003 Qty cannot be > system assigned qty.
     C*
     CSR         ZM2803    BEGSR
     CSR                   MOVE 'IT28003' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28004 Only one of the options can be "Y".
     C*
     CSR         ZM2804    BEGSR
     CSR                   MOVE 'IT28004' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28005 Only one of the options can be "N".
     C*
     CSR         ZM2805    BEGSR
     CSR                   MOVE 'IT28005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28006 No more replenishments.
     C*
     CSR         ZM2806    BEGSR
     CSR                   MOVE 'IT28006' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0110  Number must be > 0
     C*
     CSR         ZM0110    BEGSR
     CSR                   MOVE 'PIR0110' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PIR1001  Invalid option entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZABRT   Abort a transaction
     C*
     CSR         ZZABRT    BEGSR
     C**         PTKEY     CHAINPIRTRAN             N79
     CSR         RLTYPE    IFEQ 'B'
     CSR                   MOVE 'REPLBK'  @PTASK
     CSR                   ELSE
     CSR                   MOVE 'REPL  '  @PTASK
     CSR                   ENDIF
413cAC*
413cACSR                   MOVE *OFF      ERROR
413cAC*
413cAC*  Update slot qty (Decrease RCV qty) (To Slot)
413cAC*
413cACSR         SLTKEY    CHAINSLOT2                79
413cACSR         RLTYPE    IFEQ 'B'
413cACSR                   SUB  RPLQTY    SLRCV1
413cACSR                   ELSE
413cACSR                   SUB  TOPICK    SLRCV1
413cACSR                   ENDIF
413cAC*
413cAC*  Get available quantity in pick slot.
413cAC*
413cACSR                   CALL 'SLOTQTY'
413cACSR                   PARM           SLSTK1
413cACSR                   PARM           SLSTK2
413cACSR                   PARM           SLSTK3
413cAC*
413cACSR                   PARM           SLALC1
413cACSR                   PARM           SLALC2
413cACSR                   PARM           SLALC3
413cAC*
413cACSR                   PARM           SLTFR1
413cACSR                   PARM           SLTFR2
413cACSR                   PARM           SLTFR3
413cAC*
413cACSR                   PARM           SLPCK1
413cACSR                   PARM           SLPCK2
413cACSR                   PARM           SLPCK3
413cAC*
413cACSR                   PARM           SLRCV1
413cACSR                   PARM           SLRCV2
413cACSR                   PARM           SLRCV3
413cAC*
413cACSR                   PARM           STOCK1  50
413cACSR                   PARM           STOCK2  30
413cACSR                   PARM           STOCK3  30
413cAC*
413cACSR                   PARM           AVAIL1  50
413cACSR                   PARM           AVAIL2  30
413cACSR                   PARM           AVAIL3  30
413cAC*
413cAC*    Test available qty to make sure it won't go negative
413cAC*    when we abort this transaction.
413cAC*
413cACSR                   SELEC
413cACSR         AVAIL1    WHLT 0
413cACSR                   UNLCKSLOT2
413cACSR                   MOVE *ON       ERROR
413cACSR                   MOVE *ON       *IN24
413cACSR                   MOVE *ON       *IN04
413cACSR                   MOVE *BLANKS   ERRMSG
413cACSR                   MOVE RLFDIS    ERFMSL
413cACSR                   MOVE RLTDIS    ERTOSL
413cACSR                   EXSR ZM1320
413cAC*
413cAC*    Ok to abort transaction.
413cAC*
413cACSR                   OTHER
413cAC*
413cACSR                   UPDATSLREC
413cAC*
     CSR         ITCUBE    MULT TOPICK    @PCUBE
     CSR         ITSWGT    MULT TOPICK    @PSWGT
     CSR                   CALL @ADJTR
     CSR                   PARM '*ABORT  '@PCMD   8
     CSR                   PARM           #JOB
     CSR                   PARM PTTRN#    @PTRN#  70
     CSR                   PARM           @PTASK  6
     CSR                   PARM W1WHSE    @PWHSE  30
     CSR                   PARM W1WHDP    @PWHDP  5
     CSR                   PARM ITSTYP    @PSTYP  1
     CSR                   PARM           @PCUBE  93
     CSR                   PARM           @PSWGT  92
     CSR                   PARM TOPICK    @PPCS   50
     CSR                   PARM 0         @PAISL  50
     CSR                   PARM 0         @PQTY1  50
     CSR                   PARM 0         @PQTY2  50
     CSR                   PARM 0         @PQTY3  50
     CSR                   PARM '0'       @PRTE   5
     CSR                   PARM ' '       @PPO    9
     CSR                   PARM 'L'       @PGRP1  1
     CSR                   PARM ' '       @PGRP2  1
     CSR                   PARM ' '       @PRTN   8
     CSR                   PARM ' '       @PMSG   4
     C*
     C*  Update slot qty (Decrease TFR qty)
     CSR         SLFKEY    CHAINSLOT2                79
     CSR                   SUB  TOPICK    SLTFR1
     CSR                   UPDATSLREC
     C*  Update slot qty (Decrease RCV qty)
413cDC*R         SLTKEY    CHAINSLOT2                79
413cDC*R         RLTYPE    IFEQ 'B'
413cDC*R                   SUB  RPLQTY    SLRCV1
413cDC*R                   ELSE
413cDC*R                   SUB  TOPICK    SLRCV1
413cDC*R                   ENDIF
413cDC*R                   UPDATSLREC
     C*  Delete label record.
     CSR         LBKEY     CHAINLABEL                79
     CSR         *IN79     IFEQ *OFF
     CSR                   DELETLBREC
     CSR                   ENDIF
413cACSR                   ENDSL
     CSR         ENDABR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZBITM   Broken case item
     C*
     CSR         ZZBITM    BEGSR
     CSR         ITKEY     CHAINITEMLNK              79
     CSR         ILKEY     CHAINPIRITEM              79
     CSR                   MOVELILITM2    $IITEM
     CSR                   MOVELITDESC    $IDESC
     CSR                   MOVELITPDSC    $IPDSC
     CSR                   EXSR ZZGETI
     CSR         ENDBIT    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCLSE   Close a transaction
     C*
     CSR         ZZCLSE    BEGSR
     C*
     CSR                   MOVE '*CLOSE  '$LCMD
     CSR                   MOVE '*INTER  '$LTYPE
     CSR                   Z-ADD0         $LWHSE
     CSR                   MOVE *BLANKS   $LRTE
     CSR                   MOVE *BLANKS   $LPO
     CSR                   Z-ADDPTTRN#    $LTRN#
     C*
     CSR                   CALL 'PT132'
     CSR                   PARM           $LPARM
413bAC*
413bAC*     Error occured - Error message sent back
413bAC*
413bACSR                   SELEC
413bACSR         $LRTN     WHEQ '*ERROR  '
413bACSR                   MOVE *ON       ERROR
413bACSR                   MOVEL$LERM     ERRMSG
413bACSR                   EXSR ZM0105
413bAC*
413bAC*     Error occured - Error message sent to program msgq
413bAC*
413bACSR         $LRTN     WHEQ '*PGMQ   '
413bACSR                   MOVE *ON       ERROR
413bACSR                   MOVE $LMSG     #MSGK
413bACSR                   EXSR ZMQMSG
413bAC*
413bAC*    Close was successful.
413bAC*
413bACSR         $LRTN     WHEQ '*OK     '
     C*
     C*   Calculate the time in minutes it took to complete this task.
     C*   PTCTIM is used for end time instead of PTETIM, because close
     C*   time and End time are the same in this case.
     C*
     CSR         *LIKE     DEFN PTSTIM    STRTIM
     CSR         *LIKE     DEFN PTETIM    FINTIM
     CSR         PTKEY     CHAINPIRTRAN              79
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTCTIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   Z-ADDTIMLEN    PTDMIN
     CSR                   UPDATPTREC
640aAC                     EXSR ZZWRTT
413bACSR                   ENDSL
     C*
     CSR         ENDCLS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify warehouse department.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify display.(SCAN slot)
     C*
     CSR         W2SCAN    IFNE W2FMSL
409 ACSR                   MOVE W2FMSL    SVFDIS
409 ACSR         SVFKEY    CHAINVSLOT1              N79
409 ACSR         *IN79     IFEQ *OFF
409 ACSR         VSPDIS    ANDEQW2SCAN
409 ACSR                   MOVE W2FMSL    W2SCAN
409 ACSR                   ELSE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELW2FMSL    ERRMSG
     CSR                   EXSR ZM2801
409 ACSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  No more replenishments.
     C*
     CSR         DONE      IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2806
     CSR                   ENDIF
     C*
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK3   Screen 3 error checking.
     C*
     CSR         ZZCHK3    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *OFF      ERRFLG  1
     C*
     C*  Verify display.(TO slot)
     C*
     CSR         W3SCAN    IFNE W3TOSL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELW3TOSL    ERRMSG
     CSR                   EXSR ZM2802
     CSR                   ENDIF
     C*
     CSR         ENDCK3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK4   Screen 4 error checking.
     C*
     CSR         ZZCHK4    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR         ENDCK4    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK5   Screen 5 error checking.
     C*
     CSR         ZZCHK5    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify exception options. (Item)
     C*
     CSR         W5ITEM    IFNE 'Y'
     CSR         W5ITEM    ANDNE'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,1    ERRMSG
     CSR                   EXSR ZM1005
     CSR                   ENDIF
     C*
     C*  Verify exception options. (Qty)
     C*
     CSR         W5QTY     IFNE 'Y'
     CSR         W5QTY     ANDNE'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERRMSG
     CSR                   EXSR ZM1005
     CSR                   ENDIF
     C*
     C*  Only one of the options canbe "Y".
     C*
     CSR         W5ITEM    IFEQ 'Y'
     CSR         W5QTY     ANDEQ'Y'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2804
     CSR                   ENDIF
     C*
     C*  Only one of the options canbe "N".
     C*
     CSR         W5ITEM    IFEQ 'N'
     CSR         W5QTY     ANDEQ'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2805
     CSR                   ENDIF
     C*
     CSR         ENDCK5    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK6   Screen 6 error checking.
     C*
     CSR         ZZCHK6    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify display.(SCAN slot)
     C*
     CSR         W6SCAN    IFNE W6FMSL
409 ACSR                   MOVE W6SCAN    SVFDIS
409 ACSR         SVFKEY    CHAINVSLOT1              N79
409 ACSR         *IN79     IFEQ *OFF
409 ACSR                   MOVE W6FMSL    W6SCAN
409 ACSR                   ELSE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELW6FMSL    ERRMSG
     CSR                   EXSR ZM2801
409 ACSR                   ENDIF
     CSR                   ENDIF
     CSR         ENDCK6    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK7   Screen 7 error checking.
     C*
     CSR         ZZCHK7    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Cannot replenish more qty than assigned by the system.
     C*
     CSR         W7NQTY    IFGT W7QTY
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   Z-ADDW7QTY     ERQTY
     CSR                   Z-ADDW7NQTY    ERNQTY
     CSR                   EXSR ZM2803
     CSR                   ENDIF
     C*
     C*  Qty must be > 0
     C*
     CSR         W7NQTY    IFLE 0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERRMSG
     CSR                   EXSR ZM0110
     CSR                   ENDIF
     C*
     C*  Verify display.(TO slot)
     C*
     CSR         W7SCAN    IFNE W7FMSL
409 ACSR                   MOVE W7FMSL    SVFDIS
409 ACSR         SVFKEY    CHAINVSLOT1              N79
409 ACSR         *IN79     IFEQ *OFF
409 ACSR         VSPDIS    ANDEQW7SCAN
409 ACSR                   MOVE W7FMSL    W7SCAN
409 ACSR                   ELSE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELW7FMSL    ERRMSG
     CSR                   EXSR ZM2802
409 ACSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ENDCK7    ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZCHK8   Screen 8 error checking.
409 AC*
409 ACSR         ZZCHK8    BEGSR
409 ACSR                   MOVE *OFF      ERROR
409 AC*
409 AC*  Verify Zero, Y,N
409 AC*
409 ACSR         W8ZERO    IFNE 'Y'
409 ACSR         W8ZERO    ANDNE'N'
409 ACSR                   MOVE *ON       ERROR
409 ACSR                   MOVE *ON       *IN28
409 ACSR                   MOVE *ON       *IN08
409 ACSR                   MOVE *BLANKS   ERRMSG
409 ACSR                   MOVELDESC,3    ERRMSG
409 ACSR                   EXSR ZM1005
409 ACSR                   ENDIF
409 ACSR         ENDCK8    ENDSR
409aAC*----------------------------------------------------------------
409aAC*
409aAC*  ZZCHKV   Check if slot has virtual slots tied to it.
409aAC*
409aACSR         ZZCHKV    BEGSR
409aACSR                   MOVE *OFF      ERROR   1
409aACSR                   MOVE *OFF      HASVS   1
409aAC*
409aACSR         SLFKEY    SETLLVSLOT2
409aACSR         FOREVR    DOUNEFOREVR
409aACSR         SLFKEY    READEVSLOT2                 7879
409aACSR         *IN79     IFEQ *ON
409aACSR                   LEAVE
409aACSR                   ENDIF
409aACSR                   MOVE *ON       HASVS
409aAC***                  MOVE *ON       ERROR
409aACSR                   ENDDO
409aAC*
409aACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   SELEC
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F10 - EXCEPTION
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   EXSR SCR05I
     CSR                   GOTO ENDCM2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD3   User defined command keys for screen 3.
     C*
     CSR         ZZCMD3    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   SELEC
     C*
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM3
     CSR                   ENDIF
     C*
     C*      F20 - Accept Warning.
     C*
     CSR         *INKU     IFEQ *ON
     CSR                   MOVE *ON       OVRRID
     CSR                   ENDIF
     C*
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     C*      F20 - Accept Warning.
     C*
     CSR         *INKU     IFEQ *ON
     CSR                   MOVE *ON       OVRRID
     CSR                   ENDIF
     C*
     CSR                   ENDIF
     CSR         ENDCM3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD4   User defined command keys for screen 4.
     C*
     CSR         ZZCMD4    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F10 - Next replenishment.
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   EXSR ZZUPD4
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM4    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD5   User defined command keys for screen 5.
     C*
     CSR         ZZCMD5    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM5    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD6   User defined command keys for screen 6.
     C*
     CSR         ZZCMD6    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM6    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD7   User defined command keys for screen 7.
     C*
     CSR         ZZCMD7    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM7    ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZCMD8   User defined command keys for screen 8.
409 AC*
409 ACSR         ZZCMD8    BEGSR
409 AC*
409 AC*  Command keys to check BEFORE verification and update.
409 AC*
409 ACSR         CMDCHK    IFEQ '*BEFORE '
409 ACSR                   ENDIF
409 AC*
409 AC*  Command keys to check AFTER verification and update.
409 AC*
409 ACSR         CMDCHK    IFEQ '*AFTER  '
409 ACSR                   ENDIF
409 ACSR         ENDCM8    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDEPT  Check if any more replenishment exists for the
     C*          entered department.
     C*
     CSR         ZZDEPT    BEGSR
     CSR                   MOVE *OFF      MORE
     CSR         RLPKEY    SETLLRPLFILE                  77
     C*  - Match found
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ON       MORE
     CSR         RLPKEY    READERPLFILE                  77
     C*  - Record found
     CSR         *IN77     IFEQ *OFF
     CSR                   MOVE RLFAIL    WXFAIL
     CSR                   MOVE RLFAIL    WXTAIL
     CSR                   ELSE
     C*  - No more record for dept
     CSR                   MOVE *OFF      MORE
     CSR                   ENDIF
     CSR                   ENDIF
     CSR         ENDDEP    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDIFR  Check to see, if there is any replenishment where
     C*          From aisle and To aisles are different.
     C*
     CSR         ZZDIFR    BEGSR
     CSR         BEG       TAG
     CSR                   MOVE *OFF      DONE
     CSR                   MOVE *OFF      FOUND
     CSR         RLFKEY    SETLLRPLFILE                  77
     C*  - Match found
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ON       FOUND
     CSR                   GOTO ENDDFR
     CSR                   ENDIF
     C*  - Not found
     CSR         SKIP      TAG
     CSR                   READ RPLFILE                7879
     C*  - Locked
     CSR         *IN78     IFEQ *ON
     CSR                   GOTO SKIP
     CSR                   ENDIF
     C*  - EOF
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       DONE
     CSR                   GOTO ENDDFR
     CSR                   ENDIF
     C*  - Different department encountered.
     CSR         RLWHDP    IFNE W1WHDP
     C*  - Check records for entered dept.
     CSR                   EXSR ZZDEPT
     CSR         MORE      IFEQ *ON
     CSR                   GOTO BEG
     CSR                   ENDIF
     CSR         MORE      IFEQ *OFF
     CSR                   MOVE *ON       DONE
     CSR                   ENDIF
     CSR                   ENDIF
     CSR         ENDDFR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     CSR                   MOVE *BLANKS   W1WHDP
     CSR                   MOVE *BLANKS   W1AISL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     CSR         DONE      IFEQ *OFF
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   ITDESC
     CSR                   MOVE *BLANKS   ITPDSC
     CSR                   ENDIF
     CSR                   MOVELRLITEM    $IITEM
     CSR                   MOVELITDESC    $IDESC
     CSR                   MOVELITPDSC    $IPDSC
     CSR                   MOVE *BLANKS   W2ITEM
     CSR                   EXSR ZZGETI
     C*
     CSR                   MOVELSVITEM    W2ITEM
     CSR                   MOVE RLFDIS    W2FMSL
     CSR                   Z-ADDTOPICK    W2QTY
     C*  Move quantity to W3QTY also, because this field is used to
     C*  back out qty when we abort.
     CSR         RLTYPE    IFEQ 'B'
     CSR                   Z-ADDRPLQTY    W3QTY
     CSR                   ELSE
     CSR                   Z-ADDTOPICK    W3QTY
     CSR                   ENDIF
     CSR         IDKEY     CHAINITEMDEF              79
     CSR         *IN79     IFEQ *OFF
     CSR                   Z-ADDIDTIE     W2TIE
     CSR                   Z-ADDIDHIGH    W2HIGH
     CSR                   ELSE
     CSR                   Z-ADD0         W2TIE
     CSR                   Z-ADD0         W2HIGH
     CSR                   ENDIF
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W2ITEM
     CSR                   MOVE *BLANKS   W2FMSL
     CSR                   Z-ADD0         W2QTY
     CSR                   Z-ADD0         W2TIE
     CSR                   Z-ADD0         W2HIGH
     CSR                   ENDIF
     CSR                   MOVE *BLANKS   W2SCAN
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL3   Fill screen 3 fields with info from file.
     C*
     CSR         ZZFIL3    BEGSR
     C*
     CSR                   MOVE RLTDIS    W3TOSL
     CSR         RLTYPE    IFEQ 'B'
     CSR                   Z-ADDRPLQTY    W3QTY
     CSR                   MOVE *BLANKS   W3ITEM
     CSR                   EXSR ZZBITM
     CSR                   MOVELSVITEM    W3ITEM
     CSR                   ELSE
     CSR                   Z-ADDTOPICK    W3QTY
     CSR                   MOVELSVITEM    W3ITEM
     CSR                   ENDIF
     CSR                   MOVE *BLANKS   W3SCAN
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL4   Fill screen 4 fields with info from file.
     C*
     CSR         ZZFIL4    BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL5   Fill screen 5 fields with info from file.
     C*
     CSR         ZZFIL5    BEGSR
     C*
     CSR                   MOVE 'N'       W5ITEM
     CSR                   MOVE 'N'       W5QTY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL6   Fill screen 6 fields with info from file.
     C*
     CSR         ZZFIL6    BEGSR
     C*
     CSR                   MOVELW2ITEM    W6ITEM
     CSR                   MOVE W2FMSL    W6FMSL
     CSR                   Z-ADDW2QTY     W6QTY
     CSR                   MOVE *BLANKS   W6SCAN
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL7   Fill screen 7 fields with info from file.
     C*
     CSR         ZZFIL7    BEGSR
     C*
     CSR                   MOVELW2ITEM    W7ITEM
     CSR                   MOVE W2FMSL    W7FMSL
     CSR                   Z-ADDW2QTY     W7QTY
     CSR                   Z-ADD*ZEROS    W7NQTY
     CSR                   MOVE *BLANKS   W7SCAN
     CSR                   ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZFIL8   Fill screen 8 fields with info from file.
409 AC*
409 ACSR         ZZFIL8    BEGSR
409 AC*
409 ACSR                   MOVE 'N'       W8ZERO
409 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGETI   Get item description and pack description.
     C*
     CSR         ZZGETI    BEGSR
     C*
     CSR                   MOVE *BLANKS   $ISTR
     CSR                   CALL @FMTIT
     CSR                   PARM           $IITEM 15
     CSR                   PARM           $IDESC 30
     CSR                   PARM           $IPDSC 15
     CSR                   PARM           $ISTR  70
     CSR                   MOVEL$ISTR     SVITEM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR         *LIKE     DEFN RLSEQ#    WXSEQ#
     CSR         *LIKE     DEFN RLFAIL    WXDISP
     CSR         *LIKE     DEFN RLFAIL    WXFAIL
     CSR         *LIKE     DEFN RLFAIL    WXTAIL
     CSR                   MOVE *BLANKS   WXTAIL
     CSR         *LIKE     DEFN IDTIE     SAVTIE
     CSR         *LIKE     DEFN IDHIGH    SAVHGH
     CSR         *LIKE     DEFN SLLOC     TOLOC
     CSR         *LIKE     DEFN SLRLVL    TORLVL
     CSR         *LIKE     DEFN SLHAND    TOHAND
     CSR         *LIKE     DEFN SLLOC     FMLOC
     CSR         *LIKE     DEFN SLRLVL    FMRLVL
     CSR         *LIKE     DEFN SLHAND    FMHAND
     CSR         *LIKE     DEFN SLPSEQ    FMPSEQ
     CSR         *LIKE     DEFN SLSTYP    TOSTYP
     CSR         *LIKE     DEFN ITUMQ2    RPLQTY
     CSR         *LIKE     DEFN LBQRMN    SVQRMN
     CSR         *LIKE     DEFN ITITEM    SVITEM
409 ACSR         *LIKE     DEFN SLDISP    SVFDIS
409 ACSR                   MOVE 'N'       WOZERO  1
404aACSR                   MOVE *OFF      FOREVR  1
     C*
     C*  Define key for slot file by display field.
     C*
     CSR         KEYSL2    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           WXDISP
     C*
     C*  Define key for SLOT2 file. (From slot)
     C*
     CSR         SLFKEY    KLIST
     CSR                   KFLD           RLWHSE
     CSR                   KFLD           RLWHDP
     CSR                   KFLD           RLFDIS
409 AC*
409 AC*  Define key for VSLOT1 file. (From slot)
409 AC*
409 ACSR         SVFKEY    KLIST
409 ACSR                   KFLD           RLWHSE
409 ACSR                   KFLD           RLWHDP
409 ACSR                   KFLD           SVFDIS
     C*
     C*  Define key for SLOT2 file. (To slot)
     C*
     CSR         SLTKEY    KLIST
     CSR                   KFLD           RLWHSE
     CSR                   KFLD           RLWHDP
     CSR                   KFLD           RLTDIS
     C*
     C*  Define key for item tie/high definition file.
     C*
     CSR         IDKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           RLITEM
     CSR                   KFLD           RLSDEF
     C*
     C*  Define key for PIRITEM file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           RLITEM
     C*
     C*  Define key for PIRITEM file. (For link item)
     C*
     CSR         ILKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           ILITM2
     C*
     C*  Define key for PIRTRAN file.
     C*
     CSR         PTKEY     KLIST
     CSR                   KFLD           PTTRN#
     C*
     C*  Define key for RPLFILE file.
     C*
     CSR         RLKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           WXFAIL
     CSR                   KFLD           WXTAIL
     C*
     C*  Define partial key for RPLFILE file.
     C*
     CSR         RLPKEY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     C*
     C*  Define partial key for RPLFILE file.
     C*
     CSR         RLFKEY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           WXFAIL
     C*
     C*  Define key for LABEL file.
     C*
     CSR         LBKEY     KLIST
     CSR                   KFLD           LBLBL#
     C*
     C*  Define key for TASKDET file.
     C*
     CSR         KEYTD     KLIST
     CSR                   KFLD           PTTASK
     CSR                   KFLD           PTWHSE
     CSR                   KFLD           PTWHDP
     CSR                   KFLD           PTSTYP
     C*
     C*  Define key for ITEMDEF2 file.
     C*
     CSR         KEYID2    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           RLITEM
     CSR                   KFLD           SLSDEF
     C*
     C*  Convert today's date into century format.
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TODAY   80
     C*
     C*    - Get default warehouse for the user.
     C*
     CSR                   CALL 'GETWHSE'
     CSR                   PARM           #USER
     CSR                   PARM 0         #WHSE   30
     C*
     CSR                   Z-ADD#WHSE     W1WHSE
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     CSR                   MOVE *ON       REFRSH
     CSR                   MOVE *OFF      SAME    1
     CSR                   MOVE *OFF      MORE    1
     CSR                   MOVE *OFF      DONE    1
     CSR                   MOVE *OFF      FOUND   1
     CSR                   MOVE *OFF      EXCPTN  1
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZRVRS   Reverse the quantities.
     C*
     CSR         ZZRVRS    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Update task detail record.
     C*
     CSR         PTKEY     CHAINPIRTRAN             N79
     CSR         KEYTD     CHAINTASKDET              7978
     CSR         *IN79     IFEQ *OFF
     CSR                   SUB  PTCUBE    TDACTC
     CSR                   SUB  PTSWGT    TDACTW
     CSR                   SUB  PTPCS     TDACTP
     CSR                   ADD  SVCUBE    TDACTC
     CSR                   ADD  SVSWGT    TDACTW
     CSR                   ADD  SVQPCK    TDACTP
     CSR                   UPDATTDREC
     CSR                   ENDIF
     C*  Update pick quantity in label record.
     CSR         LBKEY     CHAINLABEL                79
     CSR                   Z-ADDSVQALC    LBQALC
     CSR                   Z-ADDSVQPCK    LBQPCK
     CSR         LBUCUB    MULT LBQPCK    LBCUBE
     CSR         LBUWGT    MULT LBQPCK    LBSWGT
     CSR                   UPDATLBREC
     C*  Update quantity in transaction record.
     CSR         PTKEY     CHAINPIRTRAN              79
     CSR                   Z-ADDSVQPCK    PTPCS
     CSR         ITCUBE    MULT PTPCS     PTCUBE
     CSR         ITSWGT    MULT PTPCS     PTSWGT
     CSR                   UPDATPTREC
640aAC                     EXSR ZZWRTT
     C*  Update transfer quantity in slot record.(From slot)
     CSR         SLFKEY    CHAINSLOT2                79
408 AC                     Z-ADDSLENTD    FMENTD  80
408 AC                     Z-ADDSLEXPD    FMEXPD  80
     CSR                   SUB  W7NQTY    SLTFR1
     CSR                   ADD  SVQPCK    SLTFR1
     CSR                   UPDATSLREC
     C*  Update receive quantity in slot record.(To slot)
     CSR         SLTKEY    CHAINSLOT2                79
     CSR         RLTYPE    IFNE 'B'
     CSR                   SUB  W7NQTY    SLRCV1
     CSR                   ADD  SVQPCK    SLRCV1
408 AC                     Z-ADDFMENTD    SLENTD
408 AC                     Z-ADDFMEXPD    SLEXPD
     CSR                   ENDIF
     CSR                   UPDATSLREC
     CSR         ENDRVS    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZSAME  Check to see, if replenishment record exists, where
     C*          the "From" and "To" aisles are the same.
     C*
     CSR         ZZSAME    BEGSR
     CSR                   MOVE *OFF      SAME
     CSR         RLKEY     SETLLRPLFILE                  77
     C*  - Match found
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ON       SAME
     CSR                   ENDIF
     CSR         ENDSAM    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZSTRT   Start a new transaction
     C*
     CSR         ZZSTRT    BEGSR
     C*
     C*     - Get new batch number.
     C*
     CSR                   CALL 'PIRBAT#'
     CSR                   PARM           BATCH#  70
     C*
     C*     - Create batch control record.
     C*
     CSR                   Z-ADDBATCH#    BTBAT#
     CSR                   Z-ADDRLWHSE    BTWHSE
     CSR                   MOVE '*REPLEN 'BTTYPE
     CSR                   MOVE *BLANKS   BTSTAT
     CSR                   MOVE *BLANKS   BTRTE
     CSR                   Z-ADDTODAY     BTSTRD
     CSR                   TIME           BTSTRT
     CSR                   MOVE #USER     BTSTRB
     CSR                   WRITEBTREC
     C*     - Get new transaction number.
     CSR                   CALL 'PIRTRN#'
     CSR                   PARM           PTTRN#
     C*
     C           RLTYPE    IFEQ 'B'
     C                     MOVE 'REPLBK'  @PTASK
     C                     ELSE
     C                     MOVE 'REPL  '  @PTASK
     C                     ENDIF
     C           ITCUBE    MULT TOPICK    @PCUBE
     C           ITSWGT    MULT TOPICK    @PSWGT
     C                     CALL @ADDTR
     C                     PARM '*CRTSTRT'@PCMD   8
     C                     PARM           #JOB
     C                     PARM PTTRN#    @PTRN#  70
     C                     PARM           @PTASK  6
     C                     PARM W1WHSE    @PWHSE  30
     C                     PARM W1WHDP    @PWHDP  5
     C                     PARM ITSTYP    @PSTYP  1
     C                     PARM           @PCUBE  93
     C                     PARM           @PSWGT  92
     C                     PARM TOPICK    @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM '0'       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM 'L'       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     C*
     C*  Create label record.
     C*
     C                     CLEARLBREC
     C                     Z-ADDRLWHSE    LBWHSE
     C                     MOVE RLWHDP    LBWHDP
     C*
     C*  FROM Slot.
     C*
     C                     MOVE RLFAIL    LBAISL
     C*  Update slot qty (Increase TFR qty)
     C           SLFKEY    CHAINSLOT2                79
     C           *IN79     IFEQ *OFF
408 AC                     Z-ADDSLENTD    FMENTD  80
408 AC                     Z-ADDSLEXPD    FMEXPD  80
     C                     ADD  TOPICK    SLTFR1
     C                     UPDATSLREC
     C                     ENDIF
     C*
     C                     Z-ADDSLLOC     LBLOC
     C                     Z-ADDSLRLVL    LBRLVL
     C                     MOVE SLHAND    LBHAND
     C                     Z-ADDSLPSEQ    LBPSEQ
     C                     MOVE SLSTYP    LBSTYP
     C           LBSTYP    IFEQ 'P'
     C                     Z-ADD1         LBQRYF
     C                     ELSE
     C                     Z-ADD0         LBQRYF
     C                     ENDIF
     C                     MOVE RLFDIS    LBDISP
     C*
     C*  Get stock quantity in pick slot.
     C*
     C                     CALL 'SLOTQTY'
     C                     PARM           SLSTK1
     C                     PARM           SLSTK2
     C                     PARM           SLSTK3
     C*
     C                     PARM           SLALC1
     C                     PARM           SLALC2
     C                     PARM           SLALC3
     C*
     C                     PARM           SLTFR1
     C                     PARM           SLTFR2
     C                     PARM           SLTFR3
     C*
     C                     PARM           SLPCK1
     C                     PARM           SLPCK2
     C                     PARM           SLPCK3
     C*
     C                     PARM           SLRCV1
     C                     PARM           SLRCV2
     C                     PARM           SLRCV3
     C*
     C                     PARM           STOCK1  50
     C                     PARM           STOCK2  30
     C                     PARM           STOCK3  30
     C*
     C                     PARM           AVAIL1  50
     C                     PARM           AVAIL2  30
     C                     PARM           AVAIL3  30
     C                     Z-ADDAVAIL1    LBQAVL
     C* TO Slot.
     C                     Z-ADDRLWHSE    LBWHS2
     C                     MOVE RLWHDP    LBWHD2
     C                     MOVE RLTAIL    LBASL2
     C*  Update slot qty (Increase RCV qty)
     C           SLTKEY    CHAINSLOT2                79
     C           *IN79     IFEQ *OFF
     C           RLTYPE    IFEQ 'B'
     C                     ADD  RPLQTY    SLRCV1
     C                     ELSE
     C                     ADD  TOPICK    SLRCV1
     C                     ENDIF
408 AC                     Z-ADDFMENTD    SLENTD
408 AC                     Z-ADDFMEXPD    SLEXPD
     C                     UPDATSLREC
     C                     ENDIF
     C*
     C                     Z-ADDSLLOC     LBLOC2
     C                     Z-ADDSLRLVL    LBLVL2
     C                     MOVE SLHAND    LBHND2
     C                     MOVE SLDISP    LBDSP2
     C                     MOVE *BLANKS   LBRTE
     C                     MOVE RLITEM    LBITEM
     C                     Z-ADDBATCH#    LBPBAT
     C                     MOVE 'N'       LBUTYP
     C                     MOVE ITUM1     LBUCOD
     C*
     C*  Quantity remaining field is used to contain break down
     C*  quantity for broken case item.
     C*
     C           RLTYPE    IFEQ 'B'
     C                     Z-ADDRPLQTY    LBQRMN
     C                     ELSE
     C                     Z-ADD0         LBQRMN
     C                     ENDIF
     C                     Z-ADDLBQRMN    SVQRMN
     C                     Z-ADDTOPICK    LBQALC
     C                     Z-ADDTOPICK    LBQPCK
     C                     Z-ADDITCUBE    LBUCUB
     C           LBUCUB    MULT TOPICK    LBCUBE
     C                     Z-ADDITSWGT    LBUWGT
     C           LBUWGT    MULT TOPICK    LBSWGT
     C           IDKEY     CHAINITEMDEF              79
     C                     Z-ADDSAVTIE    LBTIE
     C                     Z-ADDSAVHGH    LBHIGH
     C                     Z-ADDPTTRN#    LBTRN#
     C                     Z-ADD0         LBCTR#
     C*     - Get new label number.
     C                     CALL 'PIRLBL#'
     C                     PARM           LBLBL#
     C                     MOVE 'L'       LBGRP1
     C                     MOVE ' '       LBGRP2
     C                     MOVE 'R'       LBTYPE
     C                     MOVE 'P'       LBSTAT
     C                     Z-ADDTODAY     LBSDTE
     C                     TIME           LBSTIM
     C                     Z-ADDTODAY     LBRDTE
     C                     WRITELBREC
     C*
     CSR         *LIKE     DEFN LBQALC    SVQALC
     CSR         *LIKE     DEFN LBQPCK    SVQPCK
     CSR         *LIKE     DEFN LBCUBE    SVCUBE
     CSR         *LIKE     DEFN LBSWGT    SVSWGT
     CSR                   Z-ADDLBQALC    SVQALC
     CSR                   Z-ADDLBQPCK    SVQPCK
     CSR                   Z-ADDLBCUBE    SVCUBE
     CSR                   Z-ADDLBSWGT    SVSWGT
     CSR         ENDSTR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZSURE  Make sure, if it is still Ok to go ahead with this
     C*          replenishment.
     C*
     CSR         ZZSURE    BEGSR
     CSR                   MOVE *OFF      SURE    1
     C*
     C*  For breakdown item:
     C*  If the replenishment item does not have the breakdown qty 1
     C*  defined, then skip this record.
     C*
     C           RLTYPE    IFEQ 'B'
     C           ITKEY     CHAINITEMLNK              79
     C           *IN79     CABEQ*ON       ENDSUR
     C           ILKEY     CHAINPIRITEM              79
     C           *IN79     IFEQ *OFF
     C           ITUMQ2    ANDLE0
     C                     GOTO ENDSUR
     C                     ELSE
     C                     Z-ADDITUMQ2    RPLQTY
     C                     ENDIF
     C                     ELSE
     C                     Z-ADD0         RPLQTY
     C                     ENDIF
     C*
     C*  Get item.
     C*
     C           ITKEY     CHAINPIRITEM              79
     C           *IN79     CABEQ*ON       ENDSUR
     C*
     C*  Get picking slot for item.(TO Slot)
     C*
     C           SLTKEY    CHAINSLOT2               N79
     C           *IN79     CABEQ*ON       ENDSUR
     C                     Z-ADDSLLOC     TOLOC
     C                     Z-ADDSLRLVL    TORLVL
     C                     MOVE SLHAND    TOHAND
     C                     MOVE SLSTYP    TOSTYP
     C*
     C*  Non-broken case items.
     C*
     C           RLTYPE    IFNE 'B'
     C*
     C*  Ignore slot if no matching tie/high definition. (To slot)
     C*
     C           KEYID2    CHAINITEMDEF2             79
     C           *IN79     CABEQ*ON       ENDSUR
     C                     Z-ADDIDTIE     SAVTIE
     C                     Z-ADDIDHIGH    SAVHGH
     C*
     C*  Calculate total quantity that can fit in slot.
     C*
     C                     SELEC
     C           IDTIE     WHEQ 0
     C                     Z-ADDIDHIGH    DSPQTY  50
     C           IDHIGH    WHEQ 0
     C                     Z-ADDIDTIE     DSPQTY
     C                     OTHER
     C           IDTIE     MULT IDHIGH    DSPQTY
     C                     ENDSL
     C*
     C           DSPQTY    MULT SDPOS     DSTQTY  70
     C*
     C*  Get stock quantity in pick slot.
     C*
     C                     CALL 'SLOTQTY'
     C                     PARM           SLSTK1
     C                     PARM           SLSTK2
     C                     PARM           SLSTK3
     C*
     C                     PARM           SLALC1
     C                     PARM           SLALC2
     C                     PARM           SLALC3
     C*
     C                     PARM           SLTFR1
     C                     PARM           SLTFR2
     C                     PARM           SLTFR3
     C*
     C                     PARM           SLPCK1
     C                     PARM           SLPCK2
     C                     PARM           SLPCK3
     C*
     C                     PARM           SLRCV1
     C                     PARM           SLRCV2
     C                     PARM           SLRCV3
     C*
     C                     PARM           STOCK1  50
     C                     PARM           STOCK2  30
     C                     PARM           STOCK3  30
     C*
     C                     PARM           AVAIL1  50
     C                     PARM           AVAIL2  30
     C                     PARM           AVAIL3  30
     C*
     C*  Calculate empty quantity in pick slot.
     C*
     C           AVAIL1    IFGE 0
     C           DSTQTY    SUB  AVAIL1    EMPTYQ  70
     C                     ELSE
     C                     Z-ADDDSTQTY    EMPTYQ
     C                     ENDIF
     C*
     C*  Get out if there is no empty space in the pick slot.
     C*
     C           EMPTYQ    CABLE0         ENDSUR
     C                     ENDIF
     C*
     C*  FROM Slot.
     C*
     C           SLFKEY    CHAINSLOT2                79
     C           *IN79     CABEQ*ON       ENDSUR
     C                     Z-ADDSLLOC     FMLOC
     C                     Z-ADDSLRLVL    FMRLVL
     C                     MOVE SLHAND    FMHAND
     C                     Z-ADDSLPSEQ    FMPSEQ
     C*
     C*     Ignore slot if no normal stock or past expiration date.
     C*
     C           SLSTK1    IFLE 0
     C           SLEXPD    ORNE 0
     C           SLEXPD    ANDLTTODAY
     C                     GOTO ENDSUR
     C                     ENDIF
     C*
     C*     If nothing available then skip this replenishment.
     C*
     C                     CALL 'SLOTQTY'
     C                     PARM           SLSTK1
     C                     PARM           SLSTK2
     C                     PARM           SLSTK3
     C*
     C                     PARM           SLALC1
     C                     PARM           SLALC2
     C                     PARM           SLALC3
     C*
     C                     PARM           SLTFR1
     C                     PARM           SLTFR2
     C                     PARM           SLTFR3
     C*
     C                     PARM           SLPCK1
     C                     PARM           SLPCK2
     C                     PARM           SLPCK3
     C*
     C                     PARM           SLRCV1
     C                     PARM           SLRCV2
     C                     PARM           SLRCV3
     C*
     C                     PARM           STOCK1  50
     C                     PARM           STOCK2  30
     C                     PARM           STOCK3  30
     C*
     C                     PARM           AVAIL1  50
     C                     PARM           AVAIL2  30
     C                     PARM           AVAIL3  30
     C*
     C           AVAIL1    CABLE0         ENDSUR
409 AC                     Z-ADDAVAIL1    AVAILF  70
     C*
     C*  For broken case item, qty picked is always 1.
     C*
     C           RLTYPE    IFEQ 'B'
     C                     Z-ADD1         TOPICK
     C                     ELSE
     C*
     C*  Get tie/high for FROM slot.
     C*
     C           KEYID2    CHAINITEMDEF2             79
     C           *IN79     IFEQ *ON
     C                     Z-ADD0         IDTIE
     C                     Z-ADD0         IDHIGH
     C                     ENDIF
     C*
     C*     Grab one pallet or less.
     C*
     C                     SELEC
     C           IDTIE     WHEQ 0
     C                     Z-ADDIDHIGH    PALLET  50
     C           IDHIGH    WHEQ 0
     C                     Z-ADDIDTIE     PALLET
     C                     OTHER
     C           IDTIE     MULT IDHIGH    PALLET
     C                     ENDSL
     C           PALLET    IFLE AVAIL1
     C           PALLET    ANDGT0
     C                     Z-ADDPALLET    TOPICK  50
     C                     ELSE
     C                     Z-ADDAVAIL1    TOPICK
     C                     ENDIF
     C*
     C*  Make sure quantity will fit in slot.
     C*
     C           TOPICK    IFGT EMPTYQ
     C                     Z-ADDEMPTYQ    TOPICK
     C                     ENDIF
     C                     ENDIF
     C*
     C*  If we made to this point then we are sure to go ahead with
     C*  this replenishment.
     C*
     CSR                   MOVE *ON       SURE
     CSR         ENDSUR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTIME   Update for screen 1.
     C*
     CSR         ZZTIME    BEGSR
     C*
     C*      Calculate length of time in minutes for output.
     C*
     CSR                   Z-ADDSTRTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPBEG  40
     CSR                   ADD  DSMM      TMPBEG
     C*
     CSR                   Z-ADDFINTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     C*
     C*   If the ending time is < starting time, than
     C*   we have gone past the midnight.
     C*
     CSR         FINTIM    IFLT STRTIM
     CSR                   ADD  24        DSHH
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPEND  40
     CSR                   ADD  DSMM      TMPEND
     C*
     CSR         *LIKE     DEFN PTDMIN    TIMLEN
     CSR         TMPEND    SUB  TMPBEG    TIMLEN
     CSR         TIMLEN    IFLT 0
     CSR                   Z-ADD0         TIMLEN
     CSR                   ENDIF
     C*
     CSR         ENDTIM    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update for screen 1.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   MOVE *OFF      DONE
     C*
     C*   Right adjust AISLE code.
     C*
     CSR                   MOVEL*BLANKS   $CSTR
     CSR                   MOVELW1AISL    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*RIGHT  '$CCMD   8
     CSR                   PARM           $CSTR  30
     C*   Get next replenishment record.
     CSR                   MOVE $CSTR     WXFAIL
     CSR                   MOVE $CSTR     WXTAIL
     CSR                   SELEC
     CSR         W1AISL    WHEQ *BLANKS
     CSR                   EXSR ZZDEPT
     CSR         MORE      IFEQ *OFF
     CSR                   MOVE *ON       DONE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2806
     CSR                   GOTO ENDUP1
     CSR                   ENDIF
     CSR         MORE      IFEQ *ON
     CSR                   EXSR ZZSAME
     CSR                   ENDIF
     CSR         SAME      IFEQ *OFF
     CSR         RLFKEY    SETLLRPLFILE
     CSR                   ENDIF
     C*
     CSR         W1AISL    WHGT *BLANKS
     CSR         BACK      TAG
     CSR                   EXSR ZZSAME
     CSR                   SELEC
     CSR         SAME      WHEQ *OFF
     CSR                   EXSR ZZDIFR
     CSR         DONE      IFEQ *ON
     CSR                   MOVE *ON       DONE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2806
     CSR                   GOTO ENDUP1
     CSR                   ENDIF
     CSR         FOUND     IFEQ *OFF
     CSR                   MOVE RLFAIL    WXFAIL
     CSR                   MOVE RLFAIL    WXTAIL
     CSR                   GOTO BACK
     CSR                   ENDIF
     CSR                   ENDSL
     C*
     CSR                   ENDSL
     C*
     CSR         DONE      IFEQ *OFF
     CSR                   READ RPLFILE                7879
     CSR         *IN78     IFEQ *ON
     CSR         *IN79     OREQ *ON
     CSR                   GOTO BACK
     CSR                   ENDIF
     CSR                   EXSR ZZSURE
     CSR         SURE      IFEQ *OFF
     CSR         RLKEY     SETGTRPLFILE              77
411 DC*R         *IN77     IFEQ *OFF
411 MCSR         *IN77     IFEQ *ON
411 ACSR                   MOVE *ON       DONE
411 ACSR                   GOTO STOP1
411 ACSR                   ELSE
     CSR                   READ RPLFILE             N    77
     CSR         *IN77     IFEQ *OFF
     CSR         RLWHDP    ANDEQW1WHDP
     CSR                   MOVE RLFAIL    WXFAIL
     CSR                   MOVE RLFAIL    WXTAIL
     CSR                   GOTO BACK
     CSR                   ELSE
     CSR                   MOVE *ON       DONE
     CSR                   GOTO STOP1
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*   Start new transaction.
     CSR                   EXSR ZZSTRT
     CSR                   ENDIF
     CSR         STOP1     TAG
     CSR         DONE      IFEQ *ON
     CSR                   MOVE *ON       DONE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2806
     CSR                   GOTO ENDUP1
     CSR                   ENDIF
     CSR                   EXSR SCR02I
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update for screen 2.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
409 ACSR         TOPICK    IFEQ AVAILF
409aAC                     EXSR ZZCHKV
409aACSR         HASVS     IFEQ *OFF
409 ACSR                   EXSR SCR08I
409 ACSR                   ELSE
     CSR                   EXSR SCR03I
409 ACSR                   ENDIF
409 ACSR                   ELSE
409 ACSR                   EXSR SCR03I
409aACSR                   ENDIF
     CSR         ENDUP2    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD3   Update for screen 3.
     C*
     CSR         ZZUPD3    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR ZZCLSE
413bAC*
413bACSR                   SELEC
413bACSR         ERROR     WHEQ *OFF
413bACSR                   MOVE *OFF      EXCPTN
413bAC*
409 ACSR         WOZERO    IFEQ 'Y'
409 ACSR                   EXSR ZZZERO
409 ACSR                   ENDIF
     CSR                   DELETRLREC
     CSR                   EXSR SCR04I
413bAC*
413bAC*    Errors occured during close - re-display screen with error.
413bAC*
413bACSR         ERROR     WHEQ *ON
413bACSR                   MOVE *BLANKS   W3SCAN
413bACSR                   EXSR SCR03I
413bACSR                   ENDSL
     CSR         ENDUP3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD4   Update for screen 4.
     C*
     CSR         ZZUPD4    BEGSR
     CSR         TOP       TAG
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     C*   Get next replenishment record.(Next in line by "Ping-Pong")
     CSR                   MOVE RLTAIL    WXFAIL
     CSR                   MOVE RLTAIL    WXTAIL
     CSR         AGAIN     TAG
     CSR                   EXSR ZZSAME
     CSR                   SELEC
     CSR         SAME      WHEQ *OFF
     CSR                   EXSR ZZDIFR
     CSR         FOUND     IFEQ *OFF
     CSR         DONE      ANDEQ*OFF
     CSR                   MOVE RLFAIL    WXFAIL
     CSR                   MOVE RLFAIL    WXTAIL
     CSR                   GOTO AGAIN
     CSR                   ENDIF
     CSR                   ENDSL
     C*
     CSR         DONE      IFEQ *OFF
     CSR                   READ RPLFILE                7879
     CSR         *IN78     IFEQ *ON
     CSR         *IN79     OREQ *ON
     CSR                   GOTO TOP
     CSR                   ENDIF
     CSR                   EXSR ZZSURE
     CSR         SURE      IFEQ *OFF
     CSR         RLKEY     SETGTRPLFILE              77
     CSR         *IN77     IFEQ *OFF
     CSR                   READ RPLFILE             N    77
     CSR         *IN77     IFEQ *OFF
     CSR         RLWHDP    ANDEQW1WHDP
     CSR                   MOVE RLFAIL    WXFAIL
     CSR                   MOVE RLFAIL    WXTAIL
     CSR                   GOTO AGAIN
     CSR                   ELSE
     CSR                   MOVE *ON       DONE
     CSR                   GOTO STOP2
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*   Start new transaction.
     CSR                   EXSR ZZSTRT
     CSR                   ENDIF
     CSR         STOP2     TAG
     CSR         DONE      IFEQ *ON
     CSR                   MOVE *ON       DONE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2806
     CSR                   ENDIF
     CSR                   EXSR SCR02I
     C*
     CSR         ENDUP4    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD5   Update for screen 5.
     C*
     CSR         ZZUPD5    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   SELEC
     CSR         W5ITEM    WHEQ 'Y'
     CSR                   EXSR SCR06I
     CSR         W5QTY     WHEQ 'Y'
     CSR                   EXSR SCR07I
     CSR                   ENDSL
     CSR         ENDUP5    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD6   Update for screen 6.
     C*
     CSR         ZZUPD6    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     C*  Write an item exception record, and delete replenishment
     C*  record.
     CSR                   Z-ADDRLWHSE    EXWHSE
     CSR                   MOVE RLWHDP    EXWHDP
     CSR                   MOVE ITSTYP    EXSTYP
     CSR                   MOVE RLITEM    EXITEM
     CSR                   MOVE RLFDIS    EXFDIS
     CSR                   MOVE RLTDIS    EXTDIS
     CSR                   Z-ADDRLQTY     EXQTY
     CSR                   MOVE 'REPL  '  EXTASK
     CSR                   Z-ADDTODAY     EXGDTE
     CSR                   TIME           EXGTIM
414aACSR                   MOVE #USER     EXGBY
414aACSR                   MOVE 'WRGITM ' EXERID
414aACSR                   MOVE '1 '      EXESTA
     CSR                   WRITEEXREC
     CSR                   DELETRLREC
     C*  Reverse quantities etc, just like the job was aborted.
     CSR                   EXSR ZZABRT
     CSR                   EXSR SCR04I
     CSR         ENDUP6    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD7   Update for screen 7.
     C*
     CSR         ZZUPD7    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   MOVE *ON       EXCPTN
     CSR                   MOVE RLTDIS    W3TOSL
     CSR                   Z-ADDW7NQTY    W3QTY
     CSR                   MOVE *BLANKS   W3SCAN
     C*  Update pick quantity in label record.
     CSR         LBKEY     CHAINLABEL                79
     CSR         RLTYPE    IFNE 'B'
     CSR                   Z-ADDW7NQTY    LBQALC
     CSR                   Z-ADDW7NQTY    LBQPCK
     CSR         LBUCUB    MULT W7NQTY    LBCUBE
     CSR         LBUWGT    MULT W7NQTY    LBSWGT
     CSR                   ENDIF
     CSR                   UPDATLBREC
     C*  Update quantity in transaction record.
     CSR         RLTYPE    IFNE 'B'
     CSR         PTKEY     CHAINPIRTRAN              79
     CSR                   Z-ADDW7NQTY    PTPCS
     CSR         ITCUBE    MULT W7NQTY    PTCUBE
     CSR         ITSWGT    MULT W7NQTY    PTSWGT
     CSR                   UPDATPTREC
640aAC                     EXSR ZZWRTT
     CSR                   ENDIF
     C*  Update transfer quantity in slot record.(From slot)
     CSR         SLFKEY    CHAINSLOT2                79
408 AC                     Z-ADDSLENTD    FMENTD  80
408 AC                     Z-ADDSLEXPD    FMEXPD  80
     CSR                   SUB  TOPICK    SLTFR1
     CSR                   ADD  W7NQTY    SLTFR1
     CSR                   UPDATSLREC
     C*  Update receive quantity in slot record.(To slot)
     CSR         SLTKEY    CHAINSLOT2                79
     CSR         RLTYPE    IFNE 'B'
     CSR                   SUB  TOPICK    SLRCV1
     CSR                   ADD  W7NQTY    SLRCV1
408 AC                     Z-ADDFMENTD    SLENTD
408 AC                     Z-ADDFMEXPD    SLEXPD
     CSR                   ENDIF
     CSR                   UPDATSLREC
     C*
     C*  Update task detail record.
     C*
     CSR         KEYTD     CHAINTASKDET              7978
     CSR         *IN79     IFEQ *OFF
     CSR                   SUB  SVCUBE    TDACTC
     CSR                   SUB  SVSWGT    TDACTW
     CSR                   SUB  SVQPCK    TDACTP
     CSR                   ADD  PTCUBE    TDACTC
     CSR                   ADD  PTSWGT    TDACTW
     CSR                   ADD  PTPCS     TDACTP
     CSR                   UPDATTDREC
     CSR                   ENDIF
     CSR         RLTYPE    IFEQ 'B'
     CSR                   MOVE *BLANKS   W3ITEM
     CSR                   EXSR ZZBITM
     CSR                   MOVELSVITEM    W3ITEM
     CSR                   ELSE
     CSR                   MOVELSVITEM    W3ITEM
     CSR                   ENDIF
409 ACSR         W7NQTY    IFEQ AVAIL1
409 ACSR                   EXSR SCR08I
409 ACSR                   ELSE
     CSR                   EXSR SCR03I
409 ACSR                   ENDIF
     CSR         ENDUP7    ENDSR
     C*
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZUPD8   Update for screen 8.
409 AC*
409 ACSR         ZZUPD8    BEGSR
409 ACSR                   MOVE *OFF      ERROR
409 ACSR                   MOVE *ON       REFRSH
409 ACSR                   MOVE W8ZERO    WOZERO
409 ACSR                   EXSR SCR03I
409 ACSR         ENDUP8    ENDSR
409 AC*
640aAC*----------------------------------------------------------------*********
640aAC*
640aAC*  ZZWRTT     Execute new WRTTRAN1 program to add/update PIRTRANDn
640aAC*
640aAC           ZZWRTT    BEGSR
640aAC                     MOVEL'*ONETRAN'WPCMD  10
640aAC                     Z-ADD0         WPWAIT  20
640aAC                     MOVELPTWHSE    WPWHSE  30
640aAC                     MOVELPTTRN#    WPTRN#  70
640aAC                     Z-ADD0         WPFRDT  80
640aAC                     Z-ADD0         WPTODT  80
640aAC                     Z-ADD0         WPEMP#  50
640aAC                     CALL 'WRTTRAN1'
640aAC                     PARM           WPCMD
640aAC                     PARM           WPWAIT
640aAC                     PARM           WPWHSE
640aAC                     PARM           WPTRN#
640aAC                     PARM           WPFRDT
640aAC                     PARM           WPTODT
640aAC                     PARM           WPEMP#
640aAC                     ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZZERO   Verify zero slots.
409 AC*
409 ACSR         ZZZERO    BEGSR
409 AC*
409 ACSR         SLFKEY    CHAINSLOT2                79
409 AC*
413aDC*R         *IN79     CABEQ*ON       ENDZRO
413aACSR                   SELEC
413aACSR         *IN79     WHEQ *ON
413aAC*
413aDC*R         SLSTAT    IFEQ 'Z'
413aAC*
413aAC*    Slot at 'Z'ero status - verify slot.
413aAC*
413aMCSR         SLSTAT    WHEQ 'Z'
409 AC           SLRSRV    IFEQ 'V'
409 AC                     DELETSLREC
409 ACSR         SLFKEY    CHAINVSLOT1               78
409 AC                     DELETVSREC
409 ACSR                   ELSE
409 ACSR                   MOVE 'V '      SLSTAT
409 ACSR                   MOVE *BLANKS   SLITEM
409 ACSR                   Z-ADDTODAY     SLSDTE
409 ACSR                   TIME           SLSTIM
409 AC*
409 AC*   Initialize dates, picking priority and quantities.
409 AC*
409 ACSR                   Z-ADD0         SLENTD
409 ACSR                   Z-ADD0         SLEXPD
409 ACSR                   Z-ADD0         SLPRTY
409 ACSR                   Z-ADD0         SLSTK1
409 ACSR                   Z-ADD0         SLSTK2
409 ACSR                   Z-ADD0         SLSTK3
409 ACSR                   Z-ADD0         SLRCV1
409 ACSR                   Z-ADD0         SLRCV2
409 ACSR                   Z-ADD0         SLRCV3
409 ACSR                   Z-ADD0         SLALC1
409 ACSR                   Z-ADD0         SLALC2
409 ACSR                   Z-ADD0         SLALC3
409 ACSR                   Z-ADD0         SLTFR1
409 ACSR                   Z-ADD0         SLTFR2
409 ACSR                   Z-ADD0         SLTFR3
409 ACSR                   Z-ADD0         SLPCK1
409 ACSR                   Z-ADD0         SLPCK2
409 ACSR                   Z-ADD0         SLPCK3
409 ACSR                   UPDATSLREC
409 ACSR                   ENDIF
413aAC*
413aAC*    Release record lock if slot status is not 'Z'ero.
413aAC*
413aACSR                   OTHER
413aACSR                   UNLCKSLOT2
413aDC*R                   ENDIF
413aACSR                   ENDSL
409 ACSR         ENDZRO    ENDSR
409 AC*
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
**
Item
Qty
Verify Zero
