500 A*----------------------------------------------------------------
500 A*  Multilingual Verision
500 A*  Every screen and message has a corresponding Spanish version.
500 A*  Any changes must be made to both languages.
500 A*  If necessary, contact appropriate person to do translation.
     F*----------------------------------------------------------------
     F*   Copyright (C) 2001 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (630) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  SL120     RF Change Pick Slot
     F*  10 April 2001
     F*  Max Blacknik
     F*
     F*  Notes
     F*       8 X 20 Screens for hand held scanners
     F*
     F*  Revisions
     F*
415 AF*    04/10/01  MLB  4.15
     F*      - Created.
416 AF*    07/02/02  RH   4.16
     F*      - Recompiled, ITEMMSC changed.
417aAF*    04/03/03  RH   4.17a
     F*      - Recompiled, ITEMMSC file changed.
     F*
500 AF*    06/03/06  JCJ  5.00
     F*      - Added Multilingual logic.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FSL120FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FITEMMSC IF  E           K        DISK
     FOPTIONS IF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     FSLOT2   UF  E           K        DISK
     FSLOT3   IF  E           K        DISK
     F            SLREC                             KRENAMESLREC3
     FVSLOT2  IF  E           K        DISK
     F            VSREC                             KRENAMEVSREC2
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    $MD       128  1
     E                    DESC    1   2 50
500 AE                    DESCSP  1   2 50
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$CERM       DS
     I                                        1  60 XCERM
     I                                        1   4 $CMSG
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$AERM       DS
     I                                        1  60 XAERM
     I                                        1   4 $AMSG
     I*----------------------------------------------------------------
     I*  *SYSTEM  -  System options.
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    OPEPM   -  Using EPM module (Y,N).
     I*    OPRF    -  Using RF module (Y,N).
     I*    OPCAPC  -  Capture catch weights at pick closing (Y,N).
     I*    OPLETD  -  Print letdown labels (Y,N).
     I*    OPWRNC  -  Perform catch weight variance check (Y,N).
     I*    OPRG1C  -  Catch weight low variance percentage.
     I*    OPRG2C  -  Catch weight high variance percentage.
     I*    OPIMPI  -  Import item fields from host.(Y,N).
     I*    OPMPCK  -  Allow multiple pick slots for fixed items (Y,N).
     I*
     I* Data structure
     I*
     IOPDAT2      DS
     I                                        1   1 OPEPM
     I                                        2   2 OPRF
     I                                        3   3 OPCAPC
     I                                        4   4 OPLETD
     I                                        5   5 OPWRNC
     I                                        6   81OPRG1C
     I                                        9  111OPRG2C
     I                                       12  12 OPIMPI
     I                                       14  14 OPMPCK
     I                                      117 117 OPTEN2
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'FRMTIT'              C         @FMTIT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I                                       81  88 $LTYPE
     I                                       89  89 $LMPUT
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I                                       27  41 $LITEM
     I*
     I                                       27  38 $LDSP1
     I*
     I                                       42  53 $LDISP
     I*
     I*----------------------------------------------------------------
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*----------------------------------------------------------------
     I*  API programs
     I*
     I              'APICVTSLT '          C         @APICS
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  12 ERDISP
     I*
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
500 AI              'PIRMSGFSP '          C         #MSGSP
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      None
     C*
     C*    Returned Parameters
     C*      None
     C*
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     ENDIF
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     ENDCS
     C                     ENDDO
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   ENDIF
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR                   SELEC
     CSR         NXTSCR    WHEQ '01 '
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   EXFMTSCRN1SP                50
500 ACSR                   OTHER
     CSR                   EXFMTSCREEN1                50
500 ACSR                   ENDSL
     C*
     CSR         NXTSCR    WHEQ '02 '
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   EXFMTSCRN2SP                50
500 ACSR                   OTHER
     CSR                   EXFMTSCREEN2                50
500 ACSR                   ENDSL
     C*
     CSR                   ENDSL
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     3334
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     9298
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   MOVE *OFF      REDSPL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   EXSR ZZFIL1
     CSR                   MOVE *OFF      REFRSH  1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     CSR                   EXSR ZZFIL2
     CSR                   MOVE *OFF      REFRSH
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*R                   EXSR ZZUPD1
     CSR                   EXSR ZZNXT1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSC2
     CSR         REDSPL    CABEQ*ON       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ*ON       ENDSC2
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   MOVE #MSGSP    $MSGF
500 ACSR                   OTHER
     CSR                   MOVE #MSGF     $MSGF  10
500 ACSR                   ENDSL
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*     ZMxx  Warning: Slot values changed before update.
     C*
     CSR         ZMXX      BEGSR
     CSR                   MOVE 'IT12217' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7979  Record does not exist.
     C*
     CSR         ZM7979    BEGSR
     CSR                   MOVE 'PIR7979' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   RC20001  Invalid slot entered.(TO)
     C*
     CSR         ZM2001    BEGSR
     CSR                   MOVE 'RC20001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PIR0203  Value cannot be blank.
     C*
     CSR         ZM0203    BEGSR
     CSR                   MOVE 'PIR0203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM1204   Pick slot already exists for this item in the
     C*              fixed section.
     C*
     CSR         ZM1204    BEGSR
     CSR                   MOVE 'SL11204' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM1205   Maximum number of pick slots reached for this item
     C*              in the fixed section.
     C*
     CSR         ZM1205    BEGSR
     CSR                   MOVE 'SL11205' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELIMNRPK    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHKV   Check if slot has virtual slots tied to it.
     C*
     CSR         ZZCHKV    BEGSR
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      HASVS   1
     C*
     CSR         KEYVS2    SETLLVSLOT2
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYVS2    READEVSLOT2                 7879
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*    If slot read same as one selected for replenishment, skip
     C*    this slot and see if any other virtuals exist.
     CSR         SKPSLT    IFEQ *ON
     CSR         VSDISP    ANDEQSVFDIS
     CSR                   ITER
     CSR                   ENDIF
     C*  Skip, if slot is empty
     CSR                   CALL 'RTNSTAT'
     CSR                   PARM           KYWHSE
     CSR                   PARM           KYWHDP
     CSR                   PARM           VSDISP
     CSR                   PARM           $PSTAT  2
     CSR         $PSTAT    IFEQ 'Z '
     CSR                   ITER
     CSR                   ENDIF
     C*
     CSR                   MOVE *ON       HASVS
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Verify warehouse department.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Call API for slot.
     C*
     CSR                   CALL @APICS
     CSR                   PARM           W1DISP
     CSR                   PARM 5         WOROW
     CSR                   PARM 8         WOCOL
     CSR                   PARM           @ARTN   8
     CSR         @ARTN     IFEQ '*REDSPLY'
     CSR                   MOVE *ON       REDSPL
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
     C*
     C*    Slot can't be blank.
     C*
     CSR         W1DISP    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *BLANKS   ERRMSG
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   MOVEADESCSP,1  ERRMSG
500 ACSR                   OTHER
     CSR                   MOVEADESC,1    ERRMSG
500 ACSR                   ENDSL
     CSR                   EXSR ZM0203
     CSR                   ENDIF
     C*
     C*    Verify slot.
     C*
     CSR         W1DISP    IFNE *BLANKS
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   MOVE *BLANKS   $LITEM
     CSR                   MOVE W1DISP    $LDISP
     CSR                   CALL 'SL900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Check for virtual slots attached to pick slot.
     C*
     CSR                   SELEC
     CSR         ERROR     WHEQ *OFF
     CSR                   Z-ADDW1WHSE    KYWHSE
     CSR                   MOVE W1WHDP    KYWHDP
     CSR                   MOVE W1DISP    KYDISP
     CSR                   EXSR ZZCHKV
     CSR         HASVS     IFEQ *ON
     CSR                   MOVE '*SELECT '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   MOVE W1DISP    $LDSP1
     CSR                   CALL 'VS820'
     CSR                   PARM           $LPARM
     CSR                   SELEC
     CSR         $LRTN     WHEQ '*SELECT '
     CSR                   MOVE $LDSP1    W1DISP
     CSR                   OTHER
     CSR                   MOVE *ON       ERROR
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDSL
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*    Pick slot must be Y or N.
     C*
     CSR         W2PICK    IFNE 'Y'
     CSR         W2PICK    ANDNE'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   MOVE *BLANKS   ERRMSG
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   MOVEADESCSP,2  ERRMSG
500 ACSR                   OTHER
     CSR                   MOVELDESC,2    ERRMSG
500 ACSR                   ENDSL
     CSR                   EXSR ZM1005
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     CSR         KEYS2     CHAINSLOT2               N79
     C*
     CSR                   SELEC
     C*
     C*    System allows multiple pick slots - make sure that if we
     C*    are adding a slot we do not exceed the number set for the item.
     CSR         OPMPCK    WHEQ 'Y'
     CSR         SLSTYP    ANDEQ'F'
     CSR         SLITEM    ANDGT*BLANKS
     CSR         W2PICK    ANDEQ'Y'
     C*
     CSR                   EXSR ZZCHKP
     C*
     CSR         W2PICK    IFEQ 'Y'
     CSR         SLSTAT    ANDEQ'A '
     CSR         NBRPCK    ANDGEIMNRPK
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   EXSR ZM1205
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     C*    If the item is in the fixed section, and the slot you
     C*    are adding is active and it is a picking slot then there
     C*    cannot be any other active picking slot for this item.
     CSR         SLSTYP    WHEQ 'F'
     CSR         W2PICK    ANDEQ'Y'
     CSR         SVSTAT    ANDEQ'A '
     CSR         OPMPCK    ANDNE'Y'
     CSR         KEYS3     SETLLSLOT3
     CSR         FOREVR    DOWEQFOREVR
     CSR         KEYS3     READESLOT3                    79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR         *IN79     WHEQ *OFF
     CSR         SLDISP    ANDEQW1DISP
     CSR                   ITER
     C*
     CSR         *IN79     WHEQ *OFF
     CSR         SLPICK    ANDEQ'Y'
     CSR         SLSTAT    ANDEQ'A '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   MOVE SLDISP    ERDISP
     CSR                   EXSR ZM1204
     CSR                   LEAVE
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR         ERROR     CABEQ*ON       ENDCK2
     C*
     CSR                   ENDSL
     C*
     C*
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   SELEC
     C*
     C*     Warehouse.
     C*
     CSR         ROW#      WHEQ 3
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    W1WHSE
     CSR                   ENDIF
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      WHEQ 4
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LWHDP    W1WHDP
     CSR                   ENDIF
     C*
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     CSR                   MOVE *BLANKS   W1DISP
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     C*
     CSR         SLITEM    IFGT *BLANKS
     CSR                   EXSR ZZGETI
     CSR                   MOVEL$ISTR     W2ITEM
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W2ITEM
     CSR                   ENDIF
     C*
     CSR                   MOVE SLPICK    W2PICK
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGETI   Get item description and pack description.
     C*
     CSR         ZZGETI    BEGSR
     CSR         KEYIT     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   ITPDSC
     CSR                   MOVE *BLANKS   ITDESC
     CSR                   ENDIF
     C*
     C*    Build item description for item found in slot.
     CSR                   MOVE *BLANKS   W2ITEM
     CSR                   MOVE *BLANKS   $ISTR
     CSR                   CALL @FMTIT
     CSR                   PARM SLITEM    $IITEM 15
     CSR                   PARM ITDESC    $IDESC 30
     CSR                   PARM ITPDSC    $IPDSC 15
     CSR                   PARM *BLANKS   $ISTR  70
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   MOVE *OFF      FOREVR  1
     CSR                   MOVE *OFF      SKPSLT  1
     C*
     C*  Define save fields for different item types.
     C*
     CSR                   MOVE *BLANK    #OTYPE  1
     CSR         *LIKE     DEFN ITITEM    #OITEM
     CSR         *LIKE     DEFN ITWHDP    #OWHDP
     CSR         *LIKE     DEFN ITDESC    #ODESC
     CSR         *LIKE     DEFN ITPDSC    #OPDSC
     CSR         *LIKE     DEFN ITITEM    #BITEM
     CSR         *LIKE     DEFN ITDESG    #ODESG
     C*
     CSR         *LIKE     DEFN SLSTAT    SVSTAT
     CSR         *LIKE     DEFN SLPICK    SVPICK
     CSR         *LIKE     DEFN SLITEM    SVITEM
     CSR         *LIKE     DEFN SLDISP    SVFDIS
     C*
     CSR                   MOVE *ZEROS    NBRPCK  50
     C*
     C*  Define key for PIRITEM file.
     C*
     CSR         KEYIT     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           SLITEM
     C*
     C*  Define key for options file, System values.
     C*
     CSR         *LIKE     DEFN W1WHSE    KYWHSE
     CSR         OPTSKY    KLIST
     CSR                   KFLD           KYWHSE
     CSR                   KFLD           OPCODE
     C*
     C*  Define partial key for SLOT2 file.
     C*
     CSR         KEYS2     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           W1DISP
     C*
     C*  Define partial key for SLOT3 file.
     C*
     CSR         KEYS3     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           SLITEM
     C*
     C*  Define partial key for SLOT3 file.
     C*
     CSR         *LIKE     DEFN SLSTAT    K3STAT
     CSR         *LIKE     DEFN SLPICK    K3PICK
     CSR         KEYS3A    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           SLITEM
     CSR                   KFLD           K3STAT
     CSR                   KFLD           K3PICK
     C*
     C*    Define key for VSLOT1 file.
     C*
     CSR         *LIKE     DEFN SLWHDP    KYWHDP
     CSR         *LIKE     DEFN SLDISP    KYDISP
     CSR         KEYVS2    KLIST
     CSR                   KFLD           KYWHSE
     CSR                   KFLD           KYWHDP
     CSR                   KFLD           KYDISP
     C*
     C*  Convert today's date into century format.
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TODAY   80
     C*
     CSR         *LIKE     DEFN SLEXPD    SVEXPD
     CSR         *LIKE     DEFN SLWHSE    PHWHSE
     CSR         *LIKE     DEFN SLWHDP    PHWHDP
     CSR         *LIKE     DEFN SLAISL    PHAISL
     CSR         *LIKE     DEFN SLLOC     PHLOC
     CSR         *LIKE     DEFN SLRLVL    PHRLVL
     CSR         *LIKE     DEFN SLHAND    PHHAND
     CSR         *LIKE     DEFN SLSIDE    PHSIDE
     CSR         *LIKE     DEFN SLSTYP    PHSTYP
     CSR         *LIKE     DEFN SLDISP    PHDISP
     CSR         *LIKE     DEFN SLSDEF    PHSDEF
     CSR         *LIKE     DEFN SLDESG    PHDESG
     CSR         *LIKE     DEFN SLPSEQ    PHPSEQ
     CSR         *LIKE     DEFN SLACTV    PHACTV
     CSR         *LIKE     DEFN SLBLD     PHBLD
     CSR         *LIKE     DEFN SLSLFD    PHSLFD
     CSR         *LIKE     DEFN SLDISP    ODISP
     CSR         *LIKE     DEFN SLDISP    SVDISP
     C*
     C*    - Get default warehouse, department for the user.
     C*
     CSR                   CALL 'GETUSER'
     CSR                   PARM           #USER
     CSR                   PARM 0         #WHSE   30
     CSR                   PARM 0         #EMP#   50
     CSR                   PARM *BLANKS   #FNAM  15
     CSR                   PARM *BLANKS   #INIT   1
     CSR                   PARM *BLANKS   #LNAM  20
     CSR                   PARM *BLANKS   #WHDP   5
     CSR                   PARM *BLANKS   #STYP   1
     CSR                   PARM *BLANKS   #SHFT   6
     CSR                   PARM *BLANKS   #CREW   6
     CSR                   PARM *ZEROS    #NHRS   31
     CSR                   PARM *BLANKS   #RTN    8
500 ACSR                   PARM           E$BPU   1
500 ACSR                   PARM           E$LNG   2
500 ACSR         #RTN      IFNE '*OK'
500 ACSR                   MOVE 'EN'      E$LNG
500 ACSR                   ENDIF
     C*
     CSR                   Z-ADD#WHSE     W1WHSE
     CSR                   MOVE #WHDP     W1WHDP
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     CSR                   Z-ADD0         WOROW
     CSR                   Z-ADD0         WOCOL
     C*
     CSR                   EXSR ZZSOPT
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*---------------------------------------------------------------
     C*  Retrieve number of pick slots for item and accumulate
     C*  number of pick slots assigned to item.
     C*
     CSR         ZZCHKP    BEGSR
     CSR         KEYIT     CHAINITEMMSC              79
     CSR         *IN79     IFEQ *ON
     CSR                   Z-ADD1         IMNRPK
     CSR                   ENDIF
     C*
     C*    Accumulate number of pick slots assigned to item.
     C*
     CSR                   MOVE 'A '      K3STAT
     CSR                   MOVE 'Y'       K3PICK
     CSR         KEYS3A    SETLLSLOT3
     CSR                   MOVE *ZEROS    NBRPCK
     CSR         FOREVR    DOWEQFOREVR
     CSR         KEYS3A    READESLOT3                    79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR         *IN79     WHEQ *OFF
     CSR                   ADD  1         NBRPCK
     CSR                   ENDSL
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZNXT1   Setup processing for next screen.
     C*
     CSR         ZZNXT1    BEGSR
     C*
     CSR                   Z-ADD0         WOROW
     CSR                   Z-ADD0         WOCOL
     C*
     CSR         KEYS2     CHAINSLOT2               N79
     C*
     C*    Invalid slot found. Send error message.
     CSR         *IN79     IFEQ *ON
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   MOVE *BLANKS   $LITEM
     CSR                   MOVE W1DISP    $LDISP
     CSR                   CALL 'SL900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   MOVE '01 '     NXTSCR
     C*
     CSR                   ELSE
     C*
     C*    Slot found. Proceed to next screen.
     CSR                   MOVE SLSTAT    SVSTAT
     CSR                   MOVE SLPICK    SVPICK
     CSR                   MOVE SLITEM    SVITEM
     C*
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR02I
     CSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZSOPT   Get use system options.
     C*
     CSR         ZZSOPT    BEGSR
     C*
     C*    Get System options.
     C*
     CSR                   MOVE *ZEROS    KYWHSE
     CSR                   MOVE '*SYSTEM 'OPCODE
     CSR         OPTSKY    CHAINOPTIONS              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE 'N'       OPMPCK
     CSR                   ELSE
     CSR                   MOVE OPDATA    OPDAT2
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update for screen 1.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update for screen 2.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     C*
     CSR         KEYS2     CHAINSLOT2                79
     CSR         *IN79     IFEQ *OFF
     CSR         SLITEM    IFNE SVITEM
     CSR         SLSTAT    ORNE SVSTAT
     CSR         SLPICK    ORNE SVPICK
     CSR                   MOVE *ON       ERROR
     CSR                   UNLCKSLOT2
     CSR                   EXSR ZMXX
     CSR                   GOTO ENDUP2
     CSR                   ENDIF
     CSR                   MOVE W2PICK    SLPICK
     CSR                   UPDATSLREC
     CSR                   EXSR SCR01I
     CSR                   ENDIF
     C*
     CSR         ENDUP2    ENDSR
     C*
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
** DESC
Slot
Pick slot
** DESCSP
Slot
Pick slot
