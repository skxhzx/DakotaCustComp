     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  UT860     Close transaction/label by task code.
     F*  02 October, 2002
     F*  Roxanne Harrison
     F*
     F*  SK112 - 1.01
     F*
     F*  Revisions
510aAF*    05/10/07  RH   5.10a
     F*      - Enh: Add hard code end date.
530aA*    12/07/09  RH   5.30a
     *      - Add Designation code to parms for CHKSTAT.
640aAF*    06/07/12  LMC  6.40a
     F*      - Enh: Added call to WRTTRAN1 for PIRTRAND.
     F*
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  81        FOUND INDICATOR ON CHECK OPERATION
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*----------------------------------------------------------------
     F*  Notes:
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FUT860FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FPIRTRAN6UF  E           K        DISK
     FLABEL7  IF  E           K        DISK
     FLABEL   UF  E           K        DISK
     F            LBREC                             KRENAMERBREC
     FSLOT2   UF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1   1 20
     I*----------------------------------------------------------------
     IRBREC
     I              LBWHSE                          RBWHSE
     I              LBWHDP                          RBWHDP
     I              LBSEQ                           RBSEQ
     I              LBITEM                          RBITEM
     I              LBPBAT                          RBPBAT
     I              LBAISL                          RBAISL
     I              LBLOC                           RBLOC
     I              LBRLVL                          RBRLVL
     I              LBHAND                          RBHAND
     I              LBPSEQ                          RBPSEQ
     I              LBSTYP                          RBSTYP
     I              LBQRYF                          RBQRYF
     I              LBDISP                          RBDISP
     I              LBQAVL                          RBQAVL
     I              LBWHS2                          RBWHS2
     I              LBWHD2                          RBWHD2
     I              LBASL2                          RBASL2
     I              LBLOC2                          RBLOC2
     I              LBLVL2                          RBLVL2
     I              LBHND2                          RBHND2
     I              LBDSP2                          RBDSP2
     I              LBRTE                           RBRTE
     I              LBSTOP                          RBSTOP
     I              LBORD                           RBORD
     I              LBSPCL                          RBSPCL
     I              LBPO                            RBPO
     I              LBUTYP                          RBUTYP
     I              LBUCOD                          RBUCOD
     I              LBUCUB                          RBUCUB
     I              LBCUBE                          RBCUBE
     I              LBUWGT                          RBUWGT
     I              LBSWGT                          RBSWGT
     I              LBQALC                          RBQALC
     I              LBQRMN                          RBQRMN
     I              LBQPCK                          RBQPCK
     I              LBTIE                           RBTIE
     I              LBHIGH                          RBHIGH
     I              LBGRP1                          RBGRP1
     I              LBGRP2                          RBGRP2
     I              LBTYPE                          RBTYPE
     I              LBLBL#                          RBLBL#
     I              LBPAL#                          RBPAL#
     I              LBTRN#                          RBTRN#
     I              LBCTR#                          RBCTR#
     I              LBSTAT                          RBSTAT
     I              LBPRTY                          RBPRTY
     I              LBSDTE                          RBSDTE
     I              LBSTIM                          RBSTIM
     I              LBRDTE                          RBRDTE
     I              LBVRFY                          RBVRFY
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  24 $LTASK
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1   6 ERTASK
     I*
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Name constants
     I*
     I              '0123456789 '         C         DIGIT
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSMDY
     I                                        1   20DSMO
     I                                        3   40DSDD
     I                                        5   60DSYY
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   ENDIF
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     616263
     CSR                   SETOF                     646566
     CSR                   SETOF                     676869
     CSR                   SETOF                     70
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   MOVE *OFF      FOREVR  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     CSR                   EXSR ZZFIL1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     C*
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZFIL2
     CSR                   MOVE *OFF      OVRRID  1
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 03 initialization
     C*
     CSR         SCR03I    BEGSR
     CSR                   MOVE '03 '     NXTSCR  3
     C*
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZFIL3
     CSR         END03I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     C***                  MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so onto the next screen.
     C*
     C**                   EXSR SCR02I
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    IFEQ *ON
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ*ON       ENDSC2
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Everything went fine so onto the next screen.
     C*
     CSR                   EXSR SCR01I
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC3  -  Screen 3
     C*
     CSR         SC3       BEGSR
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR03I
     CSR                   GOTO ENDSC3
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC3
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD3
     CSR         CMDTKN    IFEQ *ON
     CSR                   EXSR SCR03I
     CSR                   GOTO ENDSC3
     CSR                   ENDIF
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK3
     CSR         ERROR     CABEQ*ON       ENDSC3
     CSR                   EXSR ZZUPD3
     CSR         ERROR     CABEQ*ON       ENDSC3
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD3
     CSR         CMDTKN    CABEQ*ON       ENDSC3
     C*
     C*  Everything went fine so onto the next screen.
     C*
     CSR                   EXSR SCR03I
     CSR         ENDSC3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     C***                  PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1007  Invalid date entered.
     C*
     CSR         ZM07      BEGSR
     CSR                   MOVE 'PIR1007' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT11021  Invalid item type entered.
     C*
     CSR         ZM21      BEGSR
     CSR                   MOVE 'IT11021' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Record does not exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Record is locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     TE11205  Cannot enter a standard task.
     C*
     CSR         ZM1205    BEGSR
     CSR                   MOVE 'TE11205' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify warehouse department.
     C*
     CSR         W1WHDP    IFNE *BLANKS
     CSR         W1WHDP    ANDNE'*ALL'
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify Task code.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   MOVELW1TASK    $LTASK
     CSR                   CALL 'TK900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*   Only allow PUTEMP and PUTRTN task
     CSR         W1TASK    IFNE 'PUTEMP'
     CSR         W1TASK    ANDNE'PUTRTN'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEADESC      ERRMSG
     CSR                   EXSR ZM1001
     C**                   MOVE $LMSG     #MSGK
     C**                   EXSR ZMQMSG
     CSR                   ENDIF
     C*
     CSR                   MOVELW1TASK    T#TASK
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     C*
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK3   Screen 3 error checking.
     C*
     CSR         ZZCHK3    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR         ENDCK3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     C*
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD3   User defined command keys for screen 3.
     C*
     CSR         ZZCMD3    BEGSR
     C*
     CSR         ENDCM3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     CSR                   MOVE *BLANKS   W1WHDP
     CSR                   MOVE *BLANKS   W1TASK
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     C*
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL3   Fill screen 3 fields with info from file.
     C*
     CSR         ZZFIL3    BEGSR
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET2   Get record(s) for screen 2.
     C*
     CSR         ZZGET2    BEGSR
     CSR         ENDGT2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET3   Get record(s) for screen 3.
     C*
     CSR         ZZGET3    BEGSR
     CSR         ENDGT3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define key for PIRTRAN file.
     C*
     CSR         *LIKE     DEFN PTTRN#    TRANS#
     CSR         PTKEY     KLIST
     CSR                   KFLD           TRANS#
     C*
     C*  Define partial key for PIRTRAN6 file.
     C*
     CSR         *LIKE     DEFN PTSTAT    STAT
     CSR         PTKEY6    KLIST
     CSR                   KFLD           W1WHSE
     C*
     C*  Define partial key for LABEL7 file.
     C*
     CSR         LBKEY7    KLIST
     CSR                   KFLD           PTTRN#
     C*
     C*  Define key for SLOT2 file.
     C*
     CSR         SLKEY2    KLIST
     CSR                   KFLD           LBWHSE
     CSR                   KFLD           LBWHDP
     CSR                   KFLD           LBDSP2
     C*
     C*  Define key for TASK file.
     C*
     CSR         TKKEY     KLIST
     CSR                   KFLD           T#TASK  6
     C*
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*    - Get default warehouse for the user.
     C*
     CSR                   CALL 'GETWHSE'
     CSR                   PARM           #USER
     CSR                   PARM 0         #WHSE   30
     C*
     CSR                   Z-ADD#WHSE     W1WHSE
     C*
     C*   Current date
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    CURDTE  80
     C*   Current time
     CSR                   TIME           CURTIM  60
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZRCAL   Recalculate item quantity from slots.
     C*
     CSR         ZZRCAL    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH  1
     C*
     C* Recalculate item qty.
     C                     Z-ADDLBWHSE    $PWHS  155
     C                     MOVE 'N'       $JOBQ   1
     C                     CALL 'UT812'
     C                     PARM           $PWHS
     C                     PARM           $ITEM  15
     C                     PARM           $JOBQ
     C                     PARM           $LPRG
     C                     PARM           $LRTN
     C                     PARM           $LMSG
     C           $LRTN     IFEQ '*PGMQ   '
     C                     MOVE *ON       ERROR
     C                     EXSR ZM72
     C                     GOTO ENDCAL
     C                     ENDIF
     C*
     CSR         ENDCAL    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZSLOT  Update slot to close transaction to 0.
     C*
     CSR         ZZSLOT    BEGSR
     CSR         SLKEY2    CHAINSLOT2                75
     CSR         *IN75     CABEQ*ON       ENDS1
     CSR                   SELEC
     CSR         LBUTYP    WHEQ 'N'
     CSR         LBQPCK    IFGT SLRCV1
     CSR                   Z-ADD0         SLRCV1
     CSR                   ELSE
     CSR                   SUB  LBQPCK    SLRCV1
     CSR                   ENDIF
     CSR         LBUTYP    WHEQ '1'
     CSR         LBQPCK    IFGT SLRCV2
     CSR                   Z-ADD0         SLRCV2
     CSR                   ELSE
     CSR                   SUB  LBQPCK    SLRCV2
     CSR                   ENDIF
     CSR         LBUTYP    WHEQ '2'
     CSR         LBQPCK    IFGT SLRCV3
     CSR                   Z-ADD0         SLRCV3
     CSR                   ELSE
     CSR                   SUB  LBQPCK    SLRCV3
     CSR                   ENDIF
     CSR                   ENDSL
     C*
     C*   Check if status needs to be changed
     C*
     CSR                   CALL 'CHKSTAT'
     CSR                   PARM           SLWHSE
     CSR                   PARM           SLITEM
     CSR                   PARM           SLSTYP
     CSR                   PARM           SLRSRV
     CSR                   PARM           SLPICK
     CSR                   PARM           SLSTAT
530aACSR                   PARM           SLDESG
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     CSR                   PARM           $CNEWS  2
     CSR                   PARM           $CRTN   8
     C*
     CSR         $CRTN     IFEQ '*CHANGED'
     CSR         PTTASK    ANDNE'REPLTF'
     C*
     CSR         $CRTN     OREQ '*CHANGED'
     CSR         PTTASK    ANDEQ'REPLTF'
     CSR         LBDISP    ANDNELBDSP2
     C*
     CSR                   MOVE $CNEWS    SLSTAT
     CSR                   TIME           SLSTIM
     C**         SLSTIM    IFLT LSTTIM
     C**                   EXSR ZZZDTE
     C**                   ENDIF
     CSR                   Z-ADDCURDTE    SLSDTE
     CSR                   ENDIF
     CSR                   UPDATSLREC                  70
     C*
     CSR         ENDS1     TAG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update for screen 1.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*   Process all the transactions for the dept and task.
     CSR         PTKEY6    SETLLPIRTRAN6
     CSR         FOREVR    DOWEQFOREVR
     CSR         PTKEY6    READEPIRTRAN6                 79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     CSR         PTTASK    IFNE W1TASK
510a CSR         PTGDTE    ORGT 20060214
     CSR                   ITER
     CSR                   ENDIF
     CSR         W1WHDP    IFNE '*ALL'
     CSR         PTWHDP    ANDNEW1WHDP
     CSR                   ITER
     CSR                   ENDIF
     C*   Process all the labels for a transaction #.
     CSR                   SETOF                     78
     CSR         LBKEY7    SETLLLABEL7
     CSR         *IN78     DOWEQ*OFF
     CSR         LBKEY7    READELABEL7                   78
     CSR         *IN78     IFEQ *OFF
510a C*   Skip processing label rcd if marked Closed.
510a CSR         LBSTAT    IFEQ 'C'
510a CSR                   ITER
510a CSR                   ENDIF
     C*   Update slot if directed put away label
     CSR         LBDSP2    IFNE '*MANUAL'
     CSR                   EXSR ZZSLOT
     CSR                   EXSR ZZRCAL
     CSR                   ENDIF
     CSR         LBLBL#    CHAINLABEL                70
     CSR                   MOVE 'C'       RBSTAT
     CSR                   MOVE '*AUTOCLS'RBDISP
     CSR                   UPDATRBREC                  70
     CSR                   ENDIF
     CSR                   ITER
     CSR                   ENDDO
510a C*   If transaction not closed, close it.
510a CSR         PTSTAT    IFNE '4'
     CSR                   MOVE '4'       PTSTAT
     CSR                   TIME           PTCTIM
     CSR                   Z-ADDCURDTE    PTCDTE
510a CSR                   TIME           PTETIM
510a CSR                   Z-ADDCURDTE    PTEDTE
     CSR                   UPDATPTREC                  70
640aAC                     EXSR ZZWRTT
510a CSR                   ELSE
510a CSR                   UNLCKPIRTRAN6
510a CSR                   ENDIF
     CSR                   ITER
     CSR                   ENDDO
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update for screen 2.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR         ENDUP2    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD3   Update for screen 3.
     C*
     CSR         ZZUPD3    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR         ENDUP3    ENDSR
640aAC*----------------------------------------------------------------*********
640aAC*
640aAC*  ZZWRTT     Execute new WRTTRAN1 program to add/update PIRTRANDn
640aAC*
640aAC           ZZWRTT    BEGSR
640aAC                     MOVEL'*ONETRAN'WPCMD  10
640aAC                     Z-ADD0         WPWAIT  20
640aAC                     MOVELPTWHSE    WPWHSE  30
640aAC                     MOVELPTTRN#    WPTRN#  70
640aAC                     Z-ADD0         WPFRDT  80
640aAC                     Z-ADD0         WPTODT  80
640aAC                     Z-ADD0         WPEMP#  50
640aAC                     CALL 'WRTTRAN1'
640aAC                     PARM           WPCMD
640aAC                     PARM           WPWAIT
640aAC                     PARM           WPWHSE
640aAC                     PARM           WPTRN#
640aAC                     PARM           WPFRDT
640aAC                     PARM           WPTODT
640aAC                     PARM           WPEMP#
640aAC                     ENDSR
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
**
Task code
