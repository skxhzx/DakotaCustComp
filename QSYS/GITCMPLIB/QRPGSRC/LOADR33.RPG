     F*----------------------------------------------------------------
     F*   Copyright (C) 2007 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  LOADR33   Loader Module: Loader Door Assigment Change/Add.
     F*  October 10, 2007
     F*  Jose G. Duque
     F*
     F*  Revisions
     F*
     F*----------------------------------------------------------------
     F*  Client Custom Revisions
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FLOAD33FMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FPIRUSER IF  E           K        DISK
     F            USREC                             KRENAMEREC1
     FPIRUSER1IF  E           K        DISK
     FLDRDOOR UF  E           K        DISK                      A
     F            LDRREC                            KRENAMERECORD
     FLDRDRLG2IF  E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    EMP#       15  5
     E                    DESC    1   6 50
     E                    ZDOORS 39  39  2
     E                    DORARY 20  20  2
     E                    FILARY 20  20  2
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  260$PEMP#
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*----------------------------------------------------------------
     I*  Constants
     I*
     I              'DOORS CHANGED  '     C         CHGCOM
     I              'LOADER ADDED   '     C         ADDCOM
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1   60ERDATE
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Other Data Structure
     I*
     IDOORS       DS
     I                                        1   3 WDR1
     I                                        4   6 WDR2
     I                                        7   9 WDR3
     I                                       10  12 WDR4
     I                                       13  15 WDR5
     I                                       16  18 WDR6
     I                                       19  21 WDR7
     I                                       22  24 WDR8
     I                                       25  27 WDR9
     I                                       28  30 WDR10
     I*
     IFILDOR      DS
     I                                        1   3 LDDR1
     I                                        4   6 LDDR2
     I                                        7   9 LDDR3
     I                                       10  12 LDDR4
     I                                       13  15 LDDR5
     I                                       16  18 LDDR6
     I                                       19  21 LDDR7
     I                                       22  24 LDDR8
     I                                       25  27 LDDR9
     I                                       28  30 LDDR10
     I*
     I            DS
     I                                        1   5 EMP#1
     I                                        6  10 EMP#2
     I                                       11  15 EMP#3
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new record.
     C*              *EDIT    - Edit record.
     C*              *DELETE  - Delete record.
     C*              *PRINT   - Print record edit listing.
     C*              *POST    - Post record.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains unique key for everything but *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new unique key for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     MOVE '0'       *IN90
     C                     MOVE '0'       *IN91
     C                     MOVE '0'       ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ '1'
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*    --------------------------------
     C*    Do some clean up before leaving.
     C*    --------------------------------
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*    ---------------------------------------
     C*    Set ON alarm indicator if error occured
     C*    ---------------------------------------
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR         $PCMD     IFEQ '*ADD    '
     C                     SETON                     41
     CSR                   END
     CSR                   END
     C*    -------------------------------------
     C*    Set cursor on 'Employee Number' field
     C*    -------------------------------------
     CSR         ERROR     IFNE '1'
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   SETON                     10
     C                     ELSE
     CSR                   SETON                     01
     CSR                   ENDIF
     CSR                   ENDIF
     C*    ----------------------------------
     C*    Overlay screen with error messages
     C*    ----------------------------------
     C                     EXSR ZMDMSG
     C*    -------------------------------------------
     C*    Overlay screen with screen to be processed.
     C*    -------------------------------------------
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*    --------------------------------------
     C*    Initialize error indicators and fields
     C*    --------------------------------------
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     394044
     CSR                   SETOF                     98
     C           $PCMD     IFEQ '*ADD    '
     C                     SETON                     41
     C                     ENDIF
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*    ------------------------
     C*    Initialize error subfile
     C*    ------------------------
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*  DORASG - Verify if any input door has been already assigned
     C*----------------------------------------------------------------
     C           DORASG    BEGSR
     C*
     C                     MOVE *BLANKS   EMP#
     C           PARTKY    SETLLLDRDOOR
     C           PARTKY    READELDRDOOR                  79
     C*
     C           *IN79     DOWEQ'0'
     C                     Z-ADD1         X       30
     C                     MOVEAFILDOR    FILARY
     C*    -----------------------------
     C*    By pass record being updated.
     C*    -----------------------------
     C           LDDEMP    IFEQ WEMP#
     C                     GOTO READ
     C                     ENDIF
     C*
     C*    --------------------------------------
     C*    Read each non-blank screen door bucket
     C*    and compare it to each Ldrdoor/record
     C*    door bucket.
     C*    --------------------------------------
     C           X         DOWLE10                         X=ScrnBuckts
     C*
     C*    ------------------------------------
     C*    By pass screen door bucket if blank.
     C*    ------------------------------------
     C           DORARY,X  IFEQ *BLANKS
     C                     GOTO AGAIN
     C                     ENDIF
     C*
     C                     EXSR DUPDR2
     C           DUP       IFEQ *OFF
     C                     GOTO AGAIN
     C                     ENDIF
     C*
     C*    ---------------------------------------
     C*    Set screen door buckets error indicator
     C*    ---------------------------------------
     C                     SELEC
     C           X         WHEQ 1
     C                     MOVE '1'       ERROR
     C                     SETON                     2101
     C*
     C           X         WHEQ 2
     C                     MOVE '1'       ERROR
     C                     SETON                     2202
     C*
     C           X         WHEQ 3
     C                     MOVE '1'       ERROR
     C                     SETON                     2303
     C*
     C           X         WHEQ 4
     C                     MOVE '1'       ERROR
     C                     SETON                     2404
     C*
     C           X         WHEQ 5
     C                     MOVE '1'       ERROR
     C                     SETON                     2505
     C*
     C           X         WHEQ 6
     C                     MOVE '1'       ERROR
     C                     SETON                     2606
     C*
     C           X         WHEQ 7
     C                     MOVE '1'       ERROR
     C                     SETON                     2707
     C*
     C           X         WHEQ 8
     C                     MOVE '1'       ERROR
     C                     SETON                     2808
     C*
     C           X         WHEQ 9
     C                     MOVE '1'       ERROR
     C                     SETON                     2909
     C*
     C           X         WHEQ 10
     C                     MOVE '1'       ERROR
     C                     SETON                     3011
     C*
     C                     ENDSL
     C*
     C                     MOVELLDDEMP    HLDEMP  5
     C                     DO   3         Y       30
     C           EMP#,Y    IFEQ HLDEMP
     C                     LEAVE
     C                     ENDIF
     C           EMP#,Y    IFEQ *BLANKS
     C                     MOVELLDDEMP    EMP#,Y
     C                     LEAVE
     C                     ENDIF
     C                     ENDDO
     C*
     C           AGAIN     TAG
     C                     ADD  1         X
     C                     ENDDO
     C*
     C           READ      TAG
     C           PARTKY    READELDRDOOR                  79
     C                     ENDDO
     C*
     C                     ENDSR
     C*----------------------------------------------------------------
     C*  DUPDOR - Verify if this loader has already assigned
     C*           the door the operator added. Compare the
     C*           added door against all existing doors for
     C*           this loader.
     C*----------------------------------------------------------------
     C           DUPDOR    BEGSR
     C*
     C                     MOVE *OFF      DUP     1
     C                     DO   10        Y
     C           Y         IFNE X                          X=AddedDoor
     C           DORARY,X  IFEQ DORARY,Y                   Y=OtherDoors
     C                     MOVE *ON       DUP
     C                     LEAVE
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
     C*
     C                     ENDSR
     C*----------------------------------------------------------------
     C*  DUPDR2 - Verify if the door being added to current
     C*           loader, it has already been assigned to
     C*           another loader.
     C*----------------------------------------------------------------
     C           DUPDR2    BEGSR
     C*
     C                     MOVE *OFF      DUP
     C                     DO   10        Y
     C           DORARY,X  IFEQ FILARY,Y                   Dorary=Scrn
     C                     MOVE *ON       DUP              Filary=File
     C                     LEAVE
     C                     ENDIF
     C                     ENDDO
     C*
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*    ------------------------------------------
     C*    Screen initialization and wrap-up routines
     C*    ------------------------------------------
     C*
     C*    ------------------------
     C*    Screen 01 initialization
     C*    ------------------------
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   SETOF                     61
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR                   MOVE '1'       *IN90
     CSR                   GOTO BYPAS2
     CSR                   ENDIF
     C*    -------------------------------------
     C*    Get field defaults if this is an add.
     C*    -------------------------------------
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   GOTO END01I
     CSR                   ENDIF
     C*    ---------------------------------
     C*    Otherwise get existing record(s).
     C*    ---------------------------------
     CSR         $PCMD     IFEQ '*CHANGE '
     CSR                   MOVE '1'       *IN91
     CSR                   ENDIF
     C*
     CSR         BYPAS2    TAG
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*    ------------------
     C*    Test for F3 - Exit
     C*    ------------------
     CSR         *INKC     IFEQ '1'
     CSR         *ZEROS    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*    ---------------------
     C*    Test for F5 - Refresh
     C*    ---------------------
     CSR         *INKE     IFEQ '1'
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*    -----------------------
     C*    Test for F12 - Previous
     C*    -----------------------
     CSR         *INKL     IFEQ '1'
     CSR         *ZEROS    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*    -----------------------------------------------------------
     C*    Test for other command keys BEFORE verification and update.
     C*    -----------------------------------------------------------
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*    ------------------------------------
     C*    Some other key pressed.
     C*
     C*    Check input and write/update record.
     C*    ------------------------------------
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ'1'       ENDSC1
     CSR                   EXSR ZZUPD
     CSR         ERROR     CABEQ'1'       ENDSC1
     CSR                   END
     C*    ----------------------------------------------------------
     C*    Test for other command keys AFTER verification and update.
     C*    ----------------------------------------------------------
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*    -------------------------------------------
     C*    Everything went fine so get out of program.
     C*    -------------------------------------------
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*    -----------------------
     C*    Initialize special keys
     C*    -----------------------
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*    ---------------------------
     C*    Initialize message handling
     C*    ---------------------------
     C                     EXSR ZMIMSG
     C*    ---------------------------------------
     C*    Call user added initialization routine.
     C*    ---------------------------------------
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*    ------------------------------------
     C*    ZMCMSG  Clear message record subfile
     C*    ------------------------------------
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*    --------------------------------------
     C*    ZMDMSG  Display message record subfile
     C*    --------------------------------------
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*    ----------------------------------------------------
     C*    ZMIMSG  Initialization necessary for message subfile
     C*    ----------------------------------------------------
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*    -------------------------------------
     C*    ZMPMSG  Add message record to subfile
     C*    -------------------------------------
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*    --------------------------------------------------------
     C*    ZMQMSG  Add message record to subfile from program queue
     C*    --------------------------------------------------------
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*    --------------------
     C*    ZSCLR   Clear screen
     C*    --------------------
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*    --------------------------------------------------------
     C*    ZMSMSG  Send program message to a different program msgq
     C*    --------------------------------------------------------
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*   PIR0201  Code must be entered for create.
     C*
     CSR         ZM01      BEGSR
     CSR                   MOVE 'PIR0201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0202  Code already exists.
     C*
     CSR         ZM02      BEGSR
     CSR                   MOVE 'PIR0202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PIR0203  Value cannot be blank.
     C*
     CSR         ZM0203    BEGSR
     CSR                   MOVE 'PIR0203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Record does not exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Record is locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*    PIR9906  Invalid date entered.
     C*
     CSR         ZM9906    BEGSR
     CSR                   MOVE 'PIR9906' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   US11201  Invalid section entered.
     C*
     CSR         ZM1201    BEGSR
     CSR                   MOVE 'US11201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE '0'       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     C*
     C*  When adding ....
     C*
     C*    ---------------------------
     C*    Make sure WHSE was entered.
     C*    ---------------------------
     CSR         WWHSE     IFEQ *ZERO
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN06
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,1    ERRMSG
     CSR                   EXSR ZM0203
     CSR                   ENDIF
     C*    ----------------------
     C*    Verify warehouse code.
     C*    ----------------------
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN26
     CSR                   MOVE '1'       *IN06
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN06
     CSR                   MOVE '1'       *IN26
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   Z-ADD$LWHSE    WWHSE
     C*
     CSR         $PCMD     IFNE '*ADD    '                 Emp# won't
     CSR                   GOTO CHKDOR                     change, mode
     C                     ENDIF                           is View or
     C*    ------------------------                        Change.
     C*    Verify Emp# was entered.
     C*    ------------------------
     CSR         WEMP#     IFEQ *ZEROS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN10
     CSR                   MOVE *ON       *IN20
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR                   Z-ADDWEMP#     $PEMP#
     CSR         DOORKY    CHAINRECORD               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN10
     CSR                   MOVE *ON       *IN20
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,5    ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR                   Z-ADDWEMP#     USERKY
     CSR                   EXSR ZZGET2
     CSR                   ENDIF
      *
     CSR                   ENDIF
     C*
     C           CHKDOR    TAG
     C*    ---------------------
     C*    Verify Door's number.
     C*    ---------------------
     CSR         DOORS     IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,3    ERRMSG
     CSR                   EXSR ZM0105
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
      *
     C                     MOVEADOORS     DORARY
     C                     DO   10        X       30
     C           DORARY,X  LOKUPZDOORS                   44
      *
     C                     SELEC
     C           X         WHEQ 1
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN01
     C                     MOVE *ON       *IN21
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
      *
     C           X         WHEQ 2
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN02
     C                     MOVE *ON       *IN22
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 3
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN03
     C                     MOVE *ON       *IN23
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 4
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN04
     C                     MOVE *ON       *IN24
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 5
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN05
     C                     MOVE *ON       *IN25
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 6
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN06
     C                     MOVE *ON       *IN26
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 7
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN07
     C                     MOVE *ON       *IN27
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 8
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN08
     C                     MOVE *ON       *IN28
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 9
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN09
     C                     MOVE *ON       *IN29
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           X         WHEQ 10
     C           *IN44     IFEQ *OFF
     C                     MOVE *ON       ERROR
     C                     MOVE *ON       *IN11
     C                     MOVE *ON       *IN30
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,3    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     ENDDO
      *
     C                     SETOF                     60
     C           $PCMD     IFNE '*ADD    '
     C           ERROR     ANDNE*ON
      *    ------------------------------------------
     C*    'CHANGE' mode, verify if any changes done.
     C*    ------------------------------------------
     C           WDR1      IFNE SAVDR1
     C           WDR2      ORNE SAVDR2
     C           WDR3      ORNE SAVDR3
     C           WDR4      ORNE SAVDR4
     C           WDR5      ORNE SAVDR5
     C           WDR6      ORNE SAVDR6
     C           WDR7      ORNE SAVDR7
     C           WDR8      ORNE SAVDR8
     C           WDR9      ORNE SAVDR9
     C           WDR10     ORNE SAVD10
     C                     SETON                     60
     C                     ELSE
     C                     GOTO NXTCHK
     C                     ENDIF
     C                     ENDIF
     C*    ------------------------------------------
      *    Door(s) changed, verify if this loader has
      *    this door already assigned.
      *    ------------------------------------------
     C           WDR1      IFNE SAVDR1
     C                     Z-ADD1         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0121
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR2      IFNE SAVDR2
     C                     Z-ADD2         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0222
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR3      IFNE SAVDR3
     C                     Z-ADD3         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0323
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR4      IFNE SAVDR4
     C                     Z-ADD4         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0424
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR5      IFNE SAVDR5
     C                     Z-ADD5         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0525
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR6      IFNE SAVDR6
     C                     Z-ADD6         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0626
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR7      IFNE SAVDR7
     C                     Z-ADD7         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0727
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR8      IFNE SAVDR8
     C                     Z-ADD8         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0828
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR9      IFNE SAVDR9
     C                     Z-ADD9         X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     0929
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
      *
     C           WDR10     IFNE SAVD10
     C                     Z-ADD10        X
     C                     EXSR DUPDOR
     C           DUP       IFEQ *ON
     C                     MOVE *ON       ERROR
     C                     SETON                     1130
     C           ERRMSG    IFEQ *BLANKS
     C                     MOVELDESC,4    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C*
     C           NXTCHK    TAG
      *    ------------------------------------------
     C*    Verify if Door's input thru the screen are
     C*    no already assigned to another loader(s).
     C*    ------------------------------------------
     C                     EXSR DORASG
     C           ERROR     IFEQ *ON
     C           ERRMSG    ANDEQ*BLANKS
     C                     MOVELDESC,4    HLDMSG 50        Door Already
     C                     CAT  EMP#,1:1  HLDMSG           assigned
     C                     CAT  EMP#,2:1  HLDMSG
     C                     CAT  EMP#,3:1  HLDMSG
     C                     MOVELHLDMSG    ERRMSG
     C                     EXSR ZM0105
     C                     ENDIF
      *
     C           ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*    -----------------------------------------------------
     C*    ZZCMD1   User defined command keys for screen 1.
     C*    Command keys to check BEFORE verification and update.
     C*    -----------------------------------------------------
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE '0'       CMDTKN
      *
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*    --------------------
     C*    Test for F4 - Lookup
     C*    --------------------
     CSR         *INKD     IFEQ '1'
     CSR                   MOVE '1'       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   Z-ADDWWHSE     WOWHSE
     C*
     CSR                   SELEC
     C*    --------------
     C*    Warehouse code.
     C*    ---------------
     CSR         ROW#      WHEQ 8
     CSR                   MOVE *ON       *IN06
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDWWHSE     $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    WWHSE
     CSR                   Z-ADDWWHSE     WOWHSE
     CSR                   END
     C*
     C*
     CSR                   OTHER
     C*    -----------------------------------
     C*    Cursor not on a valid lookup field.
     C*    -----------------------------------
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM9905
     CSR                   END
     CSR                   GOTO ENDCM1
     CSR                   END
     CSR                   END
     C*    ----------------------------------------------------
     C*    Command keys to check AFTER verification and update.
     C*    ----------------------------------------------------
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     CSR                   Z-ADD$PWHSE    WWHSE
     CSR                   Z-ADD*ZEROS    WEMP#
     CSR                   MOVE *BLANKS   WUSRID
     CSR                   MOVE *BLANKS   WDR1
     CSR                   MOVE *BLANKS   WDR2
     CSR                   MOVE *BLANKS   WDR3
     CSR                   MOVE *BLANKS   WDR4
     CSR                   MOVE *BLANKS   WDR5
     CSR                   MOVE *BLANKS   WDR6
     CSR                   MOVE *BLANKS   WDR7
     CSR                   MOVE *BLANKS   WDR8
     CSR                   MOVE *BLANKS   WDR9
     CSR                   MOVE *BLANKS   WDR10
     CSR                   Z-ADD*ZEROS    W1EMP#
     CSR                   MOVE *BLANKS   W1FNM
     CSR                   MOVE *BLANKS   W1INT
     CSR                   MOVE *BLANKS   W1LNM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     CSR                   Z-ADDLDDWHS    WWHSE
     C*
     C           LDDEMP    CHAINPIRUSER1             79
     C           *IN79     IFEQ *ON
     C                     MOVE *BLANKS   WUSRID
     C                     ELSE
     C                     MOVELUSCODE    WUSRID
     C                     ENDIF
     C*
     CSR                   MOVE LDDEMP    WEMP#
     CSR                   MOVE LDDR1     WDR1
     CSR                   MOVE LDDR2     WDR2
     CSR                   MOVE LDDR3     WDR3             Load Screen
     CSR                   MOVE LDDR4     WDR4               fields.
     CSR                   MOVE LDDR5     WDR5
     CSR                   MOVE LDDR6     WDR6
     CSR                   MOVE LDDR7     WDR7
     CSR                   MOVE LDDR8     WDR8
     CSR                   MOVE LDDR9     WDR9
     CSR                   MOVE LDDR10    WDR10
     C*    ---------------------
     C*    Get user information.
     C*    ---------------------
     C                     MOVE '1'       FRMFIL  1
     C                     Z-ADDLDLEMP    USERKY  50
     CSR                   EXSR ZZGET2
     C                     MOVE '0'       FRMFIL
     C*
     CSR         LDLDAT    IFEQ 0
     CSR                   Z-ADD0         W1UPD
     CSR                   ELSE
     CSR                   MOVE '*CMDMDY '$CVCMD
     CSR                   MOVE LDLDAT    $CVD8I
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD6O    W1UPD
     CSR                   Z-ADDLDLTIM    W1TIME
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1 - Executes this
     C*           routine if in 'VIEW' or 'CHANGE' mode only.
     C*
     CSR         ZZGET1    BEGSR
     C*    --------------------------
     C*    Get record from main file.
     C*    --------------------------
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR         DOORKY    CHAINRECORD              N7978
     CSR                   ELSE
     CSR         DOORKY    CHAINRECORD               7978
     CSR                   ENDIF
     C*    --------------
     C*    Record locked.
     C*    --------------
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT1
     CSR                   END
     C*    -----------------
     C*    Record not found.
     C*    -----------------
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM73
     CSR                   GOTO ENDGT1
     C                     END
     C*
     CSR                   MOVE LDDR1     SAVDR1  2
     CSR                   MOVE LDDR2     SAVDR2  2
     CSR                   MOVE LDDR3     SAVDR3  2
     CSR                   MOVE LDDR4     SAVDR4  2
     CSR                   MOVE LDDR5     SAVDR5  2
     CSR                   MOVE LDDR6     SAVDR6  2
     CSR                   MOVE LDDR7     SAVDR7  2
     CSR                   MOVE LDDR8     SAVDR8  2
     CSR                   MOVE LDDR9     SAVDR9  2
     CSR                   MOVE LDDR10    SAVD10  2
     C*  --------------------------------------------------------------
     C*  Chain to Doorlog find any prev update info on this Loader rec.
     C*  --------------------------------------------------------------
     CSR         LDDEMP    CHAINLDRDRLG2             7978
     C*    --------------
     C*    Record locked.
     C*    --------------
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT1
     CSR                   END
     C*    -----------------
     C*    Record not found.
     C*    -----------------
     C*>         *IN79     IFEQ *ON
     C*>                   MOVE *ON       ERROR
     C*>                   MOVE '*PGMQ   '$PRTN
     C*>                   EXSR ZM73
     C*>                   ENDIF
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET2   Get record(s) for screen 1.
     C*
     CSR         ZZGET2    BEGSR
     C*    -------------------------------------
     C*    Get Employee name from PIRUSER1 file.
     C*    -------------------------------------
     CSR         USERKY    CHAINPIRUSER1             79
     CSR         *IN79     IFEQ *ON
     CSR         FRMFIL    ANDNE'1'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN10
     CSR                   MOVE *ON       *IN20
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         FRMFIL    IFEQ '1'
     CSR                   Z-ADDUSEMP#    W1EMP#
     CSR                   MOVE USFNAM    W1FNM
     CSR                   MOVE USINIT    W1INT
     CSR                   MOVE USLNAM    W1LNM
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*
     C*
     CSR         ENDGT2    ENDSR
     C*----------------------------------------------------------------
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     CSR         *LIKE     DEFN $LWHSE    WOWHSE
     C*    -------------------------
     C*    Define key for main file.
     C*    -------------------------
     CSR         DOORKY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PEMP#
     C*    ---------------------------------
     C*    Define partial key for main file.
     C*    ---------------------------------
     CSR         PARTKY    KLIST
     CSR                   KFLD           WWHSE
     C*
     C*
     C*
     CSR                   MOVE #PROG     $CVPRG
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*    -------------------------------
     C*    Select first screen to display.
     C*    -------------------------------
     C                     MOVE '0'       FRMFIL
     CSR         $PCMD     IFEQ '*ADD    '
     C                     SETON                     41
     CSR                   END
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD    Update record.
     C*
     C           ZZUPD     BEGSR
     C                     MOVE '0'       ERROR
     C                     SETOF                     79
     C*    -----------------------------------
     C*    Move screen fields to record fields
     C*    -----------------------------------
     C           $PCMD     IFEQ '*CHANGE '
     C           *IN60     ANDEQ*OFF                       NoChgWasMade
     C                     GOTO ENDUPD
     C                     ELSE
     C           DOORKY    CHAINRECORD               79    BackToRecord
     C                     ENDIF                           BeingUpdated
      *
     C                     Z-ADDWWHSE     LDDWHS           Load Ldrdoor
     C                     Z-ADDWEMP#     LDDEMP           fields
     C                     MOVELWDR1      LDDR1
     C                     MOVELWDR2      LDDR2
     C                     MOVELWDR3      LDDR3
     C                     MOVELWDR4      LDDR4
     C                     MOVELWDR5      LDDR5
     C                     MOVELWDR6      LDDR6
     C                     MOVELWDR7      LDDR7
     C                     MOVELWDR8      LDDR8
     C                     MOVELWDR9      LDDR9
     C                     MOVELWDR10     LDDR10
      *    -----------------------------------------------
      *    The fields being loaded below keep track of who
      *    updated logfil.
      *    -----------------------------------------------
     C                     TIME           LDLTIM
     C                     Z-ADDWEMP#     LDLODR
     C           #USER     CHAINPIRUSER              79
     C                     Z-ADDUSEMP#    LDLEMP
     C*
     C                     MOVE '*MDYCMD '$CVCMD
     C                     MOVE #JOBDT    $CVD6I
     C                     CALL @CVTDT
     C                     PARM           $CVTDT
     C                     Z-ADD$CVD8O    LDLDAT           FileLdrdrlog
     C*                                                    field
     C           BYPAS1    TAG
     C*    ----------
     C*    Add record
     C*    ----------
     C           $PCMD     IFEQ '*ADD    '
     C                     WRITERECORD                 79  WriteLdrdoor
     C*                                                    record
     C                     MOVELADDCOM    LDLCOM
     C                     WRITELDLREC                     Write
     C                     GOTO ENDUPD                     Ldrdrlog rec
     C                     ENDIF
     C*    --------------------------------------------------
     C*    -OR- Update Ldrdoor file and write new Log record.
     C*    --------------------------------------------------
     C                     UPDATRECORD                 79  Update
     C                     MOVELCHGCOM    LDLCOM
     C                     WRITELDLREC                     Write
     C*    -----------------------------
     C*    Move key values to parameters
     C*    -----------------------------
     C           ENDUPD    ENDSR
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
** DESC
Invalid warehouse
Invalid employee#
Invalid door #
Door # already assigned to emp#
Employee # already exists in file
Employee # in Ldrdoor file
**  ZDOORS Valid Doors #s
0102030405060708091011121314151617181920212223242526272829
**  DORARY input Doors #s

**  FILARY file Doors #s

