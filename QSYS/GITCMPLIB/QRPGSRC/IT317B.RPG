     F*----------------------------------------------------------------
     F*   Copyright (C) 2006 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   245 W. Roosevelt Rd.  Bldg 8, Suite 51
     F*   West Chicago, IL  60185
     F*   (630) 562-0375
     F*----------------------------------------------------------------
     F*
     F*  IT317B    View Inventory adjustments report by Item/slot/date
     F*  11 June, 1996
     F*  Dave Sommerville
     F*  Hemant Kapadia
     F*  Roxanne Harrison
     F*
     F*  Created from IT317.
     F*
     F*----------------------------------------------------------------
     F*  Revisions:
214 AF*    07/08/96  RH   2.14
     F*      - Add code to display blank record & msg when 0 records
     F*        were selected.
410 AF*    12/07/98  RH   4.10
     F*      - Add parm $CODE to display *ALL or adjustment code.
415aAF*    06/15/01  RH   4.15a
     F*      - Check if item has linked items.
415bAF*    06/14/01  RH   4.15b
     F*      - Calculate total gain/loss.
416aAF*    03/06/02  RH   4.16a
     F*      - Fix - change to use IT317B file.
     F*
510 AF*    07/07/06  MLB  5.10
     F*      - Enh: Revised program to pass back *CANCEL to calling pgm
     F*        when F12=Cancel pressed to redisplay options program.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        Position cursor
     F*  21 - 29   Field input error (Reverse display)
     F*  79        Chain indicator
     F*  97        Always ON (Used for SFLEND Keyword)
     F*  98        Error on screen (Sound buzzer)
     F*  99        Universal record indicator (Very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT317BFMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
VW2 AF                                        RECNO2KSFILE VW2SFL
VW2 AF                                        RECNO3KSFILE VW3SFL
     F                                        MSGK  KSFILE MSGREC
416a F*T316B  IF  E           K        DISK
416a FIT317B  IF  E           K        DISK
     F            OQREC                             KRENAMERECORD
415a FITEMLNK IF  E           K        DISK
415a FITEMLNK1IF  E           K        DISK
415a F            ILREC                             KRENAMEILRECA
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       28 44
     E                    UKEY       28 44
     E                    $MD       128  1
     E                    $PODSC      3 63
VW2 AE                    CMDLN   1   6 79
     I*----------------------------------------------------------------
     I*  Max lines in display file
     I*
     I              12                    C         MAXLIN
     I*
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I                                        1  50 DSUKEY
     I                                        1   30IAWHSE
     I                                        4  18 IAITEM
214 MI                                       19  30 IADISP
     I                                       31  380IADATE
     I                                       39  440IATIME
     I*           DS
     I*                                       1   30UTWHSE
     I*                                       4   8 UTWHDP
     I*                                       9   9 UTSTYP
     I*                                      10  24 UTITEM
     I*
     I$PERM       DS
     I                                        1  60 XXERM
     I                                        1   4 $PMSG
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I I            0                        33  380$CVD6O
     I I            0                        39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for PgUp/Dn routines
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  36 $LITEM
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $WHSE   3
     C                     PARM           $FROM   8
     C                     PARM           $TO     8
     C                     PARM           $ITEM  15
     C                     PARM           $DISP  12
410 AC                     PARM           $CODE   2
510 AC                     PARM           $PRTN   8
     C                     MOVE $WHSE     $KWHSE  30
     C*
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     EXSR ZZINZ2
     C                     EXSR SCR01I
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     ENDCS
     C                     ENDDO
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     111213
     CSR                   SETOF                     313233
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   READ DSPSFC                   50
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   READ VW2SFC                   50
VW2 ACSR         VIEW      WHEQ 3
VW2 ACSR                   READ VW3SFC                   50
VW2 ACSR                   ENDSL
     C*
VW2 DC*R                   READ DSPSFC                   50
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ '1'
510 AC                     MOVE '*EXIT   '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD12 - CANCEL
     C*
     CSR         *INKL     IFEQ '1'
510 AC                     MOVE '*CANCEL '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO CMD01E
     CSR                   END
     C*
VW2 AC*
VW2 AC*  TEST FOR CMD10 - Previous view
VW2 AC*
VW2 ACSR         *INKJ     IFEQ '1'
VW2 ACSR         VIEW      IFEQ 1
VW2 ACSR                   Z-ADDMAXVW     VIEW
VW2 ACSR                   ELSE
VW2 ACSR                   SUB  1         VIEW
VW2 ACSR                   ENDIF
VW2 ACSR         VIEW      MULT 2         V       20
VW2 ACSR                   MOVE CMDLN,V   CMDLN2
VW2 ACSR                   SUB  1         V
VW2 ACSR                   MOVE CMDLN,V   CMDLN1
VW2 ACSR                   GOTO CMD01E
VW2 ACSR                   END
VW2 AC*
VW2 AC*  TEST FOR CMD11 - Next view
VW2 AC*
VW2 ACSR         *INKK     IFEQ '1'
VW2 ACSR         VIEW      IFEQ MAXVW
VW2 ACSR                   Z-ADD1         VIEW
VW2 ACSR                   ELSE
VW2 ACSR                   ADD  1         VIEW
VW2 ACSR                   ENDIF
VW2 ACSR         VIEW      MULT 2         V       20
VW2 ACSR                   MOVE CMDLN,V   CMDLN2
VW2 ACSR                   SUB  1         V
VW2 ACSR                   MOVE CMDLN,V   CMDLN1
VW2 ACSR                   GOTO CMD01E
VW2 ACSR                   END
     C*
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R                   MOVE '*CANCEL '$LRTN
     C*R                   MOVE 'EOJ'     NXTSCR
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reSDhed
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took plSDe
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR         FILEKY    CHAINRECORD               79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE '1'       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET MAXLIN RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
214 ACSR         P         IFEQ 0
214 ACSR                   Z-ADD1         P
214 ACSR                   Z-ADD0         IAQTY1
214 ACSR                   Z-ADD0         IAQTY2
214 ACSR                   Z-ADD0         IAQTY3
214 ACSR                   Z-ADD0         IADATE
214 ACSR                   Z-ADD0         IATIME
214 ACSR                   Z-ADD0         IACWTA
214 ACSR                   MOVE *BLANKS   ITDESC
214 ACSR                   MOVE *BLANKS   IACODE
214 ACSR                   MOVE *BLANKS   IAMEMO
214 ACSR                   MOVE *BLANKS   IABY
214 ACSR                   EXSR SFLADD
214 ACSR                   MOVE '1'       ERROR
214 ACSR                   EXSR ZM9806
214 ACSR                   ENDIF
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFSD
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER MAXLIN GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
     CSR         P         IFGE MAXLIN
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFSD    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     CSR         DSPLYD    ADD  MAXLIN    GOBACK  20
     CSR         BOT       IFEQ '1'
     CSR         GOBACK    IFEQ MAXLIN
     CSR                   MOVE '1'       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
     CSR         RECNO     IFLE MAXLIN
VW2 DC*R                   ADD  1         RECNO
VW2 DC*R                   Z-ADDRECNO     Y       20
     CSR                   ADD  1         RECCNT
     CSR                   Z-ADDRECCNT    Y       20
     CSR                   Z-ADDRECCNT    RECNO
VW2 ACSR                   Z-ADDRECCNT    RECNO2
VW2 ACSR                   Z-ADDRECCNT    RECNO3
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   WRITEDSPSFL
VW2 ACSR                   WRITEVW2SFL
VW2 ACSR                   WRITEVW3SFL
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE '0'       *IN01
     CSR                   WRITEDSPSFC
VW2 ACSR                   WRITEVW2SFC
VW2 ACSR                   WRITEVW3SFC
     CSR                   Z-ADD0         RECNO   40
VW2 ACSR                   Z-ADD0         RECNO2  40
VW2 ACSR                   Z-ADD0         RECNO3  40
VW2 ACSR                   Z-ADD0         RECCNT  40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE COMMAND LINE TO DISPLAY
     C*
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
VW2 ACSR                   Z-ADDRECNO     RECNO2
VW2 ACSR                   Z-ADDRECNO     RECNO3
VW2 DC*R                   WRITEDSPSFC
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
VW2 ACSR                   WRITEDSPSFC
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   WRITEVW2SFC
VW2 ACSR         VIEW      WHEQ 3
VW2 ACSR                   WRITEVW3SFC
VW2 ACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   WRITEMSGCLR
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*                                         T
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     11021  Invalid value for section.
     C*
     CSR         ZM1021    BEGSR
     CSR                   MOVE 'IT11021' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
214 AC*
214 AC*    PIR9806  No records found for entered criteria.
214 AC*
214 ACSR         ZM9806    BEGSR
214 ACSR                   MOVE 'PIR9806' #MSGID
214 ACSR                   MOVE '*DIAG  ' #MSGTP
214 ACSR                   MOVEAERRMSG    $MD,1
214 ACSR                   EXSR ZMPMSG
214 ACSR                   ENDSR
214 AC*
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
     C*    Create a quantity string to print.
     C*
     C                     MOVE '*QTY2STR'$PCMD
     C                     Z-ADDIAQTY1    $PQTY1
     C                     Z-ADDIAQTY2    $PQTY2
     C                     Z-ADDIAQTY3    $PQTY3
     C                     MOVE *BLANKS   $PQSTR
     C*
     C                     CALL 'CVTQTY'
     C                     PARM           $PCMD   8
     C                     PARM           $PPRG  10
     C                     PARM           $PQTY1  70
     C                     PARM           $PQTY2  70
     C                     PARM           $PQTY3  70
     C                     PARM           $PUM1   2
     C                     PARM           $PUM2   2
     C                     PARM           $PUM3   2
     C                     PARM           $PQSTR 10
     C                     PARM           $PUSTR 17
     C                     PARM           $PRTN   8
     C                     PARM           $PERM
     C*
     C                     MOVE $PQSTR    QTY
     C                     MOVELITDESC    W1DESC
     C*
     C           IATIME    DIV  100       W1TIME  40
     C*
214 AC           IADATE    IFNE 0
     C                     MOVE '*CMDMDY '$CVCMD
     C                     MOVE IADATE    $CVD8I
     C                     CALL @CVTDT
     C                     PARM           $CVTDT
     C                     Z-ADD$CVD6O    W1DATE  60
214 AC                     ELSE
214 AC                     Z-ADD0         W1DATE
214 AC                     ENDIF
     C                     Z-ADDIACWTA    W1CWTA
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           IAWHSE
     CSR                   KFLD           IAITEM
     CSR                   KFLD           IADISP
     CSR                   KFLD           IADATE
     CSR                   KFLD           IATIME
     C*
     C*  Define full key for main file.
     C*
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           IAWHSE
     CSR                   KFLD           IAITEM
     CSR                   KFLD           IADISP
     CSR                   KFLD           IADATE
     CSR                   KFLD           IATIME
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           IAWHSE
415a C*
415a CSR         LINKKY    KLIST
415a CSR                   KFLD           IAWHSE
415a CSR                   KFLD           IAITEM
     C*
     CSR                   MOVE #PROG     $POPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   MOVE #PROG     $LPRG
VW2 ACSR                   Z-ADD1         VIEW    10
VW2 ACSR                   Z-ADD3         MAXVW   10
     C*R                   MOVE OPTLN,1   OPTLN1
     CSR                   MOVE CMDLN,1   CMDLN1
VW2 ACSR                   MOVE CMDLN,2   CMDLN2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Initailization for each time program is called.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   Z-ADD$KWHSE    IAWHSE
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   Z-ADDIAWHSE    $KWHSE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   ENDIF
     CSR                   ENDIF
     CSR         $KWHSE    IFNE 0
     CSR                   MOVE $KWHSE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*LEFT   '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVEL$CSTR     WOWHSE
     CSR                   ENDIF
     C*
     C*  Get initial item and date.
     C*
213 DC*R                   MOVE *BLANKS   IAITEM
213 DC*R                   Z-ADD0         IADATE
213 DC*R                   Z-ADD0         IATIME
415aACSR                   MOVE *BLANKS   WOLINK
213 ACSR         $ITEM     IFEQ '*ALL'
213 ACSR                   MOVE *BLANKS   IAITEM
213 ACSR                   ELSE
213 ACSR                   MOVE $ITEM     IAITEM
415aACSR         LINKKY    CHAINITEMLNK              79
415aACSR         *IN79     IFEQ *OFF
415aACSR                   MOVE 'LINKED'  WOLINK
415aACSR                   ELSE
415aACSR         LINKKY    SETLLITEMLNK1
415a CSR         LINKKY    READEITEMLNK1                 78
415a CSR         *IN78     IFEQ *OFF
415aACSR                   MOVE 'LINKED'  WOLINK
415aACSR                   ENDIF
415aACSR                   ENDIF
213 ACSR                   ENDIF
     C*
213 ACSR                   MOVE $ITEM     W1ITEM
213 ACSR                   MOVE $DISP     W1DISP
410 ACSR         $CODE     IFEQ *BLANKS
410 ACSR                   MOVE '*ALL'    W1CODE
410 ACSR                   ELSE
410 ACSR                   MOVEL$CODE     W1CODE
410 ACSR                   ENDIF
     C*
213 ACSR         $DISP     IFEQ '*ALL'
213 ACSR                   MOVE *BLANKS   IADISP
213 ACSR                   ELSE
213 ACSR                   MOVE $DISP     IADISP
213 ACSR                   ENDIF
     C*
     C*   Convert dates to MMDDYY format.
     C*
     CSR                   MOVE '*CMDMDY '$CVCMD
     CSR                   MOVE $FROM     $CVD8I
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD6O    W1FMDT  60
     C*
     CSR                   MOVE '*CMDMDY '$CVCMD
     CSR                   MOVE $TO       $CVD8I
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD6O    W1TODT  60
     C*
415b CSR                   EXSR ZZTOTL
     C*
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*  See if user is trying to position to ITEM.
     C*
     CSR         PTINP1    IFNE *BLANKS
     CSR                   MOVE PTINP1    IAITEM
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   Z-ADD0         IADATE
     CSR                   Z-ADD0         IATIME
214 ACSR                   MOVE *BLANKS   IADISP
     CSR                   MOVE *ON       REPOS
     CSR                   ENDIF
     C*
     CSR         ENDZPS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   ENDIF
     C*R                   ENDIF
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDSR
415b C*----------------------------------------------------------------
415b C*
415b C*  ZZTOTL   Calculate total gain/loss
415b C*
415b CSR         ZZTOTL    BEGSR
415b CSR                   Z-ADD0         TQTY1   50
415b CSR                   Z-ADD0         TQTY2   50
415b CSR                   Z-ADD0         TQTY3   50
415b CSR         PARTKY    SETLLRECORD
415b CSR                   MOVE *OFF      *IN79
415b CSR         *IN79     DOUEQ*ON
415b CSR         PARTKY    READERECORD                   79
415b CSR         *IN79     IFEQ *ON
415b CSR                   ITER
415b CSR                   ENDIF
415b CSR                   ADD  IAQTY1    TQTY1
415b CSR                   ADD  IAQTY2    TQTY2
415b CSR                   ADD  IAQTY3    TQTY3
415b CSR                   ENDDO
     C*
415b CSR                   MOVE '*QTY2STR'$PCMD
415b CSR                   Z-ADDTQTY1     $PQTY1
415b CSR                   Z-ADDTQTY2     $PQTY2
415b CSR                   Z-ADDTQTY3     $PQTY3
415b CSR                   MOVE *BLANKS   $PQSTR
415b C*
415b CSR                   CALL 'CVTQTY'
415b CSR                   PARM           $PCMD   8
415b CSR                   PARM           $PPRG  10
415b CSR                   PARM           $PQTY1  70
415b CSR                   PARM           $PQTY2  70
415b CSR                   PARM           $PQTY3  70
415b CSR                   PARM           $PUM1   2
415b CSR                   PARM           $PUM2   2
415  CSR                   PARM           $PUM3   2
415  CSR                   PARM           $PQSTR 10
415  CSR                   PARM           $PUSTR 17
415  CSR                   PARM           $PRTN   8
415  CSR                   PARM           $PERM
     C*
415  CSR                   MOVE $PQSTR    WOTOT
     C*
415b CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  CMDLN - Command display line
F3=Exit  F5=Refresh  F10=View 3  F11=View 2  F12=Cancel

F3=Exit  F5=Refresh  F10=View 1  F11=View 3  F12=Cancel

F3=Exit  F5=Refresh  F10=View 2  F11=View 1  F12=Cancel

