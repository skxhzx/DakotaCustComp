     F*----------------------------------------------------------------
     F*   Copyright (C) 1993 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  SL152A    Verify zero slots, multiple exists.
     F*  Roxanne Harrison
     F*  06 June, 2002
     F*
     F*  Note:  Will verify base or virtual as long as one slot remains
     F*  Revisions
500aAF*    07/29/05  RH   5.00a
     F*      - FIX: Change to verify virutal slots if base is zero,
     F*        base will not be verified.
     F*
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  79        Not on file/End of file indicator
     F*  90        Overflow Indicator
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FSLOT1   IP  E           K        DISK
     FVSLOT1  IF  E           K        DISK
     FVSLOT2  IF  E           K        DISK
     F            VSREC                             KRENAMERECORD
     FSLOT2   IF  E           K        DISK                           UC
     F            SLREC                             KRENAMESBREC
     I*****************************************************************
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E*                   $MD       128  1
     E*                   MSG     1   1 50
     E                    OVR     1   1 80
     I*----------------------------------------------------------------
     ISBREC
     I              SLWHSE                          S2WHSE
     I              SLWHDP                          S2WHDP
     I              SLAISL                          S2AISL
     I              SLLOC                           S2LOC
     I              SLRLVL                          S2RLVL
     I              SLHAND                          S2HAND
     I              SLSIDE                          S2SIDE
     I              SLSTYP                          S2STYP
     I              SLDISP                          S2DISP
     I              SLSTAT                          S2STAT
     I              SLSDTE                          S2SDTE
     I              SLSTIM                          S2STIM
     I              SLSDEF                          S2SDEF
     I              SLDESG                          S2DESG
     I              SLACTV                          S2ACTV
     I              SLBLD                           S2BLD
     I              SLPICK                          S2PICK
     I              SLPSEQ                          S2PSEQ
     I              SLPRTY                          S2PRTY
     I              SLENTD                          S2ENTD
     I              SLEXPD                          S2EXPD
     I              SLSLFD                          S2SLFD
     I              SLRSRV                          S2RSRV
     I              SLITEM                          S2ITEM
     I              SLSTK1                          S2STK1
     I              SLSTK2                          S2STK2
     I              SLSTK3                          S2STK3
     I              SLALC1                          S2ALC1
     I              SLALC2                          S2ALC2
     I              SLALC3                          S2ALC3
     I              SLTFR1                          S2TFR1
     I              SLTFR2                          S2TFR2
     I              SLTFR3                          S2TFR3
     I              SLPCK1                          S2PCK1
     I              SLPCK2                          S2PCK2
     I              SLPCK3                          S2PCK3
     I              SLRCV1                          S2RCV1
     I              SLRCV2                          S2RCV2
     I              SLRCV3                          S2RCV3
     I*----------------------------------------------------------------
     I*  Called programs
     I              'SL154'               C         @DELPG
     I*
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        4   8 $KWHDP
     I                                        9  20 $KDISP
     I*----------------------------------------------------------------
     I*  Called program parameters
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  26 $PWHDP
     I                                       27  38 $PDISP
     I*
     I*----------------------------------------------------------------
     I*
     I*  Program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  36 $LITEM
     I*
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     C*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $WHSE  - Warehouse
     C*      $RTNCD - Return code
     C*
     C*    Returned Parameters
     C*      None
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C                     PARM           $TLSLT  50
     C                     PARM           $PRG   10
     C*----------------------------------------------------------------
     C*
     C*  Main line
     C*
     C*  Process all slots.
     C           SLWHSE    IFEQ $PWHSE
     C           SLSTAT    ANDEQ'Z'
     C*
     C*  For virtual slot.
     C           SLRSRV    IFEQ 'V'
     C*  Get base slot.
     C           SLKEY1    CHAINVSLOT1               78
     C           *IN78     CABEQ*ON       SKIP2
     C                     Z-ADDVSWHSE    KYWHSE
     C                     MOVE VSWHDP    KYWHDP
     C                     MOVE VSPDIS    KYPDSP
     C*  If base is not zero or verified, ok to verify slot.
500a C*  OK TO VERIFY VIRTUAL, BASE WILL REMAIN IF ALL WERE ZERO.
     C           VSKEY     CHAINSLOT2                77
     C           *IN77     IFEQ *OFF
500aDC*          S2STAT    IFNE 'V'
500aDC*          S2STAT    ANDNE'Z'
     C                     Z-ADD1         VSCTR
     C                     GOTO SKIP1
500aDC*                    ENDIF
     C                     ENDIF
     C*
     C                     ENDIF
     C*
     C*  For base slot, set key.
     C           SLRSRV    IFNE 'V'
     C                     Z-ADDSLWHSE    KYWHSE
     C                     MOVE SLWHDP    KYWHDP
     C                     MOVE SLDISP    KYPDSP
     C                     ENDIF
     C*
     C*  Check if mulitple virtual slots exist for base slot.
     C                     MOVE *OFF      FOUND   1
     C                     Z-ADD0         VSCTR   20
     C           VSKEY     SETLLVSLOT2
     C           *IN79     DOUEQ*ON
     C           NXT1      TAG
     C           VSKEY     READEVSLOT2                   79
     C           *IN79     IFEQ *ON
     C                     LEAVE
     C                     ENDIF
     C           SLKEY2    CHAINSLOT2                78
     C           *IN78     IFEQ *ON
     C                     ITER
     C                     ELSE
     C           S2STAT    IFEQ 'Z'
     C           S2STAT    OREQ 'V'
     C                     ITER
     C                     ELSE
     C                     ADD  1         VSCTR
     C                     ENDIF
     C                     ENDIF
     C           VSCTR     IFEQ 1
     C                     LEAVE
     C                     ENDIF
     C                     ITER
     C                     ENDDO
     C* VERIFY SLOT IF ANOTHER NON ZERO SLOT EXISTS.
     C           SKIP1     TAG
     C           VSCTR     IFGE 1
     C*  Call delete program
     C*
     C                     EXSR INZPAR
     C                     MOVE '*DELETE '$PCMD
     C                     MOVE $PRTKY    $PUKY
     C                     CALL @DELPG
     C                     PARM           $PARMS
     C*
     C*     Delete was successful.
     C*
     C           $PRTN     IFEQ '*OK     '
     C*                    MOVE $PMSG     #MSGK
     C*                    EXSR ZMSMSG
     C                     ADD  1         TLSLT
     C                     END
     C                     ENDIF                            MULTIPLE
     C*
     C                     ENDIF
     C           SKIP2     TAG
     CLR                   Z-ADDTLSLT     $TLSLT
     CLR                   RETRN
     C*
     C*
     C*****************************************************************
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     CSR                   Z-ADD0         TLSLT   50
     CSR                   MOVE '1'       FIRST   1
     CSR         *LIKE     DEFN SLWHSE    KYWHSE
     CSR         *LIKE     DEFN SLWHDP    KYWHDP
     CSR         *LIKE     DEFN SLDISP    KYPDSP
     C*
     C*  Define keys.
     C*
     C*    SLOT2   file
     CSR         SLKEY2    KLIST
     CSR                   KFLD           VSWHSE
     CSR                   KFLD           VSWHDP
     CSR                   KFLD           VSDISP
     C*
     C*
     C*    VSLOT1  file
     CSR         SLKEY1    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLDISP
     C*    VSLOT   file
     C*
     CSR         SLKEY     KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLDISP
     C*    VSLOT2  file
     C*
     CSR         VSKEY     KLIST
     CSR                   KFLD           KYWHSE
     CSR                   KFLD           KYWHDP
     CSR                   KFLD           KYPDSP
     C*
     CSR                   EXSR ZZINZ
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE $PRG      $PPRG
     CSR                   Z-ADDSLWHSE    $KWHSE
     CSR                   MOVE SLWHDP    $KWHDP
     CSR                   MOVE SLDISP    $KDISP
     C**                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     CSR                   EXSR ZZOVR
     CSR                   OPEN SLOT2
     C*
     CSR                   ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID  7
     CSR                   PARM           #MSGTP  7
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*----------------------------------------------------------------
     C*
     C           ZRFRMT    BEGSR
     C*
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOVR    Process file overrides.
     C*
     CSR         ZZOVR     BEGSR
     C*
     C*      Override database file.
     C*
     C*
     CSR                   MOVELOVR,1     QCMD      P
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     C*
     CSR         ENDOVR    ENDSR
     C*
     C*****************************************************************
     C*
**   OVRDBF statements
OVRDBF FILE(SLOT2) SECURE(*YES)
