     F*----------------------------------------------------------------
     F*   Copyright (C) 1996 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  RT112     Route override options - Picking - Change
     F*  22 August 1994
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
213 AF*    06/11/96  DAS
     F*      - Totally rewritten to work directly with RTEOPTD file.
     F*      - Used OP112 as a base.
     F*
214 AF*    07/01/96  DAS
     F*      - Changed option RTPBRK from 1 to 3 characters.
     F*      - Changed RTPBRK to contain and aisle code instead of Y/N.
     F*      - Added check to make sure aisle is in PIR section for dept.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FRT112FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FRTEOPTD1UF  E           K        DISK                      A
     F            RTDREC                            KRENAMERECORD
214 AFSLOT1   IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1  13 50
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  26 $PCODE
     I                                       27  290$PWHSE
     I                                       30  34 $PRTE
     I                                       35  39 $PWHDP
     I*----------------------------------------------------------------
     I*  *PICK  -  Picking options  (Route overrides)
     I*
     I*     11/28/94  DAS
     I*       - Changed OPFSTP to 2 digits from 1.
     I*
     I*     02/16/95  DAS
     I*       - Moved option from OPTIONS to OPTIOND in order to have
     I*         the options by department.
     I*
213 AI*     06/11/96  DAS   2.13
     I*       - Redefined OPBPCK to 3.0 from 2.0.
     I*       - Added option OPPBRK.
     I*
214 AI*     07/01/96  DAS
     I*       - Redefined OPPBRK to 3 from 1 and to contain aisle
     I*         instead of Y/N.
     I*
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    RTNXTP  -  Next pallet number.
     I*    RTBPCK  -  Bulk pick definition.
     I*    RTPCUB  -  Maximum cube for PIR.
     I*    RTFPAL  -  Pallets on fixed fork lift.
     I*    RTFCUB  -  Maximum cube per fixed pallet.
     I*    RTFSTP  -  Maximum stops per fixed pallet.
     I*    RTINCL  -  Include PIR in fixed cube.
     I*    RTSRCH  -  Number of previous pallets to search for space.
     I*    RTFBLD  -  Fixed pallet building method.
     I*                1 = By piece without concern for splitting stop.
     I*                2 = By stop without splitting stop between plts.
214 DI**** RTPBRK  -  Break pallets by aisle (Y,N).
214 MI*    RTPBRK  -  Aisle to start new pallet.
     I*
     I* Data structure
     I*
     IRTDDTA      DS
     I I            0                         1   70RTNXTP
213 DI*I            0                         8   90RTBPCK
     I I            0                        10  142RTPCUB
     I I            0                        15  150RTFPAL
     I I            0                        16  202RTFCUB
     I*I            0                        21  210RTFSTP
     I                                       22  22 RTINCL
     I I            0                        23  240RTSRCH
     I I            0                        25  260RTFSTP
209 AI I            0                        27  270RTFBLD
213 AI I            0                        28  300RTBPCK
214 DI*                                      31  31 RTPBRK
214 MI                                       31  33 RTPBRK
     I                                      117 117 RTDEND
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  30 ERFLD
     I                                       31  40 ERFROM
     I                                       41  50 ERTO
214 AI*
214 AI                                        1   3 ERAISL
214 AI                                        4   8 ERWHDP
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new record.
     C*              *EDIT    - Edit record.
     C*              *PRINT   - Print record.
     C*              *VIEW    - View record.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains unique key for everything but *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new unique key for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR                   MOVE *ON       *IN90
     CSR                   ENDIF
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR                   END
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0201  Field can not be blank for create option.
     C*
     CSR         ZM0201    BEGSR
     CSR                   MOVE 'PIR0201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0202  Code already exists.
     C*
     CSR         ZM02      BEGSR
     CSR                   MOVE 'PIR0202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC      ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Record does not exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Record is locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0112  Invalid range entered.
     C*
     CSR         ZM0112    BEGSR
     CSR                   MOVE 'PIR0112' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
214 AC*----------------------------------------------------------------
214 AC*   OP11022  Aisle does not exist in PIR section for dept.
214 AC*
214 ACSR         ZM22      BEGSR
214 ACSR                   MOVE 'OP11022' #MSGID
214 ACSR                   MOVE '*DIAG  ' #MSGTP
214 ACSR                   MOVEAERRMSG    $MD,1
214 ACSR                   EXSR ZMPMSG
214 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  When adding ....
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     C*
     C*    Route can not be blank.
     C*
     CSR         W1RTE     IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN34
     CSR                   MOVE *ON       *IN14
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,13   ERRMSG
     CSR                   EXSR ZM0201
     CSR                   ENDIF
     C*
     C*    Verify warehouse department.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Make sure code doesn't already exist.
     C*
     CSR                   MOVE W1WHDP    $PWHDP
     CSR         FILEKY    CHAINRECORD              N79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   EXSR ZM02
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify bulk pick percentage.
     C*
     CSR         W1BPCK    IFLT 0
     CSR         W1BPCK    ORGT 100
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,4    ERFLD
     CSR                   MOVEL'0'       ERFROM
214 DC*                    MOVEL'99'      ERTO
214 MCSR                   MOVEL'100'     ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify PIR max cube.
     C*
     CSR         W1PCUB    IFLT 0
     CSR         W1PCUB    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN06
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,5    ERFLD
     CSR                   MOVEL'0'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
214 DC*
214 DC*  Verify break by aisle option.
214 DC*
214 DC*          W1PBRK    IFNE 'Y'
214 DC*          W1PBRK    ANDNE'N'
214 DC*                    MOVE *ON       ERROR
214 DC*                    MOVE *ON       *IN33
214 DC*                    MOVE *ON       *IN13
214 DC*                    MOVE *BLANKS   ERRMSG
214 DC*                    MOVELDESC,12   ERRMSG
214 DC*                    EXSR ZM1005
214 DC*                    ENDIF
214 AC*
214 AC*  Verify aisle exists in PIR section for current department.
214 AC*
214 ACSR         W1PBRK    IFNE *BLANKS
214 ACSR                   CALL 'ADJUST'
214 ACSR                   PARM '*RIGHT  '$ACMD   8
214 ACSR                   PARM W1PBRK    $ASTR  30
214 ACSR                   MOVE $ASTR     KYAISL
214 ACSR         KEYSL1    SETLLSLOT1
214 ACSR         KEYSL1    READESLOT1                    79
214 ACSR         *IN79     IFEQ *ON
214 ACSR         SLSTYP    ORNE 'P'
214 ACSR                   MOVE *ON       ERROR
214 ACSR                   MOVE *ON       *IN33
214 ACSR                   MOVE *ON       *IN13
214 ACSR                   MOVE *BLANKS   ERRMSG
214 ACSR                   MOVE W1WHDP    ERWHDP
214 ACSR                   MOVE W1PBRK    ERAISL
214 ACSR                   EXSR ZM22
214 ACSR                   ENDIF
214 ACSR                   ENDIF
     C*
     C*  Verify pallet on fixed fork lift.
     C*
     CSR         W1FPAL    IFLT 1
     CSR         W1FPAL    ORGT 9
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,6    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'9'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify fixed max cube.
     C*
     CSR         W1FCUB    IFLT 0
     CSR         W1FCUB    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN28
     CSR                   MOVE *ON       *IN08
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,7    ERFLD
     CSR                   MOVEL'0'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify fixed max stops.
     C*
     CSR         W1FSTP    IFLT 0
     CSR         W1FSTP    ORGT 99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,8    ERFLD
     CSR                   MOVEL'0'       ERFROM
     CSR                   MOVEL'99'      ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify include PIR in fixed cube option.
     C*
     CSR         W1INCL    IFNE 'Y'
     CSR         W1INCL    ANDNE'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN30
     CSR                   MOVE *ON       *IN10
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,9    ERRMSG
     CSR                   EXSR ZM1005
     CSR                   ENDIF
     C*
     C*  Verify fixed pallet building method.
     C*
     CSR         W1FBLD    IFNE 1
     CSR         W1FBLD    ANDNE2
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN32
     CSR                   MOVE *ON       *IN12
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,11   ERRMSG
     CSR                   EXSR ZM1001
     CSR                   ENDIF
     C*
     C*  Verify pallets to search for empty space.
     C*
     CSR         W1SRCH    IFLT 0
     CSR         W1SRCH    ORGT 99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,10   ERFLD
     CSR                   MOVEL'0'       ERFROM
     CSR                   MOVEL'99'      ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      IFEQ 8
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LWHDP    W1WHDP
     CSR                   END
     CSR                   ELSE
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   END
     CSR                   GOTO ENDCM1
     CSR                   END
     CSR                   END
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     CSR                   MOVE *BLANKS   W1RTE
     CSR                   MOVE *BLANKS   W1WHDP
     CSR                   Z-ADD1         W1NXTP  70
     CSR                   Z-ADD60        W1BPCK
     CSR                   Z-ADD0         W1PCUB
214 DC*                    MOVE 'N'       W1PBRK
214 MCSR                   MOVE *BLANKS   W1PBRK
     CSR                   Z-ADD1         W1FPAL
     CSR                   Z-ADD64        W1FCUB
     CSR                   Z-ADD4         W1FSTP
     CSR                   MOVE 'Y'       W1INCL
     CSR                   Z-ADD0         W1SRCH
     CSR                   Z-ADD1         W1FBLD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     CSR                   MOVE RTDRTE    W1RTE
     CSR                   MOVE RTDWDP    W1WHDP
     CSR                   Z-ADDRTNXTP    W1NXTP
     CSR                   Z-ADDRTBPCK    W1BPCK
     CSR                   Z-ADDRTPCUB    W1PCUB
213 ACSR                   MOVE RTPBRK    W1PBRK
     CSR                   Z-ADDRTFPAL    W1FPAL
     CSR                   Z-ADDRTFCUB    W1FCUB
213 ACSR                   MOVE RTINCL    W1INCL
     CSR                   Z-ADDRTFSTP    W1FSTP
     CSR                   Z-ADDRTSRCH    W1SRCH
     CSR                   Z-ADDRTFBLD    W1FBLD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     C*   Get record from main file.
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR         FILEKY    CHAINRECORD              N7978
     CSR                   ELSE
     CSR         FILEKY    CHAINRECORD               7978
     CSR                   ENDIF
     C*
     C*  Record locked.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT1
     CSR                   END
     C*
     C*  Record not found.
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM73
     CSR                   GOTO ENDGT1
     CSR                   END
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define key for main file.
     C*
     CSR         *LIKE     DEFN RTDCOD    KYCODE
     CSR         FILEKY    KLIST
     CSR                   KFLD           KYCODE
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PRTE
     CSR                   KFLD           $PWHDP
     CSR                   MOVE '*PICK   'KYCODE
214 AC*
214 AC*  Define key for SLOT1 file.
214 AC*
214 ACSR         *LIKE     DEFN SLAISL    KYAISL
214 ACSR         KEYSL1    KLIST
214 ACSR                   KFLD           $PWHSE
214 ACSR                   KFLD           $PWHDP
214 ACSR                   KFLD           KYAISL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Get and verify warehouse description.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   MOVE $PPRG     $LPRG
     CSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR         $LRTN     OREQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $LRTN     $PRTN
     CSR                   MOVE $LERM     $PERM
     CSR                   GOTO ENDIN2
     CSR                   END
     C*
     C*   Create and center warehouse description for header.
     C*
     CSR                   Z-ADD$PWHSE    $CWHSE  30
     CSR                   MOVEL$LERM     $CDESC 30
     CSR                   MOVE *BLANKS   $CSTR  40
     CSR                   CALL 'FRMTWH'
     CSR                   PARM           $CWHSE
     CSR                   PARM           $CDESC
     CSR                   PARM           $CSTR
     C*
     CSR                   MOVE *BLANKS   $PSTR
     CSR                   MOVEL$CSTR     $PSTR  60
     CSR                   Z-ADD40        $PLEN   30
     C*
     CSR                   CALL 'CENTER'
     CSR                   PARM           $PSTR
     CSR                   PARM           $PLEN
     CSR                   MOVEL$PSTR     WOWHSE
     C*
     C*
     C*   Select first screen to display.
     C*
     CSR                   MOVE #PROG     $LPRG
     CSR                   EXSR SCR01I
     CSR         ENDIN2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD    Update record.
     C*
     CSR         ZZUPD     BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Move screen fields to record fields
     C*
     CSR                   MOVE W1RTE     RTDRTE
     CSR                   MOVE W1WHDP    RTDWDP
     CSR                   Z-ADDW1NXTP    RTNXTP
     CSR                   Z-ADDW1BPCK    RTBPCK
     CSR                   Z-ADDW1PCUB    RTPCUB
213 ACSR                   MOVE W1PBRK    RTPBRK
     CSR                   Z-ADDW1FPAL    RTFPAL
     CSR                   Z-ADDW1FCUB    RTFCUB
     CSR                   Z-ADDW1FSTP    RTFSTP
     CSR                   MOVE W1INCL    RTINCL
     CSR                   Z-ADDW1SRCH    RTSRCH
     CSR                   Z-ADDW1FBLD    RTFBLD
     C*
     C*   Add record
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   MOVE '*PICK   'RTDCOD
     CSR                   Z-ADD$PWHSE    RTDWHS
     CSR                   WRITERECORD                 79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM71
     CSR                   GOTO ENDUPD
     CSR                   END
     CSR                   ELSE
     C*
     C*   -OR- Update record (it was read and locked in ZZGET2)
     C*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUPD
     CSR                   END
     CSR                   END
     C*
     C*   Move key values to parameters
     C*
     CSR                   MOVE RTDRTE    $PRTE
     CSR                   MOVE RTDWDP    $PWHDP
     C*
     CSR         ENDUPD    ENDSR
     C*
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
**
Department
Qty Level for Combined Label
Print Warning Label for Combined
Bulk Pick Definition
PIR Maximum Cube
Pallets on Fork Lift
Fixed Maximum Cube per Pallet
Fixed Maximum Stops per Pallet
Include PIR in Cube
Pallets to Search
Pallet Building Method
Break by Aisle
Route
