     F*----------------------------------------------------------------
     F*   Copyright (C) 2010 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   24 N. Washington Ave Suite 203
     F*   Batavia, IL 60510
     F*   (630) 562-0375
     F*----------------------------------------------------------------
     F*
     F*  SL150A    Verify zero slots (one whse) - Display
     F*  14 October 1994
     F*  Dave Sommerville
     F*
     F*  SK110 - 1.01
     F*
     F*----------------------------------------------------------------
     F*  Revisions
     F*
     F*    03/17/95  DAS  2.10
     F*      - Revised SL150AFM OPTION field to be 1 character.
     F*      - Revised ZOPT array element to be 1 character.
     F*      - Revised SAVOPT routine to not right justify option.
     F*
     F*    01/12/96  DAS  2.10
     F*      - Took out PIRUSER file and corresponding code and replaced
     F*        with call to GETWHSE.
416a F*    06/12/02  RH   4.16a
     F*      - Add F9  to verify multiple virtual slots.               d
416b F*    10/28/02  RH   4.16b
     F*      - Add F10 to view item information.                       d
417a F*    07/07/04  RH   4.17a
     F*      - Fix: Change wording of F9=Verify All to F9=Verify Mult. d
520a F*    07/14/08  RH   5.20a
     F*      - Enh: Change to call SL152B to verify virtual slots but  d
     F*        leave emtpy base or one empty virutal to be physically  d
     F*        verified.                                               d
520bAF*    07/16/08  RH   5.20b
     F*      - Enh: Revised program to add support for new Client id
     F*        modifications.
     F*
530 AF*    11/04/10  MLB  5.30
     F*      - Fix: Revised routine CMD01 to not update WORKOPT record
     F*        when cancel is on returning from SL152A, SL152B.
     F*        Was causing Update/Delete w/o prior read error.
     F*
640 AF*    02/24/11  MLB  6.40
     F*      - Fix: Revised routine FGET to load $PUKY into fields
     F*        $POUKY, $POFKY when a slot is not found. We want to
     F*        position the screen to the next slot after the slot
     F*        that no longer exists.
     F*
640aAF*    01/14/12  JCJ  6.40a
     F*      - Enh: Add select statement for call to SL252.
     F*
640bAF*    03/07/12  LMC  6.40B
     F*      - Enh: Changed f9 zero verify to call sl152A which
     F*        verifies all virtual slots. SL152B would leave one
     F*        virtual slot to be verified, with license tracking we
     F*        get many virtual slots to verify, and it is not
     F*        practical to think the warehouse personel will check
     F*        multiple pages of virtual slots.
     F*----------------------------------------------------------------
     F*  Client Custom Revisions: Jordano's
     F*
JOR AF*    07/16/08  RH   JOR
     F*      -  Enh: Revised program call SL152A
     F*----------------------------------------------------------------
     F*  Client Custom Revisions: City Wholesale
     F*
CTWaAF*    12/11/07  RH   CTWa
     F*      - Enh: Change to all SL252 not SL252A.                    d
     F*----------------------------------------------------------------
     F*  Notes:
     F*
     F*   This is not a normal display program. The only option that
     F*   is allowed is '1' and it is treated similar to the way option
     F*   '4' is normally treated.
     F*
     F*    This program uses to display subfiles to show more than one
     F*    view of the record. To see what was changed search for VW2
     F*    starting in column 1.
     F*
     F*    RECNO used for all subfiles, SFLRCDNBR not used in format member.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        POSITION CURSOR
     F*  21 - 29   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  79        CHAIN INDICATOR
     F*  90        PROTECT INPUT FIELDS FOR DELETE DISPLAY
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FSL150AFMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
416b F                                        RECNO KSFILE VW2SFL
     F                                        MSGK  KSFILE MSGREC
     FWORKOPT UF  E           K        DISK                      A
     FSLOT2   IF  E           K        DISK
     F            SLREC                             KRENAMERECORD
210 DF*IRUSER IF  E           K        DISK
     FWHDEPT  IF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array dafinitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
210 DE*                   ZOPT   20  20  2
210 ME                    ZOPT   20  20  1
     E                    OPTLN   1   1 75
VW2 ME                    CMDLN   1   2 79
416bDE*                   CMDLN   1   1 79
520aAI*----------------------------------------------------------------
520aAI*  Customer id
520aAI*
JOR A /COPY QCOPYSRC,IL#JORDANO
CTWaA /COPY QCOPYSRC,IL#CITYWHO
SGC A /COPY QCOPYSRC,IL#SGC
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        4   8 $KWHDP
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I                                        1  50 DSUKEY
     I I            0                         1   30SLWHSE
     I                                        4   8 SLWHDP
     I                                        9  20 SLDISP
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              '*NONE'               C         @CHGPG
     I              'SL154'               C         @DELPG
     I              '*NONE'               C         @PRTPG
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I$CVTDT      DS
     I                                        1   8 $CVDOP
     I                                        9  140$CVDD6
     I                                       15  220$CVDD8
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I*
     I                                    P   1   30ERCNT
     I*
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY 50
     C                     PARM           $RTNCD  8
     C*
     C*  Define keys
     C*
     C*     WORKOPT  (Unique key)
     C*
     C           WKOUNQ    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           WKOKYF
     C                     KFLD           WKOKYU
     C*
     C*     WORKOPT  (Partial key)
     C*
     C           WKOPRT    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     C           *LIKE     DEFN WKOKYF    $WKOF
     C           *LIKE     DEFN WKOKYU    $WKOU
     C           DELTOP    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           $WKOF
     C                     KFLD           $WKOU
     C*
     C*     USERCODE
     C*
     C           USKEY     KLIST
     C                     KFLD           #USER
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *BLANKS   $RTNCD
     C                     EXSR ZZINZ2
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
     C*
     C           $RTNCD    IFEQ '*EXIT   '
     C           $RTNCD    OREQ '*CANCEL '
     C                     SETON                     LR
     C                     END
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXSR DELDSP
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     111213
     CSR                   SETOF                     313233
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   READ DSPSFC                   50
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   READ VW2SFC                   50
VW2 ACSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR
     CSR                   MOVE *ON       *IN90
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   WRITECLR0306
     CSR                   WRITEDELREC
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   WRITECMDDEL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 wrap-up
     C*
     CSR         SCR02E    BEGSR
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE *OFF      *IN90
     CSR                   WRITECLR0306
     C*
     C*   If delete was not canceled (no errors)
     C*     then reposition to record just before first deleted rec.
     C*
     CSR         CANCEL    IFEQ *OFF
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FRSTKY    $POFKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     C*
     C*   Otherwise, position to last record read.
     C*
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   END
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   EXSR OPTNS
     CSR                   ELSE
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
520aAC*
520aAC* Get client id.
520aAC*
520aAC           *NAMVAR   DEFN PIRCLIENT CLIENT 10
520aAC                     IN   CLIENT
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
VW2 AC                     WRITEVW2SFL                 79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ*OFF
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR CMD5 - REFRESH
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR CLRSCH
     CSR         1         DO   10        X
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL
     CSR                   ENDIF
VW2 ACSR         X         CHAINVW2SFL               79
VW2 ACSR         *IN79     IFEQ '0'
VW2 ACSR                   MOVE '  '      OPTION
VW2 ACSR                   UPDATVW2SFL
VW2 ACSR                   ENDIF
     CSR                   ENDDO
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
416a C*
416a C*  TEST FOR CMD9  - Verify All
416a C*
416a CSR         *INKI     IFEQ *ON
416a C*
416a C*  Call verify all program
416a C*
416a CSR                   EXSR INZPAR
416a CSR                   MOVE '*DELETE '$PCMD
416a CSR                   MOVE $PRTKY    $PUKY
416a C**                   MOVE WKOKYU    $PUKY
416a CSR                   Z-ADD0         $TLSLT  50
416a CSR                   MOVEL'SL150A  '$PRG   10
640aAC                     SELEC
JORa CSR         CLIENT    WHEQ JORDAN
416a CSR                   CALL 'SL152A'
416a C**                   CALL 'SL152'
416a CSR                   PARM           $PARMS
416a CSR                   PARM           $TLSLT
416a CSR                   PARM           $PRG
CTWaAC           CLIENT    WHEQ CITYWH
CTWa CSR                   CALL 'SL152'
CTWa CSR                   PARM           $PARMS
CTWa CSR                   PARM           $TLSLT
CTWa CSR                   PARM           $PRG
JORa CSR                   OTHER
640bDC*SR                   CALL 'SL152B'
640BMCSR                   CALL 'SL152A'
416a CSR                   PARM           $PARMS
416a CSR                   PARM           $TLSLT
416a CSR                   PARM           $PRG
JORa CSR                   ENDSL
416a C*
416a C*     Error occured - Error message sent back
416a C*
416a CSR         $PRTN     IFEQ '*ERROR  '
416a CSR                   MOVE *ON       ERROR
416a CSR                   MOVE *ON       CANCEL
416a CSR                   MOVE *ON       STOP
416a CSR                   MOVEL$PERM     ERRMSG
416a CSR                   EXSR ZM0105
416a CSR                   ELSE
416a C*
416a C*     Error occured - Error message sent to program msgq
416a C*
416a CSR         $PRTN     IFEQ '*PGMQ   '
416a CSR                   MOVE *ON       ERROR
416a CSR                   MOVE *ON       CANCEL
416a CSR                   MOVE *ON       STOP
416a CSR                   MOVE $PMSG     #MSGK
416a CSR                   EXSR ZMQMSG
416a CSR                   ELSE
416a C*
416a C*     Delete canceled
416a C*
416a CSR         $PRTN     IFEQ '*CANCEL '
416a CSR                   MOVE *ON       CANCEL
416a CSR                   MOVE *ON       STOP
416a CSR                   ELSE
416a C*
416a C*     Verify was successful.
416a C*
416a CSR         $PRTN     IFEQ '*OK     '
416a C**                   MOVE $PMSG     #MSGK
416a C**                   EXSR ZMQMSG
416a CSR                   MOVE *ON       ERROR
416a CSR                   Z-ADD$TLSLT    ERCNT
416a CSR                   EXSR ZM22
416a CSR                   END
416a CSR                   END
416a CSR                   END
416a CSR                   END
416a CSR         CANCEL    IFEQ *OFF
416a C**                   DELETWKOREC
416a CSR                   ELSE
416a CSR                   MOVE *ON       WKOERR
530 DC*                    UPDATWKOREC
416a CSR                   END
416a CSR                   END
     C**
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       CMD01E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR CMD6 - ADD RECORD
     C*
     CSR         *INKF     IFEQ *ON
     CSR                   EXSR INZPAR
     CSR                   MOVE '*ADD    '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR         $PRTN     IFNE '*CANCEL '
     CSR         $PRTN     ANDNE'*EXIT   '
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   GOTO CMD01E
     CSR                   END
VW2 AC*
VW2 AC*  TEST FOR CMD10 - Previous view
VW2 AC*
VW2 ACSR         *INKJ     IFEQ '1'
VW2 ACSR         VIEW      IFEQ 1
VW2 ACSR                   Z-ADDMAXVW     VIEW
VW2 ACSR                   ELSE
VW2 ACSR                   SUB  1         VIEW
VW2 ACSR                   ENDIF
VW2 AC**         VIEW      MULT 2         V       20
VW2 AC**                   MOVE CMDLN,V   CMDLN2
VW2 AC**                   SUB  1         V
416BACSR                   Z-ADDVIEW      V       20
VW2 ACSR                   MOVE CMDLN,V   CMDLN1
VW2 ACSR                   GOTO CMD01E
VW2 ACSR                   END
     C*
VW2 DC*  TEST FOR CMD10 - MOVE RECORD THAT CUSOR IS ON TO TOP
VW2 MC*  TEST FOR CMD20 - MOVE RECORD THAT CUSOR IS ON TO TOP
     C*
VW2 DC*R         *INKJ     IFEQ *ON
VW2 MCSR         *INKU     IFEQ '1'
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
     CSR                   SUB  10        ROW#
     CSR         ROW#      IFLT 1
     CSR         ROW#      ORGT DSPLYD
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0106
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE UKEY,ROW# $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       CMD01E
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ *ON
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ *ON
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *ON       CANCEL
     CSR                   EXSR SCR02E
     CSR                   GOTO CMD02E
     CSR                   END
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELADD   Add record to subfile for delete display
     C*
     CSR         DELADD    BEGSR
     CSR         RECNO     IFLT 11
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  GET RECORD INFO
     C*
     CSR                   MOVE '*GET    '$POCMD
     CSR                   MOVE WKOKYU    $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       DELADE
     C*
     C*  SAVE KEY TO RECORD OF FIRST SCREEN LINE
     C*
     CSR         RECNO     IFEQ 1
     CSR                   MOVE WKOKYF    $WKOF
     CSR                   MOVE WKOKYU    $WKOU
     CSR                   END
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   MOVE WKOOPT    OPTION
     CSR                   WRITEDSPSFL
VW2 ACSR                   WRITEVW2SFL
     CSR                   END
     CSR         DELADE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELDSP   Display subfile of records marked for deletion
     C*
     CSR         DELDSP    BEGSR
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *ON       *IN81
     CSR                   Z-ADD1         RECNO
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   WRITEDSPSFC
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   WRITEVW2SFC
VW2 ACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ENT01E
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         ERROR     CABEQ*ON       ENT01E
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R         OTAKEN    IFEQ *OFF
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   GOTO ENT01E
     C*R                   END
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  Save first delete key.
     C*
     CSR         *LIKE     DEFN $PUKY     FRSTKY
     CSR                   MOVE $PUKY     FRSTKY
     C*
     C*  Delete the records that have been selected
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     CSR         WKOOPT    IFEQ ' 1'
     C*
     C*  Call delete program
     C*
     CSR                   EXSR INZPAR
     CSR                   MOVE '*DELETE '$PCMD
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   CALL @DELPG
     CSR                   PARM           $PARMS
     C*
     C*     Error occured - Error message sent back
     C*
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     C*
     C*     Error occured - Error message sent to program msgq
     C*
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     C*
     C*     Delete canceled
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     C*     Delete was successful.
     C*
     CSR         $PRTN     IFEQ '*OK     '
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         CANCEL    IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   END
     C*
     CSR                   END
     CSR                   END
     CSR                   EXSR SCR02E
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOTFND '$PORTN
640 DC*                    MOVE *BLANKS   $POUKY
640 MC                     MOVE $PUKY     $POUKY
640 DC*                    MOVE *BLANKS   $POFKY
640 MC                     MOVE $PUKY     $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE *OFF      OTAKEN  1
     C*
     C*     Do all verifies first (OPTION 1)
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     DOWEQ*OFF
     CSR         WKOOPT    ANDNE' 1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR                   END
     CSR         *IN79     IFEQ *OFF
     CSR         WKOOPT    ANDEQ' 1'
     CSR                   MOVE *ON       OTAKEN
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   EXSR SCR02I
     CSR                   GOTO OPTNSE
     CSR                   END
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   MOVE *OFF      STOP    1
     CSR         STOP      DOUEQ*ON
     CSR         CANCEL    OREQ *ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE *ON       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE *ON       REFRSH
     CSR         ERROR     IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ *ON
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS2   Execute individual options
     C*
     CSR         OPTNS2    BEGSR
     CSR                   EXSR INZPAR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     C*   Change
     C*
     CSR         WKOOPT    IFEQ ' 2'
     CSR                   MOVE '*CHANGE '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   View
     C*
     CSR         WKOOPT    IFEQ ' 5'
     CSR                   MOVE '*VIEW   '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   Print
     C*
     CSR         WKOOPT    IFEQ ' 6'
     CSR                   MOVE '*PRINT  '$PCMD
     CSR                   CALL @PRTPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     CSR                   EXSR ZZOPT
     CSR                   END
     CSR                   END
     CSR                   END
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE *ON       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         DELTOP    SETLLWORKOPT
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFAC
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
     CSR         P         IFGE 10
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFAC    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     CSR         DSPLYD    ADD  10        GOBACK  20
     CSR         BOT       IFEQ *ON
     CSR         GOBACK    IFEQ 10
     CSR                   MOVE *ON       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of delete records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF2
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFW2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*
     CSR         WKOOPT    IFEQ ' 1'
     CSR                   ADD  1         P
     CSR                   EXSR DELADD
     CSR         P         IFGE 10
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         ENDFW2    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page of delete records
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB2
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     CSR         DSPLYD    ADD  10        GOBACK  20
     CSR         BOT       IFEQ *ON
     CSR         WKOPRT    SETGTWORKOPT
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    REDPEWORKOPT                  79
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR         WKOOPT    IFEQ ' 1'
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR                   END
     CSR         ENDBK2    TAG
     CSR                   END
     C*
     C* IF WE HIT THE TOP REPOSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE *OFF      NOMORE  1
     CSR         NOMORE    DOUEQ*ON
     CSR                   MOVE *OFF      *IN21
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   READCDSPSFL                   79
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   READCVW2SFL                   79
VW2 ACSR                   ENDSL
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
210 DC*                    MOVEAOPTION    A2
210 DC*          A2,2      IFEQ ' '
210 DC*                    MOVE A2,1      A2,2
210 DC*                    MOVE ' '       A2,1
210 DC*                    MOVEAA2        OPTION
210 DC*                    END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    LOKUPZOPT                     50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   Z-ADDRECNO     Y       30
VW2 ACSR         VIEW      WHEQ 2
VW2 MCSR                   Z-ADDRECNO     Y       30
VW2 ACSR                   ENDSL
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ *OFF
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
     CSR         RECCNT    IFLT 11
     CSR                   ADD  1         RECCNT
     CSR                   Z-ADDRECCNT    RECNO
     CSR                   Z-ADDRECCNT    Y
416b C**         RECNO     IFLT 11
416b C**                   ADD  1         RECNO
416b C**                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   WRITEDSPSFL
VW2 ACSR                   WRITEVW2SFL
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE *OFF      *IN81
     CSR                   MOVE *OFF      *IN82
     CSR                   MOVE *ON       *IN83
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC
VW2 ACSR                   WRITEVW2SFC
     CSR                   Z-ADD0         RECNO   40
     CSR                   Z-ADD0         RECCNT  40
416b CSR                   MOVE *ON       *IN82
416b CSR                   MOVE *OFF      *IN83
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE *ON
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR         1         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       *IN20
     CSR                   UPDATDSPSFL
     CSR                   END
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR         1         CHAINVW2SFL               79
VW2 ACSR         *IN79     IFEQ '0'
VW2 ACSR                   MOVE '1'       *IN20
VW2 ACSR                   UPDATVW2SFL
VW2 ACSR                   END
VW2 ACSR                   ENDSL
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
416b CSR                   Z-ADD1         RECNO
     C**                   Z-ADDPOSREC    RECNO
     CSR                   MOVE *ON       *IN81
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   WRITEDSPSFC
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   WRITEVW2SFC
VW2 ACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
     CSR         1         DO   10        X       30
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR         X         CHAINDSPSFL               79
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR         X         CHAINVW2SFL               79
VW2 ACSR                   ENDSL
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   ENDIF
VW2 ACSR                   SELEC
VW2 ACSR         VIEW      WHEQ 1
     CSR                   UPDATDSPSFL
VW2 ACSR         VIEW      WHEQ 2
VW2 ACSR                   UPDATVW2SFL
VW2 ACSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   WRITEMSGCLR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT11021  Invalid section entered.
     C*
     CSR         ZM21      BEGSR
     CSR                   MOVE 'IT11021' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
416  C*----------------------------------------------------------------
416  C*   SL15201  Slots verified.
     C*
     CSR         ZM22      BEGSR
     CSR                   MOVE 'SL15201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   SELEC
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      WHEQ 4
     CSR         COL#      ANDGE41
     CSR                   MOVE *ON       *IN11
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    PTINP1
     CSR                   END
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      WHEQ 5
     CSR         COL#      ANDGE41
     CSR                   MOVE *ON       *IN12
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   MOVE PTINP2    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LWHDP    PTINP2
     CSR                   END
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     CSR         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     C*R         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
     C*   Item Description
     C*
     CSR         KEYIT1    CHAINPIRITEM              78
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *BLANKS   W1DESC
     CSR                   ELSE
     CSR                   MOVE ITDESC    W1DESC
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLDISP
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLDISP
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLWHDP
     C*
     C*  Define key for file PIRITEM
     C*
     CSR         KEYIT1    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLITEM
     C*
     C*  Setup option and command display lines.
     C*
VW2 ACSR                   Z-ADD1         VIEW    10
VW2 ACSR                   Z-ADD2         MAXVW   10
     CSR                   MOVE OPTLN,1   OPTLN1
     CSR                   MOVE CMDLN,1   CMDLN1
VW2 AC**                   MOVE CMDLN,2   CMDLN2
     C*
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Extra program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Get warehouse for user.
     C*
210 DC*R         USKEY     CHAINPIRUSER              79
210 DC*R         *IN79     IFEQ *OFF
210 DC*R                   Z-ADDUSWHSE    SLWHSE
210 DC*R                   ELSE
210 DC*R                   Z-ADD1         SLWHSE
210 DC*R                   ENDIF
210 AC*
210 ACSR                   CALL 'GETWHSE'
210 ACSR                   PARM           #USER
210 ACSR         SLWHSE    PARM 0         #WHSE   30
210 AC*
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   Z-ADDSLWHSE    $KWHSE
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDSLWHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   Z-ADDSLWHSE    $KWHSE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   ENDIF
     CSR                   ENDIF
     CSR         $KWHSE    IFNE 0
     CSR                   MOVE $KWHSE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*LEFT   '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVEL$CSTR     WOWHSE
     CSR                   ENDIF
     C*
     C*  Get initial department.
     C*
     CSR         KEYWD     KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           WDCODE
     C*
     CSR                   MOVE *BLANKS   WDCODE
     CSR         KEYWD     SETLLWHDEPT
     CSR                   READ WHDEPT                   79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WDDESC
     CSR                   ENDIF
     CSR                   MOVE WDCODE    $KWHDP
     CSR                   MOVE WDCODE    SLWHDP
     C*
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*  See if user is trying to change warehouse.
     C*
     CSR         PTINP1    IFNE 0
     C*
     C*      Verify warehouse entry.
     C*
     CSR                   Z-ADDPTINP1    $KWHSE
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN31
     CSR                   MOVE *ON       *IN11
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   GOTO ENDZPS
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   Z-ADDPTINP1    SLWHSE
     CSR                   Z-ADDPTINP1    $KWHSE
     CSR         $KWHSE    IFNE 0
     CSR                   MOVE *BLANKS   $CSTR
     CSR                   MOVE $KWHSE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*LEFT   '$CCMD
     CSR                   PARM           $CSTR
     CSR                   MOVEL$CSTR     WOWHSE
     CSR                   ENDIF
     CSR                   MOVE *BLANKS   SLDISP
     CSR                   MOVEL$LERM     WHDESC
     CSR                   Z-ADD0         PTINP1
     CSR                   MOVE *ON       REPOS
     CSR                   ENDIF
     C*
     C*  See if user is trying to change department.
     C*
     CSR         PTINP2    IFNE *BLANKS
     C*
     C*      Verify department entry.
     C*
     CSR                   MOVE PTINP2    WDCODE
     CSR                   MOVE *BLANKS   WDDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   MOVE PTINP2    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN32
     CSR                   MOVE *ON       *IN12
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN32
     CSR                   MOVE *ON       *IN12
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   GOTO ENDZPS
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   MOVE PTINP2    SLWHDP
     CSR                   MOVE PTINP2    $KWHDP
     CSR                   MOVE *BLANKS   SLDISP
     CSR                   MOVEL$LERM     WDDESC
     CSR                   MOVE *BLANKS   PTINP2
     CSR                   MOVE *ON       REPOS
     CSR                   ENDIF
     C*
     C*  See if user is trying to position to aisle.
     C*
     CSR         PTINP3    IFNE *BLANKS
     CSR                   MOVE PTINP3    SLDISP
     CSR                   MOVE *BLANKS   PTINP3
     CSR                   MOVE *ON       REPOS
     CSR                   ENDIF
     C*
     CSR         ENDZPS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
1
**  OPTLN - Option display line
  1=Verify
**  CMDLN - Command display line
F3=Exit  F4=Prompt  F5=Refresh  F9=Verify Mult  F10=View 2  F12=Cancel
F3=Exit  F4=Prompt  F5=Refresh  F9=Verify Mult  F10=View 1  F12=Cancel
