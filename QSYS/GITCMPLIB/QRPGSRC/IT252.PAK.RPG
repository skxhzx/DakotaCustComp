500kA*----------------------------------------------------------------
500kA*  Multilingual Verision
500kA*  Every screen and message has a corresponding Spanish version.
500kA*  Any changes must be made to both languages.
500kA*  If necessary, contact appropriate person to do translation.
     F*----------------------------------------------------------------
     F*   Copyright (C) 2005 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   245 W. Roosevelt Rd.  Bldg 8, Suite 51
     F*   West Chicago, IL  60185
     F*   (630) 562-0375
     F*----------------------------------------------------------------
     F*
     F*  IT252  RF Inventory transfer - Change
     F*  21 December, 1999
     F*  Roxanne Harrison
     F*
     F*  Notes:
     F*
     F*    12/21/99  RH
     F*      - Disabled F8=Slot Info and F21=Tie/Hi Info.
     F*        The called programs are full screen and a fork driver
     F*        will not want or have time to check the info.
     F*    12/20/99  RH  Created using IT152
     F*      - This program can use virtual slots and manual put away.
     F*        If an item is date sensitive and exists in the 'TO'
     F*        physical location with a different date, display error.
     F*        If item exists with same date, increment slot qty.
     F*        If manual put away,
     F*          if item doesn't exist in physical location and a
     F*            if normal slot is empty, put in that slot
     F*            otherwise create next possible virtual slot.
     F*        Virtual slot status is updated the same as normal slots.
     F*
     F*----------------------------------------------------------------
     F*  Revisions:
     F*
     F*    02/10/98  RH   4.09
     F*      - Major revision to use virtual slots.                    d
     F*        Previous revision commemts were removed.
     F*        Original IT152 was renamed IT152X
409bAF*    06/17/98  RH   4.09
     F*      - Add call to ADJQTY with *HOLD/*RELEASE for inactive slot
412 AF*    09/10/99  RH   4.12
     F*      - Add check in ZZCHK1, To slot can't be blank
     F*      - Add ZZUNDO to reverse from slot and itemadj records if
     F*        error and can't complete the transfer successfully.
412 AF*    09/21/99  RH   4.12
     F*      - Allow transfer to different dept. must be item's dept.
     F*      - If item is date sensitive, allow mix dates in slot,
     F*        display warning, greater date will be used for slot date
     F*      - Display item's dept. on screen.
412aAF*    09/21/99  RH   4.12a
     F*      - Call CHKSSB to enable breakdown field for item with
     F*        a same slot breakdown.
     F*
412 AF*    09/24/99  DAS  4.12
     F*      - Changed program to format virtual slot display from
     F*        FRMTSL to FRMTVS.
     F*      - Changed to create vslot with Pick type of physical slot.
     F*      - Revised ZZCKNS routine to check handstack of physical
     F*        slot. If both characters being used then getout. If
     F*        only one char being used then limit the possible
     F*        virtual handstack so that the first character must
     F*        equal the last character of the physical handstack.
     F*        Remember, the handstack is right justified so if
     F*        the physical slot already has handstack ' A', then
     F*        the possible virtual handstacks are 'AA', 'AB' . . .
     F*
413 AF*    09/24/99  DAS 4.13
     F*      - Removed 412a changes dealing with CHKSSB.
     F*      - Added description field to screen for corresponding
     F*        SSB item if one exists.
     F*      - Removed department fields from screen. Department
     F*        code will be included in warehouse description.
     F*      - Revised ZZINZ2 to combine warehouse & dept.
     F*      - Revised ZZINZ2 to get SSB item if one exists.
     F*      - Revised logic to non-display/protect breakdown Qty's.
     F*      - Added @FMTIT to format item description fields.
     F*
413aAF*    12/29/99  DAS 4.13a
     F*      - Revised ZZCKNS to set ERROR *OFF if slot does not have
     F*        item.
     F*
413bAF*    01/17/99  RH  4.13b
     F*      - Revised ZZCHK1 to condition checks if OVRRID is Off.
413CAF*    01/26/00  RH   4.13C
     F*      - Add code to not create virtual pick slots,
     F*        comment code if virtual pick slots should be created.
413dAF*    02/03/00  RH/DAS  4.13d
     F*      - Remove 4.13B change,
     F*      - Revise ZZCHK1 to save slot and restore on error.
     F*
413eAF*    02/07/00  HNK  4.13e
     F*      - Remove slot entry from screen 1 and put Item entry
     F*        instead.
     F*      - Add screen 2 for slot entry.
     F*
414 AF*    06/29/00  HNK  4.14
     F*      - Enable F20 on screen 1.
     F*      - Adjust warehouse qty if item number changed.
414aAF*    06/29/00  DAS  4.14a
     F*      - Initialize EXIST flag.
414bAF*    07/19/00  RRH  4.14b
     F*      - Correct # for Do loop in ZZCKNS
414cAF*    08/01/00  RRH  4.14c
     F*      - Add OPTIONS, ITEMMSC to check multiple pick options.
     F*      - Note: IMNRPK can = 0 to allow no pick slots.
414dAF*    08/02/00  RRH  4.14d
     F*      - Add error check, Item and slot section must match.
414eAF*    08/23/00  HNK  4.14e
     F*      - Do not chain to slot file if new virtual slot is to be
     F*        created.
414fAF*    08/30/00  HNK  4.14f
     F*      - Do not check for # of pick slots, if both "From" and
     F*        "To" slots are overflow slots.
414gAF*    06/22/00  DAS  4.14g
     F*      - Added APICVTSLT to ZZCHK2 routine.                      d
414hAF*    10/25/00  RRH  4.14g
     F*      - Don't lock VSLOT records in ZZCKSL.
     F*
415 AF*    12/06/00  HNK  4.15
     F*      - Create adj records when item number is changed.
415aAF*    12/19/00  HNK  4.15a
     F*      - Correct key for ITEMMSC file.
415bAF*    05/03/01  MLB  4.15b
     F*      - Revised program to check designation of To-slot.
415cAF*    05/03/01  MLB  4.15c
     F*      - Revised routine ZZCRTL to create label records for
     F*        each qty being transferred.
415dAF*    05/04/01  MLB  4.15d
     F*      - Revised program to check quantity in slot before
     F*        updating expiration date, entered date. When updating
     F*        expiration dates with qty in the slot, the oldest
     F*        date will take precedence. If slot is empty, then date
     F*        from From slot will be updated.
415eAF*    05/30/01  MLB  4.15e
     F*      - Revised routine SC2 to loop around if error occurs.
     F*      - Revised routine ZZCLSE to send error to user if not
     F*        able to close the the transfer transaction.
     F*      - Revised routine ZZABRT to subtract the transfer qty
     F*        from the receive bucket of the To Slot.
415fAF*    06/04/01  MLB  4.15f
     F*      - Revised routine ZZCLSE to pass warehouse to PT132.
     F*
415gAF*    05/16/01  DAS  4.15g
     F*      - Created a 16-line version of SCREEN1 named SCREEN61.
     F*      - Add special message screens for 16-line display.
     F*      - Added call to program to get screen size being used.
     F*      - Revised to initialize PTRDTE in ZZIDLE routine.
415hAF*    07/09/01  MLB  4.15h
     F*      - Revised routine ZZUPD2 to seton flag when To Slot has
     F*        updated.
     F*      - Revised ZZABRT to only update To Slot when it was updated
     F*        in routine ZZUPD2.
     F*      - Revised SCR02I, ZZINZ2 to initialize flag TOSLUP.
     F*
416 AF*    09/29/01  MLB  4.16
     F*      - Revised routine ZZCKNS to set off NEWVS each time
     F*        routine is executed.
416aAF*    12/04/01  MLB  4.16a
     F*      - Revised program to add support for veryifying slots
     F*        if the transfer will leave the slot at zero.
416bAF*    12/06/01  MLB  4.16b
     F*      - Added file PIRTRAN1.
     F*      - Revised ZZTASK to first look at PIRTRAN1 for a status
     F*        '2' record. This will save reading through every record
     F*        for the employee.
416cAF*    12/21/01  MLB  4.16c
     F*      - Revised routine ZZVFY to load key fields.
     F*        Changed key fields on key list SVFKEY.
     F*
416eAF*    01/31/02  DAS  4.16e
     F*      - Added external data structure $SLOT.
     F*      - Added routines ZZZS2D, ZZZCOP, ZZZISF, ZZZFS1, ZZZFS2
     F*
416fAF*    01/30/02  HNK  4.16f
     F*      - Use KEYIT1 key for PIRITEM file and use TOWHDP to create
     F*        second label record.
     F*
416gAF*    02/14/02  MLB  4.16g
     F*      - Revised routine SC3 to run ZZABRT when F3/F12
     F*        is selected by the user.
     F*      - Added flag ABORT to test in SC3 when abort
     F*        transaction should be run.
     F*
416hAF*    02/21/02  DAS  4.16h
     F*      - Revised routine ZZABRT to call interface with @NOUPD.
416iAF*    04/04/02  MLB  4.16i
     F*      - Fix: Revised SC2 to only run routine ZZABRT when
     F*             user hasn't been prompted to verify slot.
     F*      - Fix: Revised SCR02I to only turn off TOSLUP when
     F*             user hasn't been prompted to verify slot.
416jAF*    04/16/02  RH   4.16j
     F*      - If new item is type B or S, calculate breakdown quantity
     F*      - If item # changes, allow entry of adjustment code.
416kAF*    04/19/02  RH   4.16k
     F*      - Create "to slot" label rec with status of P.
     F*      - Fix - *IN92 was not being set to *OFF after first time
416lAF*    05/11/02  HNK/RH 416l
     F*      - Fix - Initialize SVUMQ2 to 1 instead of 0.
416mAF*    02/20/02  MLB  4.16m
     F*      - Revised SCR01I, SCR03I to setoff TOSLUP flag.
416nAF*    06/11/02  DAS  4.16n
     F*      - Changed A$LIC# from 7.0 to 15.
     F*
416oAF*    08/03/02  DAS  4.16o
     F*      - Revised ZZFIL1 to initialize W1ITM to SLITEM at the
     F*        beginning of the routine. It was be set to blanks.
     F*        ZZUOM relies on this field. Since it was blank,
     F*        *IN94/94 weren't being set correctly.
416pAF*    08/05/02  MLB  4.16p
     F*      - Fix: Revised ZZCHK1 to convert available quantity into
     F*        total available quantity for breakdown1,2 quantity
     F*        transfers.
416qAF*    09/25/02  RH   4.16q
     F*      - Revised to create virutal slot with same status as base
     F*        if base is not Z or V.
416rAF*    10/10/02  RH   4.16r
     F*      - FIX - Update held quantities for item.
416sAF*    10/10/02  RH   4.16s
     F*      - FIX - Was not updating to slot with correct qty when
     F*        item changed.
416tAF*    12/04/02  MLB  4.16t
     F*      - Enh: Added support to program to prevent product from
     F*        being transfered to an inactive slot.
416uAF*    01/31/03  MLB  4.16u
     F*      - Fix: Revised ZZEXCP to use new fields for item and
     F*        task being loaded into exception record.
     F*        Revised ZZUPD3 to use new fields for qty
     F*        being loaded into exception record.
416vAF*    04/14/03  DAS  4.16v
     F*      - Revised ZZCRTL routined to call DRI with *ADJUSTTFR
     F*        for each adjustment record created.
     F*
417 AF*    02/13/03  MLB  4.17
     F*      - Fix: Revised ZZCLSE to call new routine ZZENDI to close
     F*        any open(inuse) Indirect tasks before closing current
     F*        direct task.  Having Indirect tasks still open while
     F*        closing the current task was causing the direct task
     F*        to be updated with negative direct minutes.
417aAF*    04/03/03  RH   4.17a
     F*      - Recompiled, ITEMMSC file changed.
417bAF*    04/17/03  RH   4.17b
     F*      - Fix - To Label qty was not correct when item changed.
417cAF*    12/31/02  MLB  4.17c
     F*      - Enh: Added support for lot/license plate tracking.
417dAF*    02/28/03  MLB  4.17d
     F*      - Enh: Added support for new Expiration/Entered date update
     F*        options.
417eAF*    05/29/03  MLB  4.17e
     F*      - Enh: Added support for virtual slot options.
417fAF*    05/30/03  MLB  4.17f
     F*      - Enh: Revised SCR01I to set W3ZERO to blanks.
417GAF*    10/14/03  RH   4.17G
     F*      - Fix: error in 417b code, not updating TOQTY1 correctly
     F*      - Fix: error in 416k code, not setting *IN92 off.
417gAF*    12/23/03  MLB  4.17g
     F*      - Enh: Added call to UPDSLTPOS program to delete slot
     F*        entries when slot is zero verified.
     F*
500 AF*    01/20/05  MLB  5.00
     F*      - Enh: Revised program to add support for Client id
500aAF*    08/20/03  MLB  5.00a
     F*      - Fix: Revised ZZUPD2 to not allow expiration dates
     F*        less than current date to update pick slot.
     F*        NOTE:Currently this code does NOT update any field,see ZZDATE
500bA*    03/04/05  RH   5.00b
     *      - Fix: Do not allow virtual slot to be scanned for putaway
500cAF*    05/17/05  RLP  5.00c
     F*      - Enh: Revised VSKEY to use ITWHDP instead of $PWHDP.
     F*             Revised CKKEY to use ITWHDP instead of $PWHDP.
     F*             Revised KEYS3 to use ITITEM instead of KYITEM.
     F*      - Reason: To allow transfer of item between two dept
     F*                but user must change item# in doing so.
     F*      - Revised ZZCHK2 to increment counter NBRPCK if creating
     F*        a virtual pick slot.
500dAF*    05/29/05  RH/RLP   5.00d
     F*      - FIX: Create 1st label record for break 1 quantity with
     F*        from slot department when moving to a different dept.
500eAF*    05/29/05  RLP  5.00e
     F*      - FIX: Modified 500a revision of ZZCHK2 and added call
     F*        to CNTPICKTFR (for counting number of pick slots) to
     F*        subroutine CHKPCK, file SLOT3 no longer needed.
500fAF*    08/04/05  MLB  5.00f
     F*      - Enh: Revised ZZZERO to verify all slots in a physical
     F*        location, not just the from slot used for transfer.
     F*      - Enh: Removed part of 4.17g enhancement. Removed call to
     F*        @SLTPS. Not used in 5.00.
500gAF*    12/28/05  MLB  5.00g
     F*      - Enh: Revised program to compute extended catchweight
     F*        when a "Change Item Number" transfer is done.
500hAF*    04/13/06  RH   5.00h
     F*      - Enh: Add Check "To Slot" qty option.
     F*      - Enh: Revised program call SL635 to view slot qty &
     F*        create exception if option is Y.
500iAF*    04/24/06  MLB  5.00i
     F*      - Fix: Correction to 5.00g mod to save additional item
     F*        information for the From/To items to correctly compute
     F*        total extended catchweight.
500jAF*    04/25/06  MLB  5.00j
     F*      - Fix: Revised program to check To Item date sensitive
     F*        flag before updating slot with expiration date.
     F*
500kAF*    05/26/06  JCJ  5.00
     F*      - Added Multilingual logic.
     F*
510aAF*    06/09/06  DAS  5.10a
     F*      - Enh: Revised ZZUPD2 to call UPDSLTDTE.
510aAF*    06/24/06  DAS  5.10a
     F*      - *** REMOVED UPDSLTDTE STUFF ****
     F*
     F*----------------------------------------------------------------
     F*  Client Custom Revisions: BiRite
BIR AF*    01/20/05  MLB  BIR
     F*      - Revised ZZCKNS to only allow virtual pick slots to be
     F*        created for PIR slots.
     F*
BIRaAF*    06/21/06  JCJ  BIRa
     F*      - Changed to allow custom code for packers
     F*
PCK AF*    01/22/04  DAS  PCK
     F*      - Revised format to split slot input field(s).
     F*      - Data structure was added to handle the combining of
     F*        slot input field(s).
     F*        This was done because Symbol scanners only scan into
     F*        the first position of a field instead of where the
     F*        cursor lies. Therefore, in order to do double scanning
     F*        the slot field had to be split into two parts with 1
     F*        character inbetween. Program APICVTSLT was modified
     F*        to handle the positioning correctly.
     F*
PAKaAF*    01/19/04  RH   PAKa
     F*      - Allow virtual pick slot to be created.                  o
     F*
PCKbAF*    03/01/04  DAS  PCKb
     F*      - Added call to RC200E to ask if slot is empty.           d
PCKcAF*    05/11/07  TJ   PCKc
     F*      - Revised to ignore the inactive slot status code edit.
PCKdA*    05/21/07  TJ   PCKd
     *      - Enh: Change parm list for call to RC200E.
PCKeAF*    04/23/09  CWM  PCKe
     F*      - Revised to not allow creation of virtual slot for Pick
     F*        Slot if SLRSRV is equal to 'Y'.
PCKfAF*    11/25/09  MLB  PCKf
     F*      - Revised to set slots that are verified to status SO when
     F*        slot designation = SM = Star Meats.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 10   Position cursor indicators
     F*  21 - 30   Reverse display indicators
500gAF*  59        User changed item number during transfer.
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT252FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
415gAF                                        MSGK  KSFILE M16REC
417cAF                                        MSGK  KSFILE MSGRECW
     FSLOT2   UF  E           K        DISK                      A
     F            SLREC                             KRENAMERECORD
416aAFVSLOT1  UF  E           K        DISK
416aAF            VSREC                             KRENAMEVSREC1
     FVSLOT2  UF  E           K        DISK                      A
     FWAREHS  IF  E           K        DISK
     FWHDEPT  IF  E           K        DISK
     FSLOTSTATIF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     FUNMESR  IF  E           K        DISK
     FITEMDEF IF  E           K        DISK
     FOPTIOND IF  E           K        DISK
413eAFPIRTRAN UF  E           K        DISK                      A
413eAFTASK    IF  E           K        DISK
416bAFPIRTRAN1IF  E           K        DISK
416bAF            PTREC                             KRENAMEPTREC1
413eAFPIRTRAN2IF  E           K        DISK
416bDF*           PTREC                             KRENAMEPTREC1
416bAF            PTREC                             KRENAMEPTREC2
413eAFPIRUSER IF  E           K        DISK
414cAFITEMMSC IF  E           K        DISK
414cAFOPTIONS IF  E           K        DISK
500eDF*LOT3   IF  E           K        DISK
416jAFITEMLNK IF  E           K        DISK
413EAFLABEL   O   E           K        DISK                      A
415 AFITEMADJ O   E           K        DISK                      A
416aAFITMEXCP O   E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
412 AE                    A2          2  1
412 AE                    A2N         2  1
     E                    A10        10  1
     E                    $MD       128  1
     E                    HND       702  2
416aDE**                  DESC    1   3 50
416aME                    DESC    1   4 50
     E                    LTR    27  27  1
500kAE                    DESCSP  1   4 50
PCK AI*----------------------------------------------------------------
PCK AI*  Slot redefinition
PCK AI*
PCK AI            DS
PCK AI                                        1  12 W2DISP
PCK MI                                        1   7 W2DSP1
PCK MI                                        8  12 W2DSP2
500 AI*----------------------------------------------------------------
500 AI*  Customer id
500 AI*
500 AI              'GETCLIENT'           C         @GETCL
500 AI*
500 A /COPY QCOPYSRC,IL#BIRITE
PCKcA /COPY QCOPYSRC,IL#PACKERS
416eAI*----------------------------------------------------------------
416eAI*  External data structure for Dakota Realtime Interface.
416eAI*
416eAI$SLOT     E DSC#SLOTDDS
416eAI              '*NOUPDATE*'          C         @NOUPD
416eAI              '%SET2VFY'            C         @VFYSL
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  26 $PWHDP
     I                                       27  38 $PDISP
     I                                       39  53 $PITEM
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$AERM       DS
     I                                        1  60 XAERM
     I                                        1   4 $AMSG
     I$CERM       DS
     I                                        1  60 XCERM
     I                                        1   4 $CMSG
417dAI*----------------------------------------------------------------
417dAI*  *DATEOPT  -  Expiration/Entered date options
417dAI*----------------------------------------------------------------
417dAI*
417dAI* Fields
417dAI*
417dAI*    OPLTDN  -  Letdown transactions.  <1-3>
417dAI*    OPODRP  -  On-demand replenishment transactions. <1-3>
417dAI*    OPSLTF  -  Slot transfer transactions. <1-3>
417dAI*    OPPARC  -  Product put-away - Receiving transactions. <1-3>
417dAI*    OPPART  -  Product put-away - Returns transactions. <1-3>
417dAI*
417dAI*     Destination options:
417dAI*       1=Use From Slot date.
417dAI*       2=Use oldest date.
417dAI*       3=Use From Slot date if To Slot available qty is zero.
417dAI*
417dAI*     Note: For Receiving/Returns, substitute date captured during
417dAI*           receiving/returns processing for From Slot date.
417dAI*
417dAI* Data structure
417dAI*
417dAIOPDTA1      DS
417dAI                                        1   1 OPLTDN
417dAI                                        2   2 OPODRP
417dAI                                        3   3 OPSLTF
417dAI                                        4   4 OPPARC
417dAI                                        5   5 OPPART
417dAI                                      117 117 OPENDD
     I*----------------------------------------------------------------
     I*  *PICK  -  Picking options
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    OPNXTP  -  Next pallet number.
     I*    OPBPCK  -  Bulk pick definition.
     I*    OPPCUB  -  Maximum cube for PIR.
     I*    OPFPAL  -  Pallets on fixed fork lift.
     I*    OPFCUB  -  Maximum cube per fixed pallet.
     I*    OPFSTP  -  Maximum stops per fixed pallet.
     I*    OPINCL  -  Include PIR in fixed cube.
     I*    OPSRCH  -  Number of previous pallets to search for space.
     I*    OPFBLD  -  Fixed pallet building method.
     I*                1 = By piece without concern for splitting stop.
     I*                2 = By stop without splitting stop between plts.
     I*    OPPBRK  -  Break pallets by aisle (Y,N).
     I*    OPMPUT  -  Manual Put away (Y,N).
     I*
     I* Data structure
     I*
     IOPDDTA      DS
     I I            0                         1   70OPNXTP
     I I            0                        10  142OPPCUB
     I I            0                        15  150OPFPAL
     I I            0                        16  202OPFCUB
     I                                       22  22 OPINCL
     I I            0                        23  240OPSRCH
     I I            0                        25  260OPFSTP
     I I            0                        27  270OPFBLD
     I I            0                        28  300OPBPCK
     I                                       31  33 OPPBRK
     I                                       34  34 OPMPUT
     I                                      117 117 OPDEND
     I*
417eAI*----------------------------------------------------------------
417eAI*  *VIRTUAL  -  Virtual Slot options
417eAI*----------------------------------------------------------------
417eAI*
417eAI* Fields
417eAI*
417eAI*    OPVALL  -  Always create Virtual slot. (Y/N)
417eAI*    OPVPCK  -  Allow Virtual pick slots to be created.  (Y/N)
417eAI*    OPVSLT  -  Create Virtual slot for item when base slot and
417eAI*               corresponding Virtual slot(s) item(s) are different.
417eAI*               Always Yes.
417eAI*    OPVEXP  -  Create Virtual slot when item exists and
417eAI*               expiration date is different.  (Y/N)
417eAI*    OPVEND  -  Create Virtual slot when item exists and
417eAI*               entered date is different.  (Y/N)
417eAI*    OPVSAM  -  Merge product when entered/expiration dates
417eAI*               are the same.  (Y/N)
417eAI*    OPVEDF  -  Merge product when entered dates are different and
417eAI*               expiration dates are the same.  (Y/N)
417eAI*
417eAI* Data structure
417eAI*
417eAIOPDTAV      DS
417eAI                                        1   1 OPVALL
417eAI                                        2   2 OPVPCK
417eAI                                        3   3 OPVSLT
417eAI                                        4   4 OPVEXP
417eAI                                        5   5 OPVEND
417eAI                                        6   6 OPVSAM
417eAI                                        7   7 OPVEDF
417eAI                                      117 117 OPTENV
417eAI*
414cAI*----------------------------------------------------------------
414cAI*  *SYSTEM  -  System options.
414cAI*----------------------------------------------------------------
414cAI*
414cAI* Fields
414cAI*
414cAI*    OPEPM   -  Using EPM module (Y,N).
414cAI*    OPRF    -  Using RF module (Y,N).
414cAI*    OPCAPC  -  Capture catch weights at pick closing (Y,N).
414cAI*    OPLETD  -  Print letdown labels (Y,N).
414cAI*    OPWRNC  -  Perform catch weight variance check (Y,N).
414cAI*    OPRG1C  -  Catch weight low variance percentage.
414cAI*    OPRG2C  -  Catch weight high variance percentage.
414cAI*    OPIMPI  -  Import item fields from host.(Y,N).
414cAI*    OPMPCK  -  Allow multiple pick slots for fixed items (Y,N).
414cAI*
414cAI* Data structure
414cAI*
414cAIOPDAT2      DS
414cAI                                        1   1 OPEPM
414cAI                                        2   2 OPRF
414cAI                                        3   3 OPCAPC
414cAI                                        4   4 OPLETD
414cAI                                        5   5 OPWRNC
414cAI                                        6   81OPRG1C
414cAI                                        9  111OPRG2C
414cAI                                       12  12 OPIMPI
414cAI                                       14  14 OPMPCK
414cAI                                      117 117 OPTEN2
413bAI*----------------------------------------------------------------
413bAI*  *REPLEN  -  Replenishment options.
413bAI*----------------------------------------------------------------
413bAI*
413bAI* Fields
413bAI*
413bAI*    OPRPLB  -  Replenishment basis (*AVGQTY, *ORDQTY).
414dAI*    OPOQRP  -  Order qty replenishment (Y/N).
416hAI*    OPRPEX  -  Allow replenishment on expired items.
416hAI*               1=Allow, 2=Don't allow, 3=Warn
416hAI*    OPRPFI  -  Allow replenishments out of FIFO order.
416hAI*               1=Allow, 3=Warn
417aAI*    OPLMTS  -  Limit Specific Slot replenishment program to
417aAI*               to display only one overflow location at a
417aAI*               time. (Y/N)
 00nAI*    OPCQTY  -  Check quantity of "To Slot" during replenish/
500nAI*               letdown/transfer. (Y/N)
413bAI*
413bAI* Data structure
413bAI*
413bAIOPDTA3      DS
413bAI                                        1   8 OPRPLB
414dAI                                        9   9 OPOQRP
416hAI                                       10  10 OPRPEX
416hAI                                       11  11 OPRPFI
417aAI                                       12  12 OPLMTS
500nAI                                       13  13 OPCQTY
414dAI                                      117 117 OPCEND
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
413 AI              'FRMTIT'              C         @FMTIT
413eAI              'ADJTRAN  '           C         @ADJTR
413eAI              'ADJTSKDET'           C         @ADJTD
413EAI              'ADDSTDTRN'           C         @ADDTR
500eAI              'CNTPICKTFR'          C         @CNTPK
417cAI              'UPDLLPTRK'           C         @LLPTR
417gAI              'UPDSLTPOS'           C         @SLTPS
510aAI***           'UPDSLTDTE'           C         @SLTDT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
413EAI                                       81  88 $LTYPE
     I*
     I*   Redefine key
     I*
     I                                       19  20 $LCODE
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I                                       27  41 $LITEM
     I                                       42  53 $LDISP
     I                                       54  58 $LDESG
     I                                       59  60 $LSTAT
     I                                       61  62 $LSDEF
     I                                       63  64 $LACTV
     I*
413eAI                                       22  36 $LITM
     I*
413EAI                                       22  26 $LRTE
413EAI                                       27  35 $LPO
413EAI                                       36  420$LTRN#
415bAI*
415bAI                                       19  23 $LDSG
415bAI                                       24  24 $LTYP
417cAI*
417cAI                                       37  37 $LLOT
417cAI                                       38  38 $LLTRK
417gAI*
417gAI                                       27  29 $LAISL
417gAI                                    P  30  310$LLOC
417gAI                                       32  330$LRLVL
417gAI                                       34  35 $LHAND
417gAI                                    P  36  370$LPOS
417gAI                                       38  49 $LPDSP
417gAI                                       50  61 $LVDSP
417gAI                                       62  62 $LPLLC
417gAI                                    P  63  640$LMXPS
417cAI*
PCKbAI*
PCKbAI                                       27  38 $LDSP2
PCKbAI                                       39  53 $LITM2
PCKbAI                                       54  580$LQTY1
PCKbAI                                       59  610$LQTY2
PCKbAI                                       62  640$LQTY3
PCKdAI                                       65  66 $LSTS
417cAI*----------------------------------------------------------------
417cAI*  LICHIST - License history (Input Data)
417cAI*
417cAI$RPARM      DS
417cAI                                        1   30$RWHSE
417cAI                                    P   4   70$RLTRN
417cAI                                        8   9 $RACFL
417cAI                                    P  10  130$RTRN#
417cAI                                    P  14  170$RLBL#
417cAI                                       18  32 $RLCNS
417cAI                                       33  47 $RFMLC
417cAI                                       48  62 $RORLC
417cAI                                    P  63  660$RLQY1
417cAI                                    P  67  700$RLQY2
417cAI                                    P  71  740$RLQY3
417cAI                                    P  75  780$RAQY1
417cAI                                    P  79  820$RAQY2
417cAI                                    P  83  860$RAQY3
417cAI                                       87  87 $RFMCD
417cAI                                       88 102 $RFARA
417cAI                                      103 107 $RFWHD
417cAI                                      108 110 $RFASL
417cAI                                      111 1130$RFLOC
417cAI                                      114 1150$RFLVL
417cAI                                      116 117 $RFHND
417eAI                                    P 118 1190$RFSLP
417cAI                                      120 120 $RTOCD
417cAI                                      121 135 $RTARA
417cAI                                      136 140 $RTWHD
417cAI                                      141 143 $RTASL
417cAI                                      144 1460$RTLOC
417cAI                                      147 1480$RTLVL
417cAI                                      149 150 $RTHND
417eAI                                    P 151 1520$RTSLP
417cAI                                    P 153 1560$RTORD
417cAI                                    P 157 1590$RTSEQ
417cAI                                      160 167 $REXCD
417cAI                                      168 193 $RADTS
417cAI                                    P 194 1960$RAEMP
417cAI                                      197 206 $RAUSR
417cAI                                      207 216 $RAJOB
417cAI                                      217 222 $RAJBN
417cAI                                      223 248 $RCDTS
417cAI                                    P 249 2510$RCEMP
417cAI                                      252 261 $RCUSR
417cAI                                      262 271 $RCJOB
417cAI                                      272 277 $RCJBN
417cAI*
417cAI*----------------------------------------------------------------
417cAI*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
414gAI*----------------------------------------------------------------
414gAI*  API programs
414gAI*
414gAI              'APICVTSLT '          C         @APICS
417cAI*
417cAI*----------------------------------------------------------------
417cAI*  Working fields.
417cAI*
417cAI            DS
417cAI                                        1   4 LOTTRK
417cAI                                        5   8 LICTRK
417cAI                                        9  16 LLPTP1
417cAI                                       17  24 LLPTP2
417cAI                                       25  32 LLPTP3
417cAI                                       33  47 SAVLLP
417cAI                                       48  62 NEWLLP
417cAI              'Scan lic nbr:     '  C         LLP01
500kAI              'Escn num lic:     '  C         LLP01S
417cAI              'Scan lot nbr:     '  C         LLP02
500kAI              'Escn num lot:     '  C         LLP02S
417cAI              'Scan new lic#:    '  C         LLP03
500kAI              'Escn #lic nva:    '  C         LLP03S
417cAI              'Scan new lot#:    '  C         LLP04
500kAI              'Escn #lot nva:    '  C         LLP04S
417cAI              'Original lic#:    '  C         LLP05
500kAI              '#lic original:    '  C         LLP05S
417cAI              'Original lot#:    '  C         LLP06
500kAI              '#lot original:    '  C         LLP06S
417cAI*
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERQTY
     I                                       11  25 ERITEM
     I                                       26  37 ERFROM
     I                                       38  49 ERTO
     I*
     I                                        1  12 ERDISP
414cAI*
414cAI                                    P   1   30ERNPCK
414cAI                                    P   4   60ERAPCK
415bAI*
415bAI                                        1   5 ERITDP
415bAI                                        6  17 ERSLDS
415bAI                                       18  22 ERSLDP
415bAI                                       23  23 ERITSC
415bAI                                       24  24 ERSLSC
     I*
416eAI                                        1  60 ERDMSG
416eAI                                       61  70 ERDRTN
416eAI                                       71  80 ERDCMD
416eAI                                       81  90 ERDSUB
417cAI*
417cAI                                        1  15 ERLLP1
417cAI                                       16  30 ERLLP2
416pAI*----------------------------------------------------------------
416pAI*  Working variables.
416pAI*
416pAI I            '*NO '                    1   4 BKDWN1
416pAI I            '*NO '                    5   8 BKDWN2
416pAI I            0                         9  170AVLQTY
416pAI I            0                        18  260CHKQTY
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
500kAI              'PIRMSGFSP '          C         #MSGSP
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  PIRTRAN record layout for use as parameters
     I*
     IPTPARM    E DSPIRTRAN
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new batch.
     C*              *EDIT    - Edit batch.
     C*              *DELETE  - Delete batch.
     C*              *PRINT   - Print batch edit listing.
     C*              *POST    - Post batch.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains key for everything by *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new batch number for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      *IN92
     C                     MOVE *OFF      *IN93
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
416aAC           NXTSCR    CASEQ'03 '     SC3
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN61SP               50
500kACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'EN'
415gACSR                   EXFMTSCREEN61               50
500kDC**                   OTHER
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN1SP                50
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'EN'
     CSR                   EXFMTSCREEN1                50
415gACSR                   ENDSL
     CSR                   END
     C*
     CSR         NXTSCR    IFEQ '02 '
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN62SP               50
500kACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'EN'
415gACSR                   EXFMTSCREEN62               50
500kAC**                   OTHER
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN2SP                50
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'EN'
     CSR                   EXFMTSCREEN2                50
415gACSR                   ENDSL
     CSR                   END
416aAC*
416aACSR         NXTSCR    IFEQ '03 '
416aACSR                   SELEC
416aACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN63SP               50
500kACSR         #LLINE    WHEQ '16'
500kACSR         E$LNG     ANDEQ'EN'
416aACSR                   EXFMTSCREEN63               50
500kAC**                   OTHER
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   EXFMTSCRN3SP                50
500kACSR         #LLINE    WHNE '16'
500kACSR         E$LNG     ANDEQ'EN'
416aACSR                   EXFMTSCREEN3                50
416aACSR                   ENDSL
416aACSR                   ENDIF
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
417cACSR                   MOVE *OFF      CANCEL  1
     CSR                   MOVE *OFF      CMDTKN  1
414gACSR                   MOVE *OFF      REDSPL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
     CSR                   MOVE *ON       *IN91
416mACSR                   MOVE *OFF      TOSLUP
417fDC*R                   MOVE 'N'       W3ZERO
417fMCSR                   MOVE ' '       W3ZERO
416aACSR                   MOVE '*NO '    VFYSLT
416gACSR                   MOVE '*NO '    ABORT
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR                   END
     CSR                   MOVE *OFF      OVRRID  1
417cAC*
417cAC*    Retrieve Lot/license plate tracking info.
417cACSR                   MOVE *BLANKS   $LCMD
417cACSR                   MOVE #PROG     $LPRG
417cACSR                   MOVE $PWHSE    $LWHSE
417cACSR                   MOVE SLITEM    $LITM
417cACSR                   CALL 'GETLLP'
417cACSR                   PARM           $LPARM
417cAC*
417cACSR                   SELEC
417cAC*    Lot/license plate tracking values found.
417cACSR         $LRTN     WHEQ '*OK     '
417cACSR         $LLOT     IFEQ 'Y'
417cACSR                   MOVE '*YES'    LOTTRK
417cACSR                   ELSE
417cACSR                   MOVE '*NO '    LOTTRK
417cACSR                   ENDIF
417cACSR         $LLTRK    IFEQ 'Y'
417cACSR                   MOVE '*YES'    LICTRK
417cACSR                   ELSE
417cACSR                   MOVE '*NO '    LICTRK
417cACSR                   ENDIF
417cACSR                   OTHER
417cACSR                   MOVE '*NO '    LOTTRK
417cACSR                   MOVE '*NO '    LICTRK
417cACSR                   ENDSL
417cAC*
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
416iAC*
416iAC*    Only reset flag when user has NOT been prompted
416iAC*    to verify From slot.
416iACSR         VFYSLT    IFNE '*YES'
415hACSR                   MOVE *OFF      TOSLUP
416iACSR                   ENDIF
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT2
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
415cACSR                   MOVE '*NO '    NEWTRN
415cACSR                   MOVE *ZEROS    SVTRN1
415cACSR                   MOVE *ZEROS    SVCUB1
415cACSR                   MOVE *ZEROS    SVWGT1
415cACSR                   MOVE *ZEROS    SVTRN2
415cACSR                   MOVE *ZEROS    SVCUB2
415cACSR                   MOVE *ZEROS    SVWGT2
415cACSR                   MOVE *ZEROS    SVTRN3
415cACSR                   MOVE *ZEROS    SVCUB3
415cACSR                   MOVE *ZEROS    SVWGT3
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZGET2
     CSR                   EXSR ZZFIL2
     CSR                   END
     CSR                   MOVE *OFF      OVRRID  1
     CSR         END02I    ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  Screen 03 initialization
416aAC*
416aACSR         SCR03I    BEGSR
416aACSR                   MOVE '03 '     NXTSCR  3
416mACSR                   MOVE *OFF      TOSLUP
416aAC*
416aAC*  Get field defaults if this is an add.
416aAC*
416aACSR         $PCMD     IFEQ '*ADD    '
416aACSR                   EXSR ZZDFT3
416aACSR                   ELSE
416aAC*
416aAC*  Otherwise get existing record(s).
416aAC*
416aACSR                   EXSR ZZGET3
416aACSR                   EXSR ZZFIL3
416aACSR                   ENDIF
416aAC*
416aACSR         END03I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   EXSR ZZCMD1
413 ACSR         CMDTKN    IFEQ *ON
413 ACSR                   WRITECLRBTM
413 ACSR                   ENDIF
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
417cACSR         CANCEL    CABEQ*ON       ENDSC1
413EMCSR                   EXSR ZZUPD1
413eMCSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   END
     C*
     C*  Everything went fine.
     C*
413eAC*
413eAC*   Get current task.
413eAC*
413eACSR                   EXSR ZZTASK
413eACSR                   SELEC
413eACSR         CURTYP    WHEQ 'D'
413eAC*   End current task.
413eACSR                   EXSR ZZEND
413eACSR         CURTYP    WHEQ 'I'
413eAC*  End current task and any previous open tasks.
413eACSR                   MOVE *ON       FOUND   1
413eACSR         FOUND     DOWEQ*ON
413eACSR                   MOVE *BLANKS   CURTSK
413eACSR                   MOVE *BLANKS   CURTYP
413eACSR                   MOVE *OFF      CURENT
413eACSR                   EXSR ZZTASK
413eACSR         FOUND     IFEQ *OFF
413eACSR                   LEAVE
413eACSR                   ENDIF
413eACSR                   EXSR ZZEND
413eACSR                   ENDDO
413eACSR                   ENDSL
413eAC*
413eACSR                   EXSR ZZSTRT
413eACSR                   MOVEL'*OK     '$RTNCD  8
416gACSR                   MOVE '*YES'    ABORT
416aAC*
416aAC*    Check if slot can be verified after transfer complete.
416aACSR                   EXSR ZZVFY
416aAC*
416aACSR                   SELEC
416aAC*    Slot can be verified.
416aACSR         VFYSLT    WHEQ '*YES'
413eACSR                   EXSR SCR03I
416aAC*
416aAC*    Slot can't be verified.
416aACSR         VFYSLT    WHEQ '*NO '
413eACSR                   EXSR SCR02I
413eAC*
416aACSR                   ENDSL
413eAC*
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
416aAC*
416aAC*    Verify slot screen previously displayed, return there.
416aACSR         VFYSLT    IFEQ '*YES'
416aACSR                   MOVE '03 '     NXTSCR
416aACSR                   ELSE
413EMCSR                   MOVE '01 '     NXTSCR
416aACSR                   ENDIF
416aAC*
416iAC*    Only run Abort when user has NOT been prompted
416iAC*    to verify From slot.
416iACSR         VFYSLT    IFNE '*YES'
413BACSR                   EXSR ZZABRT
416gACSR                   MOVE '*NO '    ABORT
416iACSR                   ENDIF
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR02I
     CSR                   END
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
416aAC*
416aAC*    Verify slot screen previously displayed, return there.
416aACSR         VFYSLT    IFEQ '*YES'
416aACSR                   MOVE '03 '     NXTSCR
416aACSR                   ELSE
413EMCSR                   MOVE '01 '     NXTSCR
416aACSR                   ENDIF
416aAC*
416iAC*    Only run Abort when user has NOT been prompted
416iAC*    to verify From slot.
416iACSR         VFYSLT    IFNE '*YES'
413BACSR                   EXSR ZZABRT
416gACSR                   MOVE '*NO '    ABORT
416iACSR                   ENDIF
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSC2
414gACSR         REDSPL    CABEQ*ON       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ*ON       ENDSC2
     CSR                   END
     C*
     C*  Create and close Label records.
     C*
     CSR                   EXSR ZZCRTL
417cAC*
417cAC*    Lot/license plate tracking item with partial transfer.
417cAC*    Prompt for new identifier for transferred product.
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR         LLPTP3    ANDEQ'*UPDTFRP'
417cACSR         LOTTRK    OREQ '*YES'
417cACSR         LLPTP3    ANDEQ'*UPDTFRP'
417cACSR                   MOVE '*GETNEW 'LLPTP1
417cACSR                   EXSR ZZLLP
417cACSR                   MOVE WWLLP#    NEWLLP
417cACSR                   ENDSL
     C*
     C*  Close Transaction record and start IDLE task.
     C*
415eACSR                   MOVE *OFF      ERROR
415cACSR         SVTRN1    IFNE 0
415cACSR                   Z-ADDSVTRN1    $LTRN#
415cMCSR                   Z-ADDW1QT01    WKPCS
415cMCSR                   Z-ADDSVWGT1    WKSWGT
415cMCSR                   Z-ADDSVCUB1    WKCUBE
     CSR                   EXSR ZZCLSE
415eAC*    Error during close, re-display current screen.
415eACSR         ERROR     CABEQ*ON       ENDSC2
417cAC*
417cAC*    Lot/license plate tracking item.
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR         LOTTRK    OREQ '*YES'
417cACSR                   EXSR ZZLLP3
417cACSR                   SELEC
417cACSR         LLPTP3    WHEQ '*UPDTFRP'
417cACSR                   MOVE '*CLSTFRP'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRP'LLPTP3
417cAC*
417cACSR         LLPTP3    WHEQ '*UPDTFRT'
417cACSR                   MOVE '*CLSTFRT'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRT'LLPTP3
417cAC*
417cACSR                   ENDSL
417cAC*
417cACSR                   ENDSL
415cACSR                   ENDIF
415cAC*
415cAC*    Close breakdown 1 transfer transaction.
415cACSR         SVTRN2    IFNE 0
415cACSR                   Z-ADDSVTRN2    $LTRN#
415cMCSR                   Z-ADDW1QT02    WKPCS
415cMCSR                   Z-ADDSVWGT2    WKSWGT
415cMCSR                   Z-ADDSVCUB2    WKCUBE
415cACSR                   EXSR ZZCLSE
415eAC*    Error during close, re-display current screen.
415eACSR         ERROR     CABEQ*ON       ENDSC2
417cAC*
417cAC*    Lot/license plate tracking item.
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR         LOTTRK    OREQ '*YES'
417cACSR                   EXSR ZZLLP3
417cACSR                   SELEC
417cACSR         LLPTP3    WHEQ '*UPDTFRP'
417cACSR                   MOVE '*CLSTFRP'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRP'LLPTP3
417cAC*
417cACSR         LLPTP3    WHEQ '*UPDTFRT'
417cACSR                   MOVE '*CLSTFRT'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRT'LLPTP3
417cAC*
417cACSR                   ENDSL
417cAC*
417cACSR                   ENDSL
415cACSR                   ENDIF
415cAC*
415cAC*    Close breakdown 2 transfer transaction.
415cACSR         SVTRN3    IFNE 0
415cACSR                   Z-ADDSVTRN3    $LTRN#
415cMCSR                   Z-ADDW1QT03    WKPCS
415cMCSR                   Z-ADDSVWGT3    WKSWGT
415cMCSR                   Z-ADDSVCUB3    WKCUBE
415cACSR                   EXSR ZZCLSE
415eAC*    Error during close, re-display current screen.
415eACSR         ERROR     CABEQ*ON       ENDSC2
417cAC*
417cAC*    Lot/license plate tracking item.
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR         LOTTRK    OREQ '*YES'
417cACSR                   EXSR ZZLLP3
417cACSR                   SELEC
417cACSR         LLPTP3    WHEQ '*UPDTFRP'
417cACSR                   MOVE '*CLSTFRP'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRP'LLPTP3
417cAC*
417cACSR         LLPTP3    WHEQ '*UPDTFRT'
417cACSR                   MOVE '*CLSTFRT'LLPTP3
417cACSR                   EXSR ZZLLP3
417cACSR                   MOVE '*UPDTFRT'LLPTP3
417cAC*
417cACSR                   ENDSL
417cAC*
417cACSR                   ENDSL
415cACSR                   ENDIF
416aAC*
416aAC*    User chose to verify slot.
416aACSR                   SELEC
416aACSR         VFYSLT    WHEQ '*YES'
416aACSR         W3ZERO    ANDEQ'Y'
416aACSR                   EXSR ZZZERO
416aAC*
416aACSR                   ENDSL
500h C*
500h C*  Get option to check TO slot.
500hACSR         OPCQTY    IFEQ 'Y'
500h C*  Call program to verify slot quantity.
500hACSR                   MOVE W2DISP    $PDISP
500hACSR                   MOVE W1WHDP    $PWHDP
500h CSR                   Z-ADD$PWHSE    WHSE    30
500hACSR                   CALL 'SL635'
500hACSR                   PARM           WHSE
500hACSR                   PARM           $PWHDP
500hACSR                   PARM           $PDISP
500hACSR                   ENDIF
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC2    ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  SC3  -  Screen 3
416aAC*
416aACSR         SC3       BEGSR
416aAC*
416aAC*  Test for F3 - Exit
416aAC*
416aACSR         *INKC     IFEQ *ON
416aACSR                   MOVE '01 '     NXTSCR
416gAC*    Abort transaction for user.
416gACSR         ABORT     IFEQ '*YES'
416gACSR                   EXSR ZZABRT
416gACSR                   ENDIF
416aACSR                   MOVE '*EXIT   '$PRTN
416aACSR                   GOTO ENDSC3
416aACSR                   ENDIF
416aAC*
416aAC*  Test for F5 - Refresh
416aAC*
416aACSR         *INKE     IFEQ *ON
416aACSR         $PCMD     IFNE '*VIEW   '
416aACSR                   EXSR SCR03I
416aACSR                   ENDIF
416aACSR                   GOTO ENDSC3
416aACSR                   ENDIF
416aAC*
416aAC*  Test for F12 - Previous
416aAC*
416aACSR         *INKL     IFEQ *ON
416aMCSR                   MOVE '01 '     NXTSCR
416gAC*    Abort transaction for user.
416gACSR         ABORT     IFEQ '*YES'
416gACSR                   EXSR ZZABRT
416gACSR                   ENDIF
416aACSR                   MOVE '*CANCEL '$PRTN
416aACSR                   GOTO ENDSC3
416aACSR                   ENDIF
416aAC*
416aAC*  Test for other command keys BEFORE verification and update.
416aAC*
416aACSR                   EXSR ZZCMD3
416aACSR         CMDTKN    CABEQ*ON       ENDSC3
416aAC*
416aAC*  Some other key pressed.
416aAC*
416aAC*     Check input and write/update record.
416aAC*
416aACSR         $PCMD     IFEQ '*ADD    '
416aACSR         $PCMD     OREQ '*CHANGE '
416aACSR                   EXSR ZZCHK3
416aACSR         ERROR     CABEQ*ON       ENDSC3
416aACSR                   EXSR ZZUPD3
416aACSR         ERROR     CABEQ*ON       ENDSC3
416aACSR                   ENDIF
416aAC*
416aACSR         ENDSC3    ENDSR
416aAC*
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
500 AC*
500 AC* Get client id.
500 AC*
500 AC                     CALL @GETCL
500 AC                     PARM           CLIENT 10
500 AC*
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
414cAC*---------------------------------------------------------------
414cAC*  Retrieve number of pick slots for item and accumulate
414cAC*  number of pick slots assigned to item.
414cAC*
414cACSR         CHKPCK    BEGSR
414cACSR         ITKEY     CHAINITEMMSC              79
414cACSR         *IN79     IFEQ *ON
414cACSR                   Z-ADD1         IMNRPK
414cACSR                   ENDIF
414cAC*
414cAC*    Accumulate number of pick slots assigned to item.
414cAC*
500eDC*R                   MOVE 'A '      K3STAT
500eDC*R                   MOVE 'Y'       K3PICK
500eDC*R         KEYS3     SETLLSLOT3
500eDC*R                   MOVE *ZEROS    NBRPCK
500eDC*R                   MOVE *OFF      EOF     1
500eDC*R         EOF       DOWEQ*OFF
500eDC*R         KEYS3     READESLOT3                    79
500eDC*R                   MOVE *IN79     EOF
500eDC*R         *IN79     IFEQ *OFF
500eDC*R                   ADD  1         NBRPCK
500eDC*R                   ENDIF
500eDC*R                   ENDDO
     C*
500eACSR                   CALL @CNTPK
500eACSR                   PARM $PWHSE    $VWHSE  30
500eACSR                   PARM ITITEM    $VITEM 15
500eACSR                   PARM ITWHDP    $VWHDP  5
500eACSR                   PARM SLDISP    $VTO   12
500eACSR                   PARM $PDISP    $VFROM 12
500eACSR                   PARM           $VCNT   30
500eACSR                   PARM           $VRTRN  8
500eACSR                   PARM           $VMESG 60
     C*
500eACSR         $VRTRN    IFEQ '*OK'
500eACSR                   Z-ADD$VCNT     NBRPCK
500eACSR                   ENDIF
     C*
414cACSR                   ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   WRITEM16CTL
415gACSR                   OTHER
     CSR                   WRITEMSGCTL
415gACSR                   ENDSL
     CSR                   Z-ADD*ZERO     MSGK    40
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   WRITEM16CLR
415gACSR                   OTHER
     CSR                   WRITEMSGCLR
415gACSR                   ENDSL
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
417cAC*
417cAC*  Subroutine ZMxxxx  Control Window message subfile
417cAC*
417cAC*    ZMCMSW  Clear Window message record subfile
417cAC*
417cACSR         ZMCMSW    BEGSR
417cACSR                   MOVE *OFF      *IN97
417cACSR                   WRITEMSGCTLW
417cACSR                   Z-ADD*ZERO     MSGK    40
417cACSR                   WRITEMSGCLRW
417cACSR                   MOVE '*CLEAR ' #MSGID  7
417cACSR                   MOVE '*NULL  ' #MSGTP  7
417cACSR                   EXSR ZMPMSW
417cACSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   WRITEM16CTL
415gACSR                   OTHER
     CSR                   WRITEMSGCTL
415gACSR                   ENDSL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
417cAC*
417cAC*    ZMDMSW  Display Window message record subfile
417cAC*
417cACSR         ZMDMSW    BEGSR
417cACSR                   MOVE *ON       *IN97
417cACSR         MSGK      IFGT 0
417cACSR                   WRITEMSGCTLW
417cACSR                   Z-ADD*ZERO     MSGK
417cACSR                   ENDIF
417cACSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
417cAC*
417cAC*    ZMIMSW  Initialization necessary for Window message subfile
417cAC*
417cACSR         ZMIMSW    BEGSR
417cACSR                   MOVE #PROG     #PGMQ  10
417cACSR                   EXSR ZMCMSW
417cACSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVE #MSGSP    $MSGF
500kACSR                   OTHER
     CSR                   MOVE #MSGF     $MSGF  10
500kACSR                   ENDSL
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   WRITEM16REC
415gACSR                   OTHER
     CSR                   WRITEMSGREC
415gACSR                   ENDSL
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
417cAC*
417cAC*    ZMPMSW  Add message record to Window subfile
417cAC*
417cACSR         ZMPMSW    BEGSR
417cACSR         $MSGF     IFEQ *BLANKS
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVE #MSGSP    $MSGF
500kACSR                   OTHER
417cACSR                   MOVE #MSGF     $MSGF  10
500kACSR                   ENDSL
417cACSR                   END
417cACSR                   CALL 'PUTMSG'
417cACSR                   PARM           $MSGF
417cACSR                   PARM           #MSGID
417cACSR                   PARM           #MSGTP
417cACSR                   PARM           #MSGDT
417cACSR                   PARM           #PGMQ
417cACSR                   PARM           #MSGK
417cACSR         #MSGID    IFNE '*CLEAR '
417cACSR                   ADD  1         MSGK
417cACSR                   WRITEMSGRECW
417cACSR                   ENDIF
417cACSR                   MOVE *BLANKS   #MSGDT
417cACSR                   MOVE *BLANKS   $MSGF
417cACSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   WRITEM16REC
415gACSR                   OTHER
     CSR                   WRITEMSGREC
415gACSR                   ENDSL
     CSR                   ENDSR
417cAC*
417cAC*    ZMQMSW  Add message record to Window subfile from program queue
417cAC*
417cACSR         ZMQMSW    BEGSR
417cACSR                   ADD  1         MSGK
417cACSR                   WRITEMSGRECW
417cAC*
417cACSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVE #MSGSP    $MSGF
500kACSR                   OTHER
     CSR                   MOVE #MSGF     $MSGF  10
500kACSR                   ENDSL
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
416eAC*   DRI0001  Interface error.
     C*
     CSR         ZM0001    BEGSR
     CSR                   MOVELDRIMSG    TEMPA2  2
     CSR         TEMPA2    IFEQ 'H:'
     CSR                   MOVE 'DRI0002' #MSGID
     CSR                   MOVE DRIMSG    A58    58
     CSR                   MOVELA58       DRIMSG    P
     CSR                   ELSE
     CSR                   MOVE 'DRI0001' #MSGID
     CSR                   ENDIF
     CSR                   MOVE DRIMSG    ERDMSG
     CSR                   MOVE DRIRTN    ERDRTN
     CSR                   MOVE DRICMD    ERDCMD
     CSR                   MOVE DRISUB    ERDSUB
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
415bAC*----------------------------------------------------------------
415bAC*    IT27004  Slot designation not same as item.
415bAC*
415bACSR         ZM7004    BEGSR
415bACSR                   MOVE 'IT27004' #MSGID
415bACSR                   MOVE '*DIAG  ' #MSGTP
415bACSR                   MOVEAERRMSG    $MD,1
415bACSR                   EXSR ZMPMSG
415bACSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0009  Number can not be negative.
     C*
     CSR         ZM0009    BEGSR
     CSR                   MOVE 'PIR0009' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC      ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0201  Code must be entered for create.
     C*
     CSR         ZM0201    BEGSR
     CSR                   MOVE 'PIR0201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVEADESCSP    ERRMSG
500kACSR                   OTHER
     CSR                   MOVEADESC      ERRMSG
500kACSR                   ENDSL
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0202  Code already exists.
     C*
     CSR         ZM0202    BEGSR
     CSR                   MOVE 'PIR0202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVEADESCSP    ERRMSG
500kACSR                   OTHER
     CSR                   MOVEADESC      ERRMSG
500kACSR                   ENDSL
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0203  Field cna't be blank.
     C*
     CSR         ZM0203    BEGSR
     CSR                   MOVE 'PIR0203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
416aAC*----------------------------------------------------------------
416aAC*   PIR1005  Value must be 'Y' or 'N'
416aAC*
416aACSR         ZM1005    BEGSR
416aACSR                   MOVE 'PIR1005' #MSGID
416aACSR                   MOVE '*DIAG  ' #MSGTP
416aACSR                   MOVEAERRMSG    $MD
416aACSR                   EXSR ZMPMSG
416aACSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Slot record does not exist.
     C*
     CSR         ZM7973    BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Slot record is locked.
     C*
     CSR         ZM7974    BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0110  Quantity must be greater than 0.
     C*
     CSR         ZM0110    BEGSR
     CSR                   MOVE 'PIR0110' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
416j C*     ZM01  No linked record for item.
416j C*
416j CSR         ZM01      BEGSR
416jACSR                   MOVE 'IT12001' #MSGID
416jACSR                   MOVE '*DIAG  ' #MSGTP
416jACSR                   MOVE *BLANKS   $MD
416jACSR                   EXSR ZMPMSG
416jACSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM07  Warning - No record exists in Tie/High def. file.
     C*
     CSR         ZM07      BEGSR
     CSR                   MOVE 'IT13207' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE SLDISP    ERDISP
     CSR                   MOVE SLITEM    ERITEM
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT12216  Quantity can not be negative when replacing.
     C*
     CSR         ZM16      BEGSR
     CSR                   MOVE 'IT12216' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT12215  Slot does not contian item.
     C*
     CSR         ZM15      BEGSR
     CSR                   MOVE 'IT12215' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT12217  Warning: Slot quanitiy changed before adjustment.
     C*
     CSR         ZM17      BEGSR
     CSR                   MOVE 'IT12217' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT12273  Adjustment not completed - Record doesn't exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'IT12273' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT12274  Adjustment not completed - Record locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'IT12274' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT15201  Transfer completed successfully.
     C*
     CSR         ZM1521    BEGSR
     CSR                   MOVE 'IT15201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT15202  From and To slot cannot be same.
     C*
     CSR         ZM1522    BEGSR
     CSR                   MOVE 'IT15202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT15203  To slot contains a different item.
     C*
     CSR         ZM1523    BEGSR
     CSR                   MOVE 'IT15203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
412 AC*     IT15204  Virtual slot could not be created.
     C*
     CSR         ZM1524    BEGSR
     CSR                   MOVE 'IT15204' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
416tAC*----------------------------------------------------------------
416tAC*   PIR2007  Invalid slot, slot inactive.
416tAC*
416tACSR         ZM2007    BEGSR
416tACSR                   MOVE 'PIR2007' #MSGID
416tACSR                   MOVE '*DIAG  ' #MSGTP
416tACSR                   MOVE *BLANKS   $MD
416tACSR                   EXSR ZMPMSG
416tACSR                   ENDSR
500bAC*----------------------------------------------------------------
500bAC*   RC20017  Can't scan virtual slot.
500bAC*
500bACSR         ZM2017    BEGSR
500bACSR                   MOVE 'RC20017' #MSGID
500bACSR                   MOVE '*DIAG  ' #MSGTP
500bACSR                   MOVE *BLANKS   $MD
500bACSR                   EXSR ZMPMSG
500bACSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT25201  Date sensitive item exists in to slot with dif dte
     C*
     CSR         ZM2521    BEGSR
     CSR                   MOVE 'IT25201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     IT25202  WARNING:
     C*              Date Sensitive item exists in to slot with dif dte
     C*
     CSR         ZM2522    BEGSR
     CSR                   MOVE 'IT25202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
413eAC*     IT25203  Slot and Item department do not match.
413eAC*
413eACSR         ZM2523    BEGSR
413eACSR                   MOVE 'IT25203' #MSGID
413eACSR                   MOVE '*DIAG  ' #MSGTP
413eACSR                   MOVE *BLANKS   $MD
413eACSR                   EXSR ZMPMSG
413eACSR                   ENDSR
     C*----------------------------------------------------------------
413eAC*     IT25204  Qty entered cannot be > available qty in FROM slot
413eAC*
413eACSR         ZM5204    BEGSR
413eACSR                   MOVE 'IT25204' #MSGID
413eACSR                   MOVE '*DIAG  ' #MSGTP
413eACSR                   MOVE *BLANKS   $MD
413eACSR                   EXSR ZMPMSG
413eACSR                   ENDSR
     C*----------------------------------------------------------------
413eAC*     IT25205  Item number changed.
413eAC*
413eACSR         ZM5205    BEGSR
413eACSR                   MOVE 'IT25205' #MSGID
413eACSR                   MOVE '*DIAG  ' #MSGTP
413eACSR                   MOVE *BLANKS   $MD
413eACSR                   EXSR ZMPMSG
413eACSR                   ENDSR
     C*----------------------------------------------------------------
414cAC*     IT25206  # of pick slots exceeds # allowed.
414cAC*
414cACSR         ZM5206    BEGSR
414cACSR                   MOVE 'IT25206' #MSGID
414cACSR                   MOVE '*DIAG  ' #MSGTP
414cACSR                   Z-ADDNBRPCK    ERNPCK
414cACSR                   Z-ADDIMNRPK    ERAPCK
414cACSR                   MOVEAERRMSG    $MD,1
414cACSR                   EXSR ZMPMSG
414cACSR                   ENDSR
     C*----------------------------------------------------------------
414dAC*     IT25207  Slot and Item section do not match.
414dAC*
414dACSR         ZM5207    BEGSR
414dACSR                   MOVE 'IT25207' #MSGID
414dACSR                   MOVE '*DIAG  ' #MSGTP
414dACSR                   MOVE *BLANKS   $MD
414dACSR                   EXSR ZMPMSG
414dACSR                   ENDSR
416s C*----------------------------------------------------------------
416sAC*     IT25208  Invalid item type, use base item.
416sAC*
416sACSR         ZM5208    BEGSR
416sACSR                   MOVE 'IT25208' #MSGID
416sACSR                   MOVE '*DIAG  ' #MSGTP
416sACSR                   MOVE *BLANKS   $MD
416sACSR                   EXSR ZMPMSG
416sACSR                   ENDSR
416s C*----------------------------------------------------------------
416sAC*     IT25209  Invalid quantity, not multiple of base/brk qty.
416sAC*
416sACSR         ZM5209    BEGSR
416sACSR                   MOVE 'IT25209' #MSGID
416sACSR                   MOVE '*DIAG  ' #MSGTP
416sACSR                   MOVE *BLANKS   $MD
416sACSR                   EXSR ZMPMSG
416sACSR                   ENDSR
417cAC*----------------------------------------------------------------
417cAC*     IT29007  Wrong license plate scanned.
417cAC*
417cACSR         ZM9007    BEGSR
417cACSR                   MOVE 'IT29007' #MSGID
417cACSR                   MOVE '*DIAG  ' #MSGTP
416jACSR                   MOVEAERRMSG    $MD,1
417cACSR                   EXSR ZMPMSW
417cACSR                   ENDSR
417cAC*----------------------------------------------------------------
417cAC*     IT29008  Lic#/Lot# found. Try again.
417cAC*
417cACSR         ZM9008    BEGSR
417cACSR                   MOVE 'IT29008' #MSGID
417cACSR                   MOVE '*DIAG  ' #MSGTP
416jACSR                   MOVEAERRMSG    $MD,1
417cACSR                   EXSR ZMPMSW
417cACSR                   ENDSR
416jAC*----------------------------------------------------------------
416jAC*   IT35201   No brk qty defined for base item.
416jAC*
416jACSR         ZM3521    BEGSR
416jACSR                   MOVE 'IT35201' #MSGID
416jACSR                   MOVE '*DIAG  ' #MSGTP
416jACSR                   MOVEAERRMSG    $MD,1
416jACSR                   EXSR ZMPMSG
416jACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZABRT   Abort a transaction
     C*
413eACSR         ZZABRT    BEGSR
     CSR                   MOVE PTTASK    @PTASK
     CSR                   Z-ADD0         @PCUBE
     CSR                   Z-ADD0         @PSWGT
     CSR                   CALL @ADJTR
     CSR                   PARM '*ABORT  '@PCMD   8
     CSR                   PARM           #JOB
     CSR                   PARM PTTRN#    @PTRN#  70
     CSR                   PARM           @PTASK  6
     CSR                   PARM $PWHSE    @PWHSE  30
     CSR                   PARM W1WHDP    @PWHDP  5
     CSR                   PARM W1STYP    @PSTYP  1
     CSR                   PARM           @PCUBE  93
     CSR                   PARM           @PSWGT  92
     CSR                   PARM 0         @PPCS   50
     CSR                   PARM 0         @PAISL  50
     CSR                   PARM 0         @PQTY1  50
     CSR                   PARM 0         @PQTY2  50
     CSR                   PARM 0         @PQTY3  50
     CSR                   PARM '0'       @PRTE   5
     CSR                   PARM ' '       @PPO    9
     CSR                   PARM ' '       @PGRP1  1
     CSR                   PARM 'T'       @PGRP2  1
     CSR                   PARM ' '       @PRTN   8
     CSR                   PARM ' '       @PMSG   4
     C*  Update slot qty (Decrease TFR qty)
     CSR         FMKEY     CHAINRECORD               79
     CSR                   SUB  ULSTK1    SLTFR1
     CSR                   SUB  ULSTK2    SLTFR2
     CSR                   SUB  ULSTK3    SLTFR3
     CSR                   UPDATRECORD
416eAC*
416eACSR                   EXSR ZZZISF
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS2
416eACSR                   Z-ADD$PWHSE    S$WHSE
416eACSR                   MOVE $PWHDP    S$WHDP
416eACSR                   MOVE $PDISP    S$DISP
416eACSR                   MOVE SVITEM    A$ITEM
416eACSR                   Z-SUBULSTK1    A$QTY1
416eACSR                   Z-SUBULSTK2    A$QTY2
416eACSR                   Z-SUBULSTK3    A$QTY3
416eACSR                   MOVEL'%TFROUT' DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
415eAC*
415eAC*  Update TO slot qty (Decrease RCV qty)
415hACSR         TOSLUP    IFEQ *ON
415eACSR         TOKEY     CHAINRECORD               79
415eACSR         *IN79     IFEQ *OFF
415eACSR                   SUB  ULSTK1    SLRCV1
415eACSR                   SUB  ULSTK2    SLRCV2
415eACSR                   SUB  ULSTK3    SLRCV3
415eACSR                   UPDATRECORD
415eACSR                   ENDIF
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS2
416eACSR                   Z-ADD$PWHSE    S$WHSE
416eACSR                   MOVE ITWHDP    S$WHDP
416eACSR                   MOVE W2DISP    S$DISP
416eACSR                   MOVE ITITEM    A$ITEM
416eACSR                   Z-SUBULSTK1    A$QTY1
416eACSR                   Z-SUBULSTK2    A$QTY2
416eACSR                   Z-SUBULSTK3    A$QTY3
416eACSR                   MOVEL'%TFRIN'  DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
415hACSR                   ENDIF
     C*    Start an 'IDLE' task.
     CSR                   EXSR ZZIDLE
413eACSR         ENDABR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify item number if changed.
     C*
413eACSR                   MOVE '*VERIFY '$LCMD
413eACSR                   Z-ADD$PWHSE    $LWHSE
413eACSR                   MOVE W1ITM     $LITM
413eACSR                   CALL 'IT900'
413eACSR                   PARM           $LPARM
413eACSR         $LRTN     IFEQ '*ERROR  '
413eACSR                   MOVE *ON       ERROR
413eACSR                   MOVE *ON       *IN28
413eACSR                   MOVE *ON       *IN08
413eACSR                   MOVEL$LERM     ERRMSG
413eACSR                   EXSR ZM0105
416j CSR                   GOTO ENDCK1
413eACSR                   ELSE
413eACSR         $LRTN     IFEQ '*PGMQ   '
413eACSR                   MOVE *ON       ERROR
413eACSR                   MOVE *ON       *IN28
413eACSR                   MOVE *ON       *IN08
413eACSR                   MOVE $LMSG     #MSGK
413eACSR                   EXSR ZMQMSG
416j CSR                   GOTO ENDCK1
413eACSR                   ENDIF
413eACSR                   ENDIF
     C*
     C*   Item changed, display warning.
     C*
     CSR         OVRRID    IFEQ *OFF
     CSR         W1ITM     IFNE SLITEM
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       WARN
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   EXSR ZM5205
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
     CSR                   ENDIF
416s C*   Do not need to check for link if FROM and TO items are
416s C*   the same type.
416sACSR         W1ITM     IFNE SLITEM
416s CSR         KEYIT1    CHAINPIRITEM              79
416s CSR         *IN79     IFEQ *OFF
416s C                     MOVE ITTYPE    TOTYPE  1
416sAC                     Z-ADDITUMQ2    TOUMQ2
500jAC*   Clear saved From Slot expiration date if To Item
500jAC*   not date sensitive.
500jAC           ITFLGD    IFNE 'Y'
500jAC                     MOVE *ZEROS    SVEXPD
500jAC                     ENDIF
500jAC*
416s CSR         SVTYPE    CABEQITTYPE    JMPTYP
416s C*   If FROM or TO item are type A or C, display error.
416s CSR         SVTYPE    IFEQ 'A'
416s CSR         SVTYPE    OREQ 'C'
416s CSR         ITTYPE    OREQ 'A'
416s CSR         ITTYPE    OREQ 'C'
416s CSR                   MOVE *ON       ERROR
416s CSR                   MOVE *ON       *IN22
416s CSR                   MOVE *ON       *IN02
416s CSR                   MOVE *BLANKS   ERRMSG
416s CSR                   EXSR ZM5208
416s CSR                   GOTO ENDCK1
416s CSR                   ENDIF
416s CSR                   ENDIF
416s CSR                   ENDIF
     C*
416j C*   Changed item is type B or S, check for link record
416j C*
416pACSR         W1ITM     IFNE SLITEM
416j CSR         KEYIT1    CHAINPIRITEM              79
416j CSR         *IN79     IFEQ *OFF
416j CSR         ITTYPE    IFEQ 'B'
416j CSR         ITTYPE    OREQ 'S'
416j CSR         KEYIT1    CHAINITEMLNK              78
416j CSR         *IN78     IFEQ *ON
416j CSR                   MOVE *ON       ERROR
416j CSR                   MOVE *ON       *IN22
416j CSR                   MOVE *ON       *IN02
416j CSR                   MOVE *BLANKS   ERRMSG
416j CSR                   EXSR ZM01
416j CSR                   GOTO ENDCK1
416j CSR                   ELSE
416j CSR         ILITM2    IFNE SLITEM
416pACSR         SVTYPE    ANDEQ*BLANKS
416pACSR         ILITEM    ORNE SLITEM
416pACSR         SVTYPE    ANDGT*BLANKS
416j CSR                   MOVE *ON       ERROR
416j CSR                   MOVE *ON       *IN22
416j CSR                   MOVE *ON       *IN02
416j CSR                   MOVE *BLANKS   ERRMSG
416j CSR                   EXSR ZM01
416j CSR                   GOTO ENDCK1
416j CSR                   ENDIF
416j CSR                   ENDIF
416j C*
416j C*   Check base for breakdown qty.
416j CSR         KEYIT     CHAINPIRITEM              78
416j CSR         *IN78     IFEQ *OFF
416j CSR         ITUMQ2    ANDLE0
416j CSR                   MOVE *ON       ERROR
416j CSR                   MOVE *ON       *IN22
416j CSR                   MOVE *ON       *IN02
416j CSR                   MOVE *BLANKS   ERRMSG
416j CSR                   MOVELITITEM    ERITEM
416j CSR                   EXSR ZM3521
416j CSR                   ENDIF
416s CSR                   Z-ADDITUMQ2    UMQ2
416j CSR                   ENDIF
416j CSR                   ENDIF
416pACSR                   ENDIF
     C*
416s C*  From item is type B or S,To item is ' ' check for link record
416s C*
416sACSR         W1ITM     IFNE SLITEM
416sACSR         SVTYPE    IFEQ 'B'
416sACSR         SVTYPE    OREQ 'S'
416sACSR         ITTYPE    ANDEQ' '
416s CSR         KEYIT     CHAINITEMLNK              78
416s CSR         *IN78     IFEQ *ON
416s CSR                   MOVE *ON       ERROR
416s CSR                   MOVE *ON       *IN22
416s CSR                   MOVE *ON       *IN02
416s CSR                   MOVE *BLANKS   ERRMSG
416s CSR                   EXSR ZM01
416s CSR                   GOTO ENDCK1
416s CSR                   ELSE
416s C*    CHECK LINKED BASE ITEM IS EQUAL TO 'TO' ITEM.
416s CSR         ILITM2    IFNE W1ITM
416s CSR                   MOVE *ON       ERROR
416s CSR                   MOVE *ON       *IN22
416s CSR                   MOVE *ON       *IN02
416s CSR                   MOVE *BLANKS   ERRMSG
416s CSR                   EXSR ZM01
416s CSR                   GOTO ENDCK1
416s CSR                   ENDIF
416s CSR                   ENDIF
416s C*   Check base (TO ITEM) for breakdown qty.
416s CSR         KEYIT1    CHAINPIRITEM              78
416s CSR         *IN78     IFEQ *OFF
416s CSR         ITUMQ2    IFLE 0
416s CSR                   MOVE *ON       ERROR
416s CSR                   MOVE *ON       *IN22
416s CSR                   MOVE *ON       *IN02
416s CSR                   MOVE *BLANKS   ERRMSG
416s CSR                   MOVELITITEM    ERITEM
416s CSR                   EXSR ZM3521
416s CSR                   GOTO ENDCK1
416s CSR                   ENDIF
416s CSR                   Z-ADDITUMQ2    UMQ2
416s CSR         W1QT01    DIV  ITUMQ2    BRKQ1   50
416s CSR                   MVR            LFTQ1   52
416s CSR         LFTQ1     IFNE 0
416s CSR                   MOVE *ON       ERROR
416s CSR                   MOVE *ON       *IN22
416s CSR                   MOVE *ON       *IN02
416s CSR                   MOVE *BLANKS   ERRMSG
416s CSR                   EXSR ZM5209
416s CSR                   GOTO ENDCK1
416s CSR                   ENDIF
416s CSR                   ENDIF
416s CSR                   ENDIF
416s CSR                   ENDIF
416s C*
     C*
416s CSR         JMPTYP    TAG
     C*
     C*   Verify quantity.
     CSR         USESC     IFEQ 1
     CSR                   Z-ADDW1QT01    W1QTY1
     CSR                   Z-ADDW1QT02    W1QTY2
     CSR                   Z-ADDW1QT03    W1QTY3
     CSR                   Z-ADDW1QT01    $CQTY1
     CSR                   Z-ADDW1QT02    $CQTY2
     CSR                   Z-ADDW1QT03    $CQTY3
     CSR                   ENDIF
     C*
     C*     Convert string to quantities.
     C*
     CSR         USESC     IFEQ 2
     CSR         W2QTY     ANDNE*BLANKS
     CSR                   MOVE '*STR2QTY'$CCMD
     CSR                   MOVE #PROG     $CPRG
     CSR                   MOVE W2QTY     $CQSTR
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $CCMD   8
     CSR                   PARM           $CPRG  10
     CSR                   PARM           $CQTY1  70
     CSR                   PARM           $CQTY2  70
     CSR                   PARM           $CQTY3  70
     CSR                   PARM           $CUM1   2
     CSR                   PARM           $CUM2   2
     CSR                   PARM           $CUM3   2
     CSR                   PARM           $CQSTR 10
     CSR                   PARM           $CUSTR 17
     CSR                   PARM           $CRTN   8
     CSR                   PARM           $CERM
     CSR         $CRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $CMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   Z-ADD$CQTY1    W1QTY1
     CSR                   Z-ADD$CQTY2    W1QTY2
     CSR                   Z-ADD$CQTY3    W1QTY3
     CSR                   ENDIF
     C*
     C*  Verify quantity is greater than zero.
     C*
     CSR         W1QTY1    IFLE 0
     CSR         W1QTY2    ANDLE0
     CSR         W1QTY3    ANDLE0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE *BLANKS   ERRMSG
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVEADESCSP,3  ERRMSG
500kACSR                   OTHER
     CSR                   MOVEADESC,3    ERRMSG
500kACSR                   ENDSL
     CSR                   EXSR ZM0110
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
416pA*
416pA*    Retrieve "From Slot" record in case it changed.
416pACSR         FMKEY     CHAINRECORD              N79
416pA*
416pA*    Calculate current available quantities.
416pACSR                   CALL 'SLOTQTY'
416pACSR                   PARM           SLSTK1
416pACSR                   PARM           SLSTK2
416pACSR                   PARM           SLSTK3
416pAC*
416pACSR                   PARM           SLALC1
416pACSR                   PARM           SLALC2
416pACSR                   PARM           SLALC3
416pAC*
416pACSR                   PARM           SLTFR1
416pACSR                   PARM           SLTFR2
416pACSR                   PARM           SLTFR3
416pAC*
416pACSR                   PARM           SLPCK1
416pACSR                   PARM           SLPCK2
416pACSR                   PARM           SLPCK3
416pAC*
416pACSR                   PARM           SLRCV1
416pACSR                   PARM           SLRCV2
416pACSR                   PARM           SLRCV3
416pAC*
416pACSR                   PARM           STOCK1
416pACSR                   PARM           STOCK2
416pACSR                   PARM           STOCK3
416pAC*
416pACSR                   PARM           AVAIL1
416pACSR                   PARM           AVAIL2
416pACSR                   PARM           AVAIL3
416pA*
416pACSR                   Z-ADDAVAIL1    AVLQTY
416pACSR                   Z-ADDW1QTY1    CHKQTY
416pA*
416pA*    Convert case qty to lowest common denominator.
416pACSR         BKDWN1    IFEQ '*YES'
416pACSR         AVLQTY    MULT ITUMQ2    AVLQTY
416pACSR                   ADD  AVAIL2    AVLQTY
416pACSR         CHKQTY    MULT ITUMQ2    CHKQTY
416pACSR                   ADD  W1QTY2    CHKQTY
416pACSR                   ENDIF
416pA*
416pA*    Convert break down qty 2 to lowest common denominator.
416pACSR         BKDWN2    IFEQ '*YES'
416pACSR         AVLQTY    MULT ITUMQ3    AVLQTY
416pACSR                   ADD  AVAIL3    AVLQTY
416pACSR         CHKQTY    MULT ITUMQ3    CHKQTY
416pACSR                   ADD  W1QTY3    CHKQTY
416pACSR                   ENDIF
416pAA*
     C*
     C*  Verify quantity entered is not more than available in FROM slot.
     C*
416pDC*R         W1QTY1    IFGT SAVQT1
416pACSR         CHKQTY    IFGT AVLQTY
416pDC*R         W1QTY2    ORGT SAVQT2
416pDC*R         W1QTY3    ORGT SAVQT3
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM5204
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
     C*
     C*  If error has occured then skip the rest of the checks.
     C*
     CSR         ERROR     CABEQ*ON       ENDCK1
417cAC*
417cAC*    If lot/license plate tracking item. Capture info.
417cACSR         LICTRK    IFEQ '*YES'
417cACSR         LOTTRK    OREQ '*YES'
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR                   MOVE '*GETLIC#'LLPTP2
417cACSR         LOTTRK    WHEQ '*YES'
417cACSR                   MOVE '*GETLOT#'LLPTP2
417cACSR                   ENDSL
417cAC*
417cAC*    Retrieve lot/license plate for this slot.
417cACSR                   EXSR ZZLLP2
417cAC*
417cAC*    If lot/license plate found - Have user verify by scanning.
417cACSR         ERROR     IFEQ *OFF
417cAC*
417cAC*    Display window to capture lot/license plate for
417cAC*    verification.
417cACSR                   MOVE '*GETCUR 'LLPTP1
417cACSR                   EXSR ZZLLP
417cACSR         ERROR     IFEQ *OFF
417cACSR         CANCEL    ANDEQ*OFF
417cACSR                   MOVE WWLLP#    SAVLLP
417cACSR                   ENDIF
417cACSR                   ENDIF
417cACSR                   ENDIF
     C*
     CSR         ENDCK1    TAG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
416j C*  If item changed, verify adjustment code.
416j CSR         *IN59     IFEQ *ON
416j CSR                   MOVE '*VERIFY '$LCMD
416j CSR                   MOVE W2ADJ     $LCODE
416j CSR                   CALL 'AD900'
416j CSR                   PARM           $LPARM
416j CSR         $LRTN     IFEQ '*ERROR  '
416j CSR                   MOVE *ON       ERROR
416j CSR                   MOVE *ON       *IN22
416j CSR                   MOVE *ON       *IN02
416j CSR                   MOVEL$LERM     ERRMSG
416j CSR                   EXSR ZM0105
416j CSR                   ELSE
416j CSR         $LRTN     IFEQ '*PGMQ   '
416j CSR                   MOVE *ON       ERROR
416j CSR                   MOVE *ON       *IN22
416j CSR                   MOVE *ON       *IN02
416j CSR                   MOVE $LMSG     #MSGK
416j CSR                   EXSR ZMQMSG
416j CSR                   ENDIF
416j CSR                   ENDIF
416j CSR                   ENDIF
     C*
413dACSR                   MOVE W2DISP    ODISP
413DDC**         OVRRID    IFEQ *OFF
     C*
     C*  "To Slot" can't be blank.
     C*
     CSR         W2DISP    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVEADESCSP,1  ERRMSG
500kACSR                   OTHER
     CSR                   MOVEADESC,1    ERRMSG
500kACSR                   ENDSL
     CSR                   EXSR ZM0203
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
414gAC*
414gAC*  Call API for slot.
414gAC*
414gACSR                   CALL @APICS
414gACSR                   PARM           W2DISP
414gACSR                   PARM 6         WOROW
414gACSR                   PARM 11        WOCOL
414gACSR                   PARM           @ARTN   8
414gACSR         @ARTN     IFEQ '*REDSPLY'
414gACSR                   MOVE *ON       REDSPL
414gACSR                   GOTO ENDCK2
414gACSR                   ENDIF
     C*
     C*  Verify "To Slot" number.
     C*
     CSR         TOKEY     CHAINRECORD              N79
     CSR         *IN79     IFEQ *ON                               B2
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM73
     CSR                   GOTO ENDCK2
     CSR                   ENDIF                                  E2
416tAC*
416tAC*    Check status of slot. Slot cannot be inactive for transfer.
PCKcA *    Do not perform this edit for Packers.
PCKcAC           CLIENT    IFNE 'PACKERS'
416tACSR         SLSTAT    IFNE 'A '
416tACSR         SLSTAT    ANDNE'V '
416tACSR         SLSTAT    ANDNE'Z '
416tACSR                   MOVE *ON       ERROR
416tACSR                   MOVE *ON       *IN21
416tACSR                   MOVE *ON       *IN01
416tACSR                   MOVE *BLANKS   ERRMSG
416tACSR                   EXSR ZM2007
416tACSR                   GOTO ENDCK2
416tACSR                   ENDIF
PCKcAC                     ENDIF
     C*
500bAC*
500bAC*    Can not scan virtual slot for put away.
500bACSR         SLRSRV    IFEQ 'V'
500bACSR                   MOVE *ON       ERROR
500bACSR                   MOVE *ON       *IN21
500bACSR                   MOVE *ON       *IN01
500bACSR                   MOVE *BLANKS   ERRMSG
500bACSR                   EXSR ZM2017
500bACSR                   GOTO ENDCK2
500bACSR                   ENDIF
     C*
414fACSR         *IN79     IFEQ *OFF
414fACSR                   MOVE SLPICK    TOPICK  1
414fACSR                   ENDIF
     C*
     C*  Verify "To Slot" has the same dept as the item.
     C*
413eACSR         SLWHDP    IFNE NEWWHD                            B1
413eACSR                   MOVE *ON       ERROR
413eACSR                   MOVE *ON       *IN21
413eACSR                   MOVE *ON       *IN01
413eACSR                   EXSR ZM2523
413eACSR                   GOTO ENDCK2
413eACSR                   ENDIF                                  E2
     C*
414dAC*  Verify "To Slot" has the same section as the item.
414dAC*
414dACSR         SLSTYP    IFNE ITSTYP                            B1
414dACSR                   MOVE *ON       ERROR
414dACSR                   MOVE *ON       *IN21
414dACSR                   MOVE *ON       *IN01
414dACSR                   EXSR ZM5207
414dACSR                   GOTO ENDCK2
414dACSR                   ENDIF                                  E2
415bAC*
415bAC*    Retrieve hard/soft slot designation code.
415bAC*
415bACSR                   MOVE *BLANKS   SLDTYP
415bACSR         SLDESG    IFGT *BLANKS
415bACSR                   MOVE '*VERIFY '$LCMD
415bACSR                   MOVE SLDESG    $LDSG
415bACSR                   CALL 'DS900'
415bACSR                   PARM           $LPARM
415bACSR                   SELEC
415bACSR         $LRTN     WHEQ '*OK     '
415bACSR                   MOVE $LTYP     SLDTYP
415bACSR         $LRTN     WHEQ '*ERROR  '
415bACSR                   MOVE *ON       ERROR
415bACSR                   MOVE *ON       *IN21
415bACSR                   MOVE *ON       *IN01
415bACSR                   MOVEL$LERM     ERRMSG
415bACSR                   EXSR ZM0105
415bACSR         $LRTN     WHEQ '*PGMQ   '
415bACSR                   MOVE *ON       ERROR
415bACSR                   MOVE *ON       *IN21
415bACSR                   MOVE *ON       *IN01
415bACSR                   MOVE $LMSG     #MSGK
415bACSR                   EXSR ZMQMSG
415bACSR                   ENDSL
415bACSR                   ENDIF
415bAC*
415bAC*    If designation is valid and item designation doesn't match
415bAC*    slot designation, flag error and prevent user from proceeding.
415bAC*
415bACSR         ERROR     IFEQ *OFF
415bACSR         ITDTYP    ANDEQ'H'                        Item hard desg.
415bACSR         SLDTYP    ANDNE'H'                        Slot not hard
415bAC*
415bACSR         ERROR     OREQ *OFF
415bACSR         ITDTYP    ANDNE'H'                        Item not hard
415bACSR         SLDTYP    ANDEQ'H'                        Slot hard desg.
415bAC*
415bACSR         ERROR     OREQ *OFF
415bACSR         ITDTYP    ANDEQ'H'                        Item hard desg.
415bACSR         SLDTYP    ANDEQ'H'                        Slot hard desg.
415bACSR         SLDESG    ANDNEITDESG                     Not same desg.
415bAC*
415bACSR                   MOVE *ON       ERROR
415bACSR                   MOVE *ON       *IN21
415bACSR                   MOVE *ON       *IN01
415bACSR                   MOVE *BLANKS   ERRMSG
415bACSR         ITDESG    IFGT *BLANKS
415bACSR                   MOVE ITDESG    ERITDP
415bACSR                   ELSE
415bACSR                   MOVE '*NONE'   ERITDP
415bACSR                   ENDIF
415bACSR                   MOVE SLDISP    ERSLDS
415bACSR         SLDESG    IFGT *BLANKS
415bACSR                   MOVE SLDESG    ERSLDP
415bACSR                   ELSE
415bACSR                   MOVE '*NONE'   ERSLDP
415bACSR                   ENDIF
415bACSR                   EXSR ZM7004
415bACSR                   GOTO ENDCK2
415bACSR                   ENDIF
     C*
409  C*   Check if item exists in reg. or v-slot.
     C*
     CSR                   EXSR ZZCKSL
     C*
     CSR         EXIST     IFEQ *ON                               B3
409  C*   Item is date sensitive and exists with different date.
412 AC*   display warning message.
412 ACSR         OVRRID    IFEQ *OFF                              B4
     CSR         ITFLGD    IFEQ 'Y'                               B5
     CSR         SLEXPD    ANDNESVEXPD
417eACSR         OPVEXP    ANDEQ'N'
     CSR                   MOVE *ON       ERROR
412 ACSR                   MOVE *ON       WARN
412 ACSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
412 DC*R                   EXSR ZM2521
412 MCSR                   EXSR ZM2522
     CSR                   GOTO ENDCK2
     CSR                   ENDIF                                   E5
412 ACSR                   ENDIF                                   E4
     C*
     CSR                   MOVE SLDISP    W2DISP
     CSR                   ELSE                                    X3
     CSR         OPMPUT    IFEQ 'Y'                                B6
     CSR                   EXSR ZZCKNS
412 ACSR         ERROR     IFEQ *ON
412 ACSR                   MOVE *ON       *IN21
412 ACSR                   MOVE *ON       *IN01
412 ACSR                   MOVE *BLANKS   ERRMSG
412 ACSR                   MOVELW2DISP    ERRMSG
412 ACSR                   EXSR ZM1524
412 ACSR                   GOTO ENDCK2
412 ACSR                   ENDIF
     CSR                   ENDIF                                   E6
     CSR                   ENDIF                                   E3
412 DC*R                   ENDIF                                   E1
413DDC*R                   MOVE W2DISP    ODISP
     C*
     C*   From and To slot cannot be same.
     C*
     CSR         W2DISP    IFEQ FMDISP
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM1522
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
409 AC*   For directed put away,
     C*   To slot cannot have a different item.
     C*
     CSR         OPMPUT    IFEQ 'N'
     CSR         SLITEM    IFNE *BLANKS
     CSR         SLITEM    ANDNESVITEM
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM1523
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*   Verify record exists in itemdef (tie/high) file.
     C*   If no record is found, display warning message.
     C*
     CSR         OVRRID    IFEQ *OFF
     CSR         IDKEY     CHAINITEMDEF              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       WARN
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM07
     CSR                   ENDIF
     CSR                   ENDIF
414cAC*
414cAC*   For fixed items only,
414cAC*   Check for multiple pick slots.
414fAC*   Check only if From or To slot is a pick slot.
414fAC*
414fACSR         FMPICK    IFEQ 'Y'
414fACSR         TOPICK    OREQ 'Y'
     C*
414cACSR         ITSTYP    IFEQ 'F'
414cAC*
414cAC*   Count # of pick slots.
414cACSR                   EXSR CHKPCK
414cAC*
414cAC*   Check if status will change for TO slot.
     C*
414eACSR         NEWVS     IFEQ *OFF
414cACSR         TOKEY     CHAINRECORD              N79
414cACSR         *IN79     IFEQ *ON
414cACSR                   MOVE *ON       ERROR
414cACSR                   MOVE *ON       *IN21
414cACSR                   MOVE *ON       *IN01
414cACSR                   EXSR ZM73
414cACSR                   GOTO ENDCK2
414cAC***                  CALL 'CHKSTAT'
414cACSR                   ENDIF
414eACSR                   ENDIF
414cACSR         SLSTAT    IFEQ 'V'
414cACSR         SLPICK    ANDEQ'Y'
414cACSR         SLSTAT    OREQ 'Z'
414cACSR         SLPICK    ANDEQ'Y'
500eMCSR         NEWVS     OREQ *ON
500eMCSR         $VPICK    ANDEQ'Y'
414cACSR                   ADD  1         NBRPCK
414cACSR                   ENDIF
414cAC*
414cAC*   Check if status of FROM slot will be Z.
414cACSR         NWSTAT    IFEQ 'Z'
414cACSR         SVPICK    ANDEQ'Y'
500eAC* Don't do this if the Item has changed
500eACSR         *IN59     ANDEQ*OFF
414cACSR                   SUB  1         NBRPCK
414cACSR                   ENDIF
     C*
414cACSR         OPMPCK    IFEQ 'N'
414cACSR         IMNRPK    ANDGT1
414cACSR                   Z-ADD1         IMNRPK
414cACSR                   ENDIF
414cAC*
414cAC*   Error if new # of pick slots is > number allowed.
     C*
414cACSR         NBRPCK    IFGT IMNRPK
414cACSR                   MOVE *ON       ERROR
414cACSR                   MOVE *ON       *IN21
414cACSR                   MOVE *ON       *IN01
414cACSR                   EXSR ZM5206
414cACSR                   ENDIF
414cAC*
414cACSR                   ENDIF
414fAC*
414fACSR                   ENDIF
414cAC*
     C*
     C*  If error has occured then skip the rest of the checks.
     C*
     CSR         ERROR     CABEQ*ON       ENDCK2
     C*
     C*  Get slot record and lock it this time.
     C*
414cMCSR         FMKEY     CHAINRECORD               7978
414cDC*R         FILEKY    CHAINRECORD               7978
     C*
     C*    Record locked.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM74
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     C*    Record not found.
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM73
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     C*    See if quanities or status has changed
     C*
     C**                   EXSR ZZFIL0
     C**         OVRRID    IFEQ *OFF
     C**         $CQTY1    IFNE SAVQT1
     C**         $CQTY2    ORNE SAVQT2
     C**         $CQTY3    ORNE SAVQT3
     C**                   MOVE *ON       WARN
     C**                   MOVE *ON       ERROR
     C**                   UNLCKSLOT2
     C**                   EXSR ZM17
     C**                   GOTO ENDCK2
     C**                   ENDIF
     C**                   ENDIF
     C*
     C*     Decrease quantity from the "FROM SLOT".
     C*
     CSR                   Z-ADDW1QTY1    CHGQT1
     CSR                   Z-ADDW1QTY2    CHGQT2
     CSR                   Z-ADDW1QTY3    CHGQT3
     CSR         SLSTK1    SUB  W1QTY1    NEWQT1
     CSR         SLSTK2    SUB  W1QTY2    NEWQT2
     CSR         SLSTK3    SUB  W1QTY3    NEWQT3
     C*
     C*  New available quantities can not be negative.
     C*
     CSR                   SUB  CHGQT1    $CQTY1
     CSR                   SUB  CHGQT2    $CQTY2
     CSR                   SUB  CHGQT3    $CQTY3
     CSR         $CQTY1    IFLT 0
     CSR         $CQTY2    ORLT 0
     CSR         $CQTY3    ORLT 0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   UNLCKSLOT2
     CSR                   EXSR ZM16
     CSR                   ENDIF
     C*
413dACSR         ENDCK2    TAG
413dACSR         ERROR     IFEQ *ON
413dACSR                   MOVE ODISP     W2DISP
413dACSR                   ENDIF
     C*
     CSR                   ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZCHK3   Screen 3 error checking.
416aAC*
416aACSR         ZZCHK3    BEGSR
416aACSR                   MOVE *OFF      ERROR
416aAC*
416aAC*    Verify Zero, Y,N
416aAC*
416aACSR         W3ZERO    IFNE 'Y'
416aACSR         W3ZERO    ANDNE'N'
416aACSR                   MOVE *ON       ERROR
416aACSR                   MOVE *ON       *IN21
416aACSR                   MOVE *ON       *IN01
416aACSR                   MOVE *BLANKS   ERRMSG
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVEADESCSP,4  ERRMSG
500kACSR                   OTHER
416aACSR                   MOVELDESC,4    ERRMSG
500kACSR                   ENDSL
416aACSR                   EXSR ZM1005
416aACSR                   ENDIF
416aAC*
416aACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*
409  C*  ZZCKNS   Use reg slot or get new Vslot.
     C*
409  CSR         ZZCKNS    BEGSR
412 ACSR                   MOVE *ON       ERROR
416 ACSR                   MOVE *OFF      NEWVS
     CSR         TOKEY     CHAINRECORD              N79
     CSR         *IN79     IFEQ *OFF
     CSR         SLITEM    IFEQ *BLANKS
413aACSR                   MOVE *OFF      ERROR
     CSR                   GOTO ENDCKN
     CSR                   ELSE
413cAC*   IF WE WANT VIRTUAL PICK SLOTS, COMMENT OUT THE NEXT IF.
413cAC*   Get out if physical slot is a pick slot so we
413cAC*   do not create virtual pick slot.
417eAC*   Note: Hard coded changes no longer needed. Virtual pick
417eAC*         slots are switchable feature now.
413cAC**         SLPICK    IFEQ 'Y'
PAKaDC***        SLPICK    IFEQ 'Y'
417eAC*R         OPVPCK    ANDEQ'N'
PAKaDC***                  MOVE *ON       ERROR
PAKaDC***                  GOTO ENDCKN
PAKaDC***                  ENDIF
BIR  C*
BIR  C*    Only allow virtual pick slots in PIR.
BIRaD**          CLIENT    OREQ BIRITE
BIRaMC           CLIENT    IFEQ BIRITE
BIR AC           SLPICK    ANDEQ'Y'
BIR AC           OPVPCK    ANDEQ'Y'
BIR AC           SLSTYP    ANDEQ'F'
PCKeAC           CLIENT    OREQ PACKER
PCKeAC           SLPICK    ANDEQ'Y'
PCKeAC           SLRSRV    ANDEQ'Y'
BIR AC*
     CSR                   MOVE *ON       ERROR
     CSR                   GOTO ENDCKN
413cACSR                   ENDIF
412 AC*   Get out if physical slot already uses both
412 AC*   positions of handstack field.
412 ACSR                   MOVEASLHAND    A2
412 ACSR         A2,1      IFNE ' '
412 ACSR                   GOTO ENDCKN
412 ACSR                   ENDIF
412 AC*   Set handstack flag for later use.
412 ACSR         SLHAND    IFNE ' '
412 ACSR                   MOVE *ON       FLAGHS  1
412 ACSR                   ELSE
412 ACSR                   MOVE *OFF      FLAGHS
412 ACSR                   ENDIF
     C* SAVE PHYSICAL SLOT FIELDS
     CSR                   Z-ADDSLWHSE    PHWHSE
     CSR                   MOVE SLWHDP    PHWHDP
416q CSR                   MOVE SLSTAT    PHSTAT
     CSR                   MOVE SLAISL    PHAISL
     CSR                   Z-ADDSLLOC     PHLOC
     CSR                   Z-ADDSLRLVL    PHRLVL
     CSR                   MOVE SLHAND    PHHAND
     CSR                   Z-ADDSLSIDE    PHSIDE
     CSR                   MOVE SLSTYP    PHSTYP
     CSR                   MOVE SLDISP    PHDISP
     CSR                   MOVE SLSDEF    PHSDEF
     CSR                   MOVE SLDESG    PHDESG
     CSR                   Z-ADDSLPSEQ    PHPSEQ
     CSR                   MOVE SLACTV    PHACTV
     CSR                   MOVE SLBLD     PHBLD
     CSR                   Z-ADDSLSLFD    PHSLFD
     C***
     CSR                   Z-ADDSLPSEQ    $VPSEQ
     CSR                   MOVE *BLANKS   $VDISP
     CSR                   Z-ADD0         K
412 MCSR                   Z-ADDSLWHSE    $VWHSE  30
412 MCSR                   MOVE SLWHDP    $VWHDP  5
412 MCSR                   MOVE SLAISL    $VAISL  3
412 MCSR                   Z-ADDSLLOC     $VLOC   30
412 MCSR                   Z-ADDSLRLVL    $VRLVL  20
     CSR                   MOVE *BLANKS   $VHAND
412 MCSR                   MOVE SLSTYP    $VSTYP  1
412 MCSR                   Z-ADDSLPSEQ    $VPSEQ  50
     CSR                   MOVE *BLANKS   $VDISP
412 MCSR                   MOVE SLPICK    $VPICK  1
     C*** Loop & increment handstack to find new v-slot to create.
414bDC*R         K         DOWLE720
414bMCSR         K         DOWLE702
     CSR                   ADD  1         K
412 AC*     If physical slot had handstack then limit hs we can use.
412 ACSR         FLAGHS    IFEQ *ON
412 ACSR                   MOVEAHND,K     A2N
412 ACSR         A2N,1     IFNE A2,2
412 ACSR                   ITER
412 ACSR                   ENDIF
412 ACSR                   ENDIF
     CSR                   MOVE HND,K     $VHAND
412 ACSR                   CALL 'FRMTVS'
412 ACSR                   PARM           PHDISP
412 ACSR                   PARM           FLAGHS
412 ACSR                   PARM           $VHAND  2
412 ACSR                   PARM           $VDISP 12
     C*
412 DC*R                   CALL 'FRMTSL'
412 DC*                    PARM           $VWHSE  30
412 DC*                    PARM           $VWHDP  5
412 DC*                    PARM           $VAISL  3
412 DC*                    PARM           $VLOC   30
412 DC*                    PARM           $VRLVL  20
412 DC*                    PARM           $VHAND  2
412 DC*                    PARM           $VSTYP  1
412 DC*                    PARM           $VPSEQ  50
412 DC*                    PARM           $VDISP 12
     CSR         CKKEY     CHAINRECORD              N79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       NEWVS
412 ACSR                   MOVE *OFF      ERROR
413eMCSR                   MOVE $VDISP    W2DISP
     CSR                   LEAVE
     CSR                   ELSE
     CSR                   ITER
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ENDCKN    ENDSR
     C*----------------------------------------------------------------
     C*
     C*
409  C*  ZZCKSL   Check if item exists in reg or V slot
     C*
     CSR         ZZCKSL    BEGSR
414aACSR                   MOVE *OFF      EXIST
     CSR         SLITEM    IFEQ SVITEM
417eACSR         OPVALL    ANDEQ'N'
     CSR                   MOVE *ON       EXIST
     CSR                   GOTO ENDCKS
     CSR                   ELSE
     CSR         OPMPUT    IFEQ 'Y'
     CSR         TOKEY     SETLLVSLOT2
     CSR         NXT1      TAG
414hDC**         TOKEY     READEVSLOT2                   78
414hMCSR         TOKEY     READEVSLOT2              N    78
     CSR         *IN78     IFEQ '0'
     CSR         VSKEY     CHAINRECORD              N79
     CSR         *IN79     IFEQ '0'
     CSR         SLITEM    ANDEQSVITEM
417eACSR         OPVALL    ANDEQ'N'
     CSR                   MOVE *ON       EXIST
     CSR                   GOTO ENDCKS
     CSR                   ELSE
     CSR                   GOTO NXT1
     CSR                   ENDIF
417eAC*
417eACSR                   ELSE
417eAC*
417eAC*    Virtual slot was scanned in. Get base slot.
417eACSR         EXIST     IFEQ *OFF
417eACSR         TOKEY     SETLLVSLOT1
417eACSR         TOKEY     READEVSLOT1              N    78
417eACSR         *IN78     IFEQ *OFF
417eACSR                   MOVE VSPDIS    W2DISP
417eACSR                   ENDIF
417eACSR                   ENDIF
417eAC*
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ENDCKS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCKU2   Check for overlapping task and update the current
     C*           task just ended, by adjusting the time.
     C*
413eACSR         ZZCKU2    BEGSR
     CSR         *LIKE     DEFN PTTRN#    SVTRN#
     CSR         *LIKE     DEFN PTDMIN    SVTLEN
     CSR                   Z-ADD0         SVTLEN
     CSR         PTKEY2    SETLLPIRTRAN2
     CSR         FOREVR    DOWEQFOREVR
     CSR                   READ PIRTRAN2                 79
     CSR         *IN79     IFEQ *ON
     CSR         PTSDTE    ORLT ZZSDTE
     CSR                   LEAVE
     CSR                   ENDIF
     C*   Skip the task that just ended.
     CSR         *IN79     IFEQ *OFF
     CSR         PTTRN#    ANDEQSVTRN#
     CSR                   ITER
     CSR                   ENDIF
     C*
     C*   Skip 'IDLE' task
     C*
     CSR         PTTASK    IFEQ 'IDLE'
     CSR                   ITER
     CSR                   ENDIF
     C*
     CSR                   MOVE PTTASK    T#TASK
     CSR         TKKEY     CHAINTASK                 79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE ' '       TKTYPE
     CSR                   ENDIF
     C*   Accumulate overlapping minutes.(Same start and end date)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  10:00:23   11:30:35  1/25/96
     C*Manual(PT) BREAK 1/25/96  10:30:00   10:45:00  1/25/96   (15)
     C*
     C*   Auto    CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*   Manual  BREAK 1/25/96  23:30:00    1:30:00  1/26/96   (120)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDEQZZSDTE
     CSR         PTEDTE    ANDEQZZEDTE
     CSR         PTSTIM    ANDGEZZSTIM
     CSR         PTETIM    ANDLEZZETIM
     CSR         TKTYPE    ANDEQ'I'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     C*   Accumulate overlapping minutes(Diff start date/same end date)
     C*                                  (Past midnight)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*Manual(PT) BREAK 1/26/96   8:00:00    8:30:00  1/26/96   (30)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDGTZZSDTE
     CSR         PTEDTE    ANDEQZZEDTE
     CSR         PTETIM    ANDLEZZETIM
     CSR         TKTYPE    ANDEQ'I'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     C*   Accumulate overlapping minutes.(Same start date/diff end date)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*Manual(PT) BREAK 1/25/96  16:00:00   16:30:00  1/25/96   (30)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDEQZZSDTE
     CSR         PTEDTE    ANDLTZZEDTE
     CSR         PTSTIM    ANDGEZZSTIM
     CSR         TKTYPE    ANDEQ'I'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     C*   Update the task that just ended.
     C*
     CSR         SVTRN#    CHAINPIRTRAN              79
     CSR         *IN79     IFEQ *OFF
     CSR         PTDMIN    IFGT 0
     CSR         PTDMIN    SUB  SVTLEN    PTDMIN
     CSR                   ELSE
     CSR         PTIMIN    SUB  SVTLEN    PTIMIN
     CSR                   ENDIF
     CSR                   UPDATPTREC
     CSR                   ENDIF
413eACSR         ENDCU2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCLSE   Close a transaction
     C*
     CSR         ZZCLSE    BEGSR
     C*
417 AC*    Close any open(Inuse) Indirect tasks.
417 ACSR                   EXSR ZZENDI
417 AC*
     CSR                   MOVE '*CLOSE  '$LCMD
     CSR                   MOVE '*INTER  '$LTYPE
415fDC*R                   Z-ADD0         $LWHSE
415fMCSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   MOVE *BLANKS   $LRTE
     CSR                   MOVE *BLANKS   $LPO
415cDC*R                   Z-ADD$PTRN#    $LTRN#
     C*
     CSR                   CALL 'PT132'
     CSR                   PARM           $LPARM
415eAC*
415eAC*     Error occured - Error message sent back
415eAC*
415eACSR                   SELEC
415eACSR         $LRTN     WHEQ '*ERROR  '
415eACSR                   MOVE *ON       ERROR
415eACSR                   MOVEL$LERM     ERRMSG
415eACSR                   EXSR ZM0105
415eAC*
415eAC*     Error occured - Error message sent to program msgq
415eAC*
415eACSR         $LRTN     WHEQ '*PGMQ   '
415eACSR                   MOVE *ON       ERROR
415eACSR                   MOVE $LMSG     #MSGK
415eACSR                   EXSR ZMQMSG
415eAC*
415eAC*     Error occured - User pressed F12=Cancel.
415eAC*
415eACSR         $LRTN     WHEQ '*CANCEL '
415eACSR                   MOVE *ON       ERROR
415eAC*
415eAC*    Close was successful.
415eAC*
415eACSR         $LRTN     WHEQ '*OK     '
     C*
     C*   Calculate the time in minutes it took to complete this task.
     C*   PTCTIM is used for end time instead of PTETIM, because close
     C*   time and End time are the same in this case.
     C*
     C**         *LIKE     DEFN PTSTIM    STRTIM
     C**         *LIKE     DEFN PTETIM    FINTIM
415cDC*R         PTKEY$    CHAINPIRTRAN              79
415cMCSR         $LTRN#    CHAINPIRTRAN              79
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTCTIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   Z-ADDTIMLEN    PTDMIN
     C*
415cDC*R                   Z-ADDW1QT01    PTPCS
415cMCSR                   Z-ADDWKPCS     PTPCS
415cDC*R                   Z-ADDLBCUBE    PTCUBE
415cMCSR                   Z-ADDWKCUBE    PTCUBE
415cDC*R                   Z-ADDLBSWGT    PTSWGT
415cMCSR                   Z-ADDWKSWGT    PTSWGT
     CSR                   UPDATPTREC
     C*
     C*        There is a posibility that a manual task might have
     C*        been added before the current task was ended. Hence
     C*        adjust the current task just ended, if there is
     C*        any overlapping manual task.
     C*
410 ACSR                   Z-ADDPTTRN#    SVTRN#
     C*  Past overnight. (PTEDTE > PTSDTE)
410 ACSR         PTEDTE    IFGT PTSDTE
410 ACSR                   Z-ADDPTEDTE    STDATE
410 ACSR                   ELSE
410 ACSR                   Z-ADDPTSDTE    STDATE
410 ACSR                   ENDIF
410 ACSR                   Z-ADDPTSDTE    ZZSDTE
410 ACSR                   Z-ADDPTEDTE    ZZEDTE
410 ACSR                   Z-ADDPTSTIM    ZZSTIM
410 ACSR                   Z-ADDPTETIM    ZZETIM
410 ACSR                   EXSR ZZCKU2
     C*
410 AC*   Start an 'IDLE' task, if no open task.
410 ACSR                   Z-ADD0         CURTRN  70
410 ACSR                   MOVE *BLANKS   CURTSK  6
410 ACSR                   MOVE *BLANKS   CURTYP  1
410 ACSR                   MOVE *OFF      CURENT  1
410 ACSR                   EXSR ZZTASK
410 ACSR         CURENT    IFEQ *OFF
410 ACSR                   MOVE 'IDLE  '  W1TASK  6
410 ACSR                   EXSR ZZIDLE
410 ACSR                   ENDIF
415eACSR                   ENDSL
     C*
     CSR         ENDCLS    ENDSR
     C*----------------------------------------------------------------
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   SELEC
     C*
     C*     SLOT.
     C*
     CSR         ROW#      WHEQ 6
413eDC*R                   MOVE *ON       *IN01
413eDC*R                   MOVE '*GENERAL'$LCMD
413eDC*R                   Z-ADD$PWHSE    $LWHSE
413eDC*R                   MOVE $PWHDP    $LWHDP
413eDC*R                   MOVE *BLANKS   $LITEM
413eDC**                   MOVE W1DISP    $LDISP
413eDC*R                   CALL 'SL900'
413eDC*R                   PARM           $LPARM
413eDC*R         $LRTN     IFEQ '*SELECT '
413eDC*R                   MOVE $LDISP    W1DISP
413eDC*R                   ENDIF
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   OTHER
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     C*      F8 - View item slot information.
     C*
413eDC*R         *INKH     IFEQ *ON
413eDC*R                   MOVE *ON       CMDTKN
413eDC*R                   MOVE W1DISP    $PDISP
413eDC*R                   MOVE SLITEM    $PITEM
413eDC*R                   CALL 'IT135'
413eDC*R                   PARM           $PARMS
413eDC*R                   ENDIF
     C*
     C*      F20 - Accept Warning.
     C*
     CSR         *INKU     IFEQ *ON
414 ACSR                   MOVE *ON       OVRRID
414 ACSR                   ENDIF
     C*
     C*
     C*      F21 - Item Tie/High Maintenance.
     C*
     CSR         *INKV     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD$PWHSE    WHSE    30
     CSR                   CALL 'IT141'
     CSR                   PARM           WHSE
     CSR                   PARM           W1ITM
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     CSR                   EXSR ZZCMD1
     C*
     C*      F8 - View item slot information.
     C*
413eACSR         *INKH     IFEQ *ON
413eACSR                   MOVE *ON       CMDTKN
413eACSR                   MOVE W2DISP    $PDISP
413eACSR                   MOVE SLITEM    $PITEM
413eACSR                   CALL 'IT135'
413eACSR                   PARM           $PARMS
413eACSR                   ENDIF
     C*
     C*      F20 - Accept Warning.
     C*
     CSR         *INKU     IFEQ *ON
413eACSR                   MOVE *ON       OVRRID
413eACSR                   ENDIF
     C*
     CSR         ENDCM2    ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZCMD3   User defined command keys for screen 3.
416aAC*
416aACSR         ZZCMD3    BEGSR
416aAC*
416aAC*
416aACSR         ENDCM3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCRTL   Create Label records.
     C*
     CSR         ZZCRTL    BEGSR
     C*
     C                     CLEARLBREC
     C                     Z-ADD$PWHSE    LBWHSE
     C                     MOVE $PWHDP    LBWHDP
500gAC           *LIKE     DEFN ITCWGT    FMCWGT
500gAC           *LIKE     DEFN ITCWGT    TOCWGT
500gAC           *LIKE     DEFN IACWTA    EXWGFM
500gAC                     MOVE *ZEROS    EXWGFM
500iAC*
500iAC           *LIKE     DEFN ITSWGT    FMSWGT
500iAC           *LIKE     DEFN ITCUBE    FMCUBE
500iAC           *LIKE     DEFN ITUMQ3    FMUMQ3
     C*
     C*  FROM Slot.
     C*
     C           FMKEY     CHAINSLOT2               N79
417cA*
417cA*    Calculate current available quantities.
417cACSR                   CALL 'SLOTQTY'
417cACSR                   PARM           SLSTK1
417cACSR                   PARM           SLSTK2
417cACSR                   PARM           SLSTK3
417cAC*
417cACSR                   PARM           SLALC1
417cACSR                   PARM           SLALC2
417cACSR                   PARM           SLALC3
417cAC*
417cACSR                   PARM           SLTFR1
417cACSR                   PARM           SLTFR2
417cACSR                   PARM           SLTFR3
417cAC*
417cACSR                   PARM           SLPCK1
417cACSR                   PARM           SLPCK2
417cACSR                   PARM           SLPCK3
417cAC*
417cACSR                   PARM           SLRCV1
417cACSR                   PARM           SLRCV2
417cACSR                   PARM           SLRCV3
417cAC*
417cACSR                   PARM           STOCK1
417cACSR                   PARM           STOCK2
417cACSR                   PARM           STOCK3
417cAC*
417cACSR                   PARM           AVAIL1
417cACSR                   PARM           AVAIL2
417cACSR                   PARM           AVAIL3
417cA*
     C                     MOVE SLAISL    LBAISL
     C                     Z-ADDSLLOC     LBLOC
     C                     Z-ADDSLRLVL    LBRLVL
     C                     MOVE SLHAND    LBHAND
     C                     Z-ADDSLPSEQ    LBPSEQ
     C                     MOVE SLSTYP    LBSTYP
     C           LBSTYP    IFEQ 'P'
     C                     Z-ADD1         LBQRYF
     C                     ELSE
     C                     Z-ADD0         LBQRYF
     C                     ENDIF
415 AC                     MOVE SLWHDP    FMWHDP  5
     C                     MOVE SLDISP    FMDISP
     C                     MOVE SLITEM    FMITEM 15
417cAC*
417cAC*    Lot/license plate tracking item.
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR         LOTTRK    OREQ '*YES'
417cAC*
417cAC*      Entire qty transferred.
417cACSR                   SELEC
417cACSR         AVAIL1    WHEQ 0
417cACSR         AVAIL2    ANDEQ0
417cACSR         AVAIL3    ANDEQ0
417cACSR                   MOVE '*UPDTFRT'LLPTP3
417cAC*
417cAC*      Partial qty transferred.
417cACSR         AVAIL1    WHNE 0
417cACSR         AVAIL2    ORNE 0
417cACSR         AVAIL3    ORNE 0
417cACSR                   MOVE '*UPDTFRP'LLPTP3
417cACSR                   ENDSL
417cACSR                   ENDSL
     C*
     C* FROM ITEM
     C*
     C           KEYIT     CHAINPIRITEM              79
416lMC                     Z-ADD1         SVUMQ2
416lDC**                   Z-ADD0         SVUMQ2
500gAC                     MOVE ITCWGT    FMCWGT
500iAC                     Z-ADDITCUBE    FMCUBE
500iAC                     Z-ADDITSWGT    FMSWGT
500iAC                     Z-ADDITUMQ2    FMUMQ2
500iAC                     Z-ADDITUMQ3    FMUMQ3
416j C           *IN59     IFEQ *ON
416l C           ITUMQ2    IFNE 0
416j C                     Z-ADDITUMQ2    SVUMQ2
416l C                     ENDIF
416j C                     ENDIF
415cAC*
415cAC*    Create label records for case transfer.
415cAC*
415cACSR                   SELEC
415cACSR         W1QT01    WHNE 0
     C                     MOVE ITUM1     LBUCOD
     C                     Z-ADDW1QT01    LBQALC
     C                     Z-ADDW1QT01    LBQPCK
     C                     Z-ADDITCUBE    LBUCUB
     C           LBUCUB    MULT W1QT01    LBCUBE
     C                     Z-ADDITSWGT    LBUWGT
     C           LBUWGT    MULT W1QT01    LBSWGT
500gAC*    Save extended weight for item adjustment record.
500gAC                     ADD  LBSWGT    EXWGFM
     C*
     C           IDKEY     CHAINITEMDEF              79
     C                     Z-ADDIDTIE     LBTIE
     C                     Z-ADDIDHIGH    LBHIGH
     C*
     C* TO Slot.
     C*
416fAC           KEYIT1    CHAINPIRITEM             N79
500gAC                     MOVE ITCWGT    TOCWGT
     C           TOKEY     CHAINSLOT2               N79
     C                     Z-ADDSLWHSE    LBWHS2
     C                     MOVE SLWHDP    LBWHD2
415 AC                     MOVE SLWHDP    TOWHDP  5
     C                     MOVE SLAISL    LBASL2
     C*
     C                     Z-ADDSLLOC     LBLOC2
     C                     Z-ADDSLRLVL    LBLVL2
     C                     MOVE SLHAND    LBHND2
     C                     MOVE SLDISP    TODISP 12
     C                     MOVE *BLANKS   LBRTE
     C                     MOVE W1ITM     TOITEM 15
     C                     Z-ADD0         LBPBAT
     C                     MOVE 'N'       LBUTYP
     C                     Z-ADD$PTRN#    LBTRN#
     C                     Z-ADD0         LBCTR#
     C*     - Get new label number.
     C                     CALL 'PIRLBL#'
     C                     PARM           LBLBL#
     C                     MOVE FMITEM    LBITEM
     C                     MOVE FMDISP    LBDISP
     C                     MOVE TODISP    LBDSP2
     C           FMITEM    IFEQ TOITEM
     C                     MOVE '1'       LBGRP1
     C                     ELSE
     C                     MOVE '2'       LBGRP1
     C                     ENDIF
     C                     MOVE 'A'       LBGRP2
     C                     MOVE 'T'       LBTYPE
     C                     MOVE 'P'       LBSTAT
     C                     Z-ADDTODAY     LBSDTE
     C                     TIME           LBSTIM
     C                     Z-ADDTODAY     LBRDTE
     C                     WRITELBREC
     C*
     C*     - Create second label record
     C*         - Get new label number.
     C                     CALL 'PIRLBL#'
     C                     PARM           LBLBL#
     C                     MOVE TOITEM    LBITEM
416fAC                     MOVE TOWHDP    LBWHDP
     C                     MOVE TODISP    LBDISP
     C                     MOVE FMDISP    LBDSP2
416jAC                     MOVE ITUM1     LBUCOD
416s CSR                   Z-ADDTOQTY1    LBQALC
416s CSR                   Z-ADDTOQTY1    LBQPCK
416sDC*          *IN59     IFEQ *ON
416sDC*          W1QT01    MULT SVUMQ2    LBQALC
416sDC*          W1QT01    MULT SVUMQ2    LBQPCK
416sDC*                    ENDIF
     C           FMITEM    IFEQ TOITEM
     C                     MOVE '1'       LBGRP1
     C                     ELSE
     C                     MOVE '2'       LBGRP1
     C                     ENDIF
     C                     MOVE 'B'       LBGRP2
     C                     MOVE 'T'       LBTYPE
416kMC                     MOVE 'P'       LBSTAT
416kDC*                    MOVE 'C'       LBSTAT
     C                     Z-ADDTODAY     LBSDTE
     C                     TIME           LBSTIM
     C                     Z-ADDTODAY     LBRDTE
     C                     WRITELBREC
415cACSR                   Z-ADD$PTRN#    SVTRN1
415cACSR                   Z-ADDLBCUBE    SVCUB1
415cACSR                   Z-ADDLBSWGT    SVWGT1
415cACSR                   MOVE '*YES'    NEWTRN
415cACSR                   ENDSL
415cAC*
415cAC*    Create transfer record for breakdown 1 qty.
415cAC*
415cACSR                   SELEC
415cACSR         W1QT02    WHNE 0
415cACSR                   MOVE ITUM2     LBUCOD
415cACSR                   Z-ADDW1QT02    LBQALC
415cACSR                   Z-ADDW1QT02    LBQPCK
500iDC*          ITUMQ2    IFGT 0
500iMC           FMUMQ2    IFGT 0
500iDC*          ITCUBE    DIV  ITUMQ2    LBUCUB    H
500iMC           FMCUBE    DIV  FMUMQ2    LBUCUB    H
500iDC*          ITSWGT    DIV  ITUMQ2    LBUWGT    H
500iMC           FMSWGT    DIV  FMUMQ2    LBUWGT    H
415cACSR                   ELSE
500iDC*                    Z-ADDITSWGT    LBUWGT
500iMC                     Z-ADDFMSWGT    LBUWGT
500iDC*                    Z-ADDITCUBE    LBUCUB
500iMC                     Z-ADDFMCUBE    LBUCUB
415cACSR                   ENDIF
415cACSR         LBUCUB    MULT W1QT02    LBCUBE
415cACSR         LBUWGT    MULT W1QT02    LBSWGT
500gAC*    Save extended weight for item adjustment record.
500gAC                     ADD  LBSWGT    EXWGFM
415cAC*
415cACSR         IDKEY     CHAINITEMDEF              79
415cACSR                   Z-ADDIDTIE     LBTIE
415cACSR                   Z-ADDIDHIGH    LBHIGH
415cAC*
415cAC* TO Slot.
415cAC*
415cACSR         TOKEY     CHAINSLOT2               N79
415cACSR                   Z-ADDSLWHSE    LBWHS2
415cACSR                   MOVE SLWHDP    LBWHD2
415cACSR                   MOVE SLWHDP    TOWHDP  5
415cACSR                   MOVE SLAISL    LBASL2
415cAC*
415cACSR                   Z-ADDSLLOC     LBLOC2
415cACSR                   Z-ADDSLRLVL    LBLVL2
415cACSR                   MOVE SLHAND    LBHND2
415cACSR                   MOVE SLDISP    TODISP 12
415cACSR                   MOVE *BLANKS   LBRTE
415cACSR                   MOVE W1ITM     TOITEM 15
415cACSR                   Z-ADD0         LBPBAT
415cACSR                   MOVE '1'       LBUTYP
415cACSR         NEWTRN    IFEQ '*YES'
415cACSR                   CALL 'PIRTRN#'
415cACSR                   PARM           PTTRN#
415cACSR                   Z-ADDPTTRN#    LBTRN#
415cACSR                   Z-ADDPTTRN#    SVTRN2
415cAC*
415cACSR                   MOVEL'TFRMOV ' @PTASK
415cACSR                   Z-ADD0         @PCUBE
415cACSR                   Z-ADD0         @PSWGT
415cACSR                   CALL @ADDTR
415cACSR                   PARM '*CRTSTRT'@PCMD   8
415cACSR                   PARM           #JOB
415cACSR                   PARM PTTRN#    @PTRN#  70
415cACSR                   PARM           @PTASK  6
415cACSR                   PARM $PWHSE    @PWHSE  30
415cACSR                   PARM LBWHDP    @PWHDP  5
415cACSR                   PARM LBSTYP    @PSTYP  1
415cACSR                   PARM           @PCUBE  93
415cACSR                   PARM           @PSWGT  92
415cACSR                   PARM 0         @PPCS   50
415cACSR                   PARM 0         @PAISL  50
415cACSR                   PARM 0         @PQTY1  50
415cACSR                   PARM 0         @PQTY2  50
415cACSR                   PARM 0         @PQTY3  50
415cACSR                   PARM '0'       @PRTE   5
415cACSR                   PARM ' '       @PPO    9
415cACSR                   PARM ' '       @PGRP1  1
415cACSR                   PARM 'T'       @PGRP2  1
415cACSR                   PARM ' '       @PRTN   8
415cACSR                   PARM ' '       @PMSG   4
415cACSR                   ELSE
415cACSR                   Z-ADD$PTRN#    LBTRN#
415cACSR                   ENDIF
415cACSR                   Z-ADD0         LBCTR#
415cAC*     - Get new label number.
415cACSR                   CALL 'PIRLBL#'
415cACSR                   PARM           LBLBL#
500eACSR                   MOVE FMWHDP    LBWHDP
415cACSR                   MOVE FMITEM    LBITEM
415cACSR                   MOVE FMDISP    LBDISP
415cACSR                   MOVE TODISP    LBDSP2
415cACSR         FMITEM    IFEQ TOITEM
415cACSR                   MOVE '1'       LBGRP1
415cACSR                   ELSE
415cACSR                   MOVE '2'       LBGRP1
415cACSR                   ENDIF
415cACSR                   MOVE 'A'       LBGRP2
415cACSR                   MOVE 'T'       LBTYPE
415cACSR                   MOVE 'P'       LBSTAT
415cACSR                   Z-ADDTODAY     LBSDTE
415cACSR                   TIME           LBSTIM
415cACSR                   Z-ADDTODAY     LBRDTE
415cACSR                   WRITELBREC
415cAC*
415cAC*     - Create second label record
415cAC*         - Get new label number.
415cACSR                   CALL 'PIRLBL#'
415cACSR                   PARM           LBLBL#
500eACSR                   MOVE TOWHDP    LBWHDP
415cACSR                   MOVE TOITEM    LBITEM
415cACSR                   MOVE TODISP    LBDISP
415cACSR                   MOVE FMDISP    LBDSP2
415cACSR         FMITEM    IFEQ TOITEM
415cACSR                   MOVE '1'       LBGRP1
415cACSR                   ELSE
415cACSR                   MOVE '2'       LBGRP1
415cACSR                   ENDIF
415cACSR                   MOVE 'B'       LBGRP2
415cACSR                   MOVE 'T'       LBTYPE
415cACSR                   MOVE 'C'       LBSTAT
415cACSR                   Z-ADDTODAY     LBSDTE
415cACSR                   TIME           LBSTIM
415cACSR                   Z-ADDTODAY     LBRDTE
415cACSR                   WRITELBREC
415cACSR                   MOVE LBTRN#    SVTRN2
415cACSR                   Z-ADDLBCUBE    SVCUB2
415cACSR                   Z-ADDLBSWGT    SVWGT2
415cACSR                   MOVE '*YES'    NEWTRN
415cACSR                   ENDSL
415cAC*
415cAC*    Create transfer record for breakdown 2 qty.
415cAC*
415cACSR                   SELEC
415cACSR         W1QT03    WHNE 0
415cACSR                   MOVE ITUM3     LBUCOD
415cACSR                   Z-ADDW1QT03    LBQALC
415cACSR                   Z-ADDW1QT03    LBQPCK
500iDC*          ITUMQ3    IFGT 0
500iMC           FMUMQ3    IFGT 0
500iDC*          ITCUBE    DIV  ITUMQ3    LBUCUB    H
500iMC           FMCUBE    DIV  FMUMQ3    LBUCUB    H
500iDC*          ITSWGT    DIV  ITUMQ3    LBUWGT    H
500iMC           FMSWGT    DIV  FMUMQ3    LBUWGT    H
415cACSR                   ELSE
500iDC*                    Z-ADDITSWGT    LBUWGT
500iMC                     Z-ADDFMSWGT    LBUWGT
500iDC*                    Z-ADDITCUBE    LBUCUB
500iMC                     Z-ADDFMCUBE    LBUCUB
415cACSR                   ENDIF
415cACSR         LBUCUB    MULT W1QT03    LBCUBE
415cACSR         LBUWGT    MULT W1QT03    LBSWGT
500gAC*    Save extended weight for item adjustment record.
500gAC                     ADD  LBSWGT    EXWGFM
415cAC*
415cACSR         IDKEY     CHAINITEMDEF              79
415cACSR                   Z-ADDIDTIE     LBTIE
415cACSR                   Z-ADDIDHIGH    LBHIGH
415cAC*
415cAC* TO Slot.
415cAC*
415cACSR         TOKEY     CHAINSLOT2               N79
415cACSR                   Z-ADDSLWHSE    LBWHS2
415cACSR                   MOVE SLWHDP    LBWHD2
415cACSR                   MOVE SLWHDP    TOWHDP  5
415cACSR                   MOVE SLAISL    LBASL2
415cAC*
415cACSR                   Z-ADDSLLOC     LBLOC2
415cACSR                   Z-ADDSLRLVL    LBLVL2
415cACSR                   MOVE SLHAND    LBHND2
415cACSR                   MOVE SLDISP    TODISP 12
415cACSR                   MOVE *BLANKS   LBRTE
415cACSR                   MOVE W1ITM     TOITEM 15
415cACSR                   Z-ADD0         LBPBAT
415cACSR                   MOVE '2'       LBUTYP
415cACSR         NEWTRN    IFEQ '*YES'
415cACSR                   CALL 'PIRTRN#'
415cACSR                   PARM           PTTRN#
415cACSR                   Z-ADDPTTRN#    LBTRN#
415cACSR                   Z-ADDPTTRN#    SVTRN3
415cAC*
415cACSR                   MOVEL'TFRMOV ' @PTASK
415cACSR                   Z-ADD0         @PCUBE
415cACSR                   Z-ADD0         @PSWGT
415cACSR                   CALL @ADDTR
415cACSR                   PARM '*CRTSTRT'@PCMD   8
415cACSR                   PARM           #JOB
415cACSR                   PARM PTTRN#    @PTRN#  70
415cACSR                   PARM           @PTASK  6
415cACSR                   PARM $PWHSE    @PWHSE  30
415cACSR                   PARM LBWHDP    @PWHDP  5
415cACSR                   PARM LBSTYP    @PSTYP  1
415cACSR                   PARM           @PCUBE  93
415cACSR                   PARM           @PSWGT  92
415cACSR                   PARM 0         @PPCS   50
415cACSR                   PARM 0         @PAISL  50
415cACSR                   PARM 0         @PQTY1  50
415cACSR                   PARM 0         @PQTY2  50
415cACSR                   PARM 0         @PQTY3  50
415cACSR                   PARM '0'       @PRTE   5
415cACSR                   PARM ' '       @PPO    9
415cACSR                   PARM ' '       @PGRP1  1
415cACSR                   PARM 'T'       @PGRP2  1
415cACSR                   PARM ' '       @PRTN   8
415cACSR                   PARM ' '       @PMSG   4
415cACSR                   ELSE
415cACSR                   Z-ADD$PTRN#    LBTRN#
415cACSR                   ENDIF
415cACSR                   Z-ADD0         LBCTR#
415cAC*     - Get new label number.
415cACSR                   CALL 'PIRLBL#'
415cACSR                   PARM           LBLBL#
415cACSR                   MOVE FMITEM    LBITEM
415cACSR                   MOVE FMDISP    LBDISP
415cACSR                   MOVE TODISP    LBDSP2
415cACSR         FMITEM    IFEQ TOITEM
415cACSR                   MOVE '1'       LBGRP1
415cACSR                   ELSE
415cACSR                   MOVE '2'       LBGRP1
415cACSR                   ENDIF
415cACSR                   MOVE 'A'       LBGRP2
415cACSR                   MOVE 'T'       LBTYPE
415cACSR                   MOVE 'P'       LBSTAT
415cACSR                   Z-ADDTODAY     LBSDTE
415cACSR                   TIME           LBSTIM
415cACSR                   Z-ADDTODAY     LBRDTE
415cACSR                   WRITELBREC
415cAC*
415cAC*     - Create second label record
415cAC*         - Get new label number.
415cACSR                   CALL 'PIRLBL#'
415cACSR                   PARM           LBLBL#
415cACSR                   MOVE TOITEM    LBITEM
415cACSR                   MOVE TODISP    LBDISP
415cACSR                   MOVE FMDISP    LBDSP2
415cACSR         FMITEM    IFEQ TOITEM
415cACSR                   MOVE '1'       LBGRP1
415cACSR                   ELSE
415cACSR                   MOVE '2'       LBGRP1
415cACSR                   ENDIF
415cACSR                   MOVE 'B'       LBGRP2
415cACSR                   MOVE 'T'       LBTYPE
415cACSR                   MOVE 'C'       LBSTAT
415cACSR                   Z-ADDTODAY     LBSDTE
415cACSR                   TIME           LBSTIM
415cACSR                   Z-ADDTODAY     LBRDTE
415cACSR                   WRITELBREC
415cACSR                   MOVE LBTRN#    SVTRN3
415cACSR                   Z-ADDLBCUBE    SVCUB3
415cACSR                   Z-ADDLBSWGT    SVWGT3
415cACSR                   MOVE '*YES'    NEWTRN
415cACSR                   ENDSL
     C*
414 AC           FMITEM    IFNE TOITEM
     C*  Reduce warehouse qtu for "From" item.
414 AC                     MOVE #PROG     $APRG
414 AC                     MOVE '*INTER  '$ATYPE
414 AC                     MOVE '*UNSTOCK'$ACMD
414 AC                     CALL 'ADJQTY'
414 AC                     PARM           $ACMD   8
414 AC                     PARM           $APRG  10
414 AC                     PARM           $ATYPE  8
414 AC                     PARM $PWHSE    $AWHSE  30
414 AC                     PARM FMITEM    $AITEM 15
414 AC                     PARM W1QT01    $AQTY1  70
414 AC                     PARM W1QT02    $AQTY2  70
414 AC                     PARM W1QT03    $AQTY3  70
414 AC                     PARM           $ARTQ1  70
414 AC                     PARM           $ARTQ2  70
414 AC                     PARM           $ARTQ3  70
414 AC                     PARM           $ARTN   8
414 AC                     PARM           $AERM
414 AC           $ARTN     IFEQ '*PGMQ   '
414 AC                     MOVE *ON       ERROR
414 AC                     MOVE $AMSG     #MSGK
414 AC                     EXSR ZMQMSG
414 AC                     ENDIF
     C*  Create adjustment record for "From" item.
415 ACSR                   CLEARIAREC
415 ACSR                   Z-ADD$PWHSE    IAWHSE
415 ACSR                   MOVE FMITEM    IAITEM
415 ACSR                   Z-ADDTODAY     IADATE
415 ACSR                   TIME           IATIME
415 ACSR                   MOVE #USER     IABY
415 ACSR                   MOVE FMWHDP    IAWHDP
415 ACSR                   MOVE FMDISP    IADISP
500gAC*    Catchweight item, update extended weight transferred.
500gAC           FMCWGT    IFEQ 'Y'
500gAC                     Z-SUBEXWGFM    IACWTA
500gAC                     ELSE
415 ACSR                   Z-ADD0         IACWTA
500gAC                     ENDIF
415 ACSR                   Z-SUBW1QT01    IAQTY1
415 ACSR                   Z-SUBW1QT02    IAQTY2
415 ACSR                   Z-SUBW1QT03    IAQTY3
416jMCSR                   MOVE W2ADJ     IACODE           Change Item
416jDC**                   MOVE 'CI'      IACODE           Change Item
415 ACSR         'To'      CAT  TOITEM:1  IAMEMO
415 ACSR                   WRITEIAREC
416vAC*
416vACSR                   EXSR ZZZISF
416vAC*
416vACSR                   EXSR ZZZS2D
416vACSR                   EXSR ZZZFS2
416vACSR                   Z-ADDIAWHSE    S$WHSE
416vACSR                   MOVE IAWHDP    S$WHDP
416vACSR                   MOVE IADISP    S$DISP
416vACSR                   MOVE IAITEM    A$ITEM
416vACSR                   Z-ADDIAQTY1    A$QTY1
416vACSR                   Z-ADDIAQTY2    A$QTY2
416vACSR                   Z-ADDIAQTY3    A$QTY3
416vACSR                   Z-ADDIACWTA    A$CWTA
416vACSR                   MOVELIACODE    A$CODE
416vACSR                   MOVELIAMEMO    A$MEMO
416vACSR                   MOVEL'%ADJUST' DRISUB    P
416vACSR         DRISUB    CAT  'TFR':0   DRISUB
416vACSR                   MOVEL@NOUPD    DRIRTN
416vACSR                   MOVE *OFF      CK4ERR  1
416vACSR                   MOVE *OFF      DRIERR  1
416vACSR                   EXSR ZZZCOP
415  C*
     C*  Increase warehouse qtu for "To" item.
416sMC                     Z-ADDTOQTY1    $AQTY1
414 AC                     MOVE #PROG     $APRG
414 AC                     MOVE '*INTER  '$ATYPE
414 AC                     MOVE '*STOCK  '$ACMD
414 AC                     CALL 'ADJQTY'
414 AC                     PARM           $ACMD   8
414 AC                     PARM           $APRG  10
414 AC                     PARM           $ATYPE  8
414 AC                     PARM $PWHSE    $AWHSE  30
414 AC                     PARM TOITEM    $AITEM 15
416sMC                     PARM           $AQTY1  70
416sD**                    PARM W1QT01    $AQTY1  70
414 AC                     PARM W1QT02    $AQTY2  70
414 AC                     PARM W1QT03    $AQTY3  70
414 AC                     PARM           $ARTQ1  70
414 AC                     PARM           $ARTQ2  70
414 AC                     PARM           $ARTQ3  70
414 AC                     PARM           $ARTN   8
414 AC                     PARM           $AERM
414 AC           $ARTN     IFEQ '*PGMQ   '
414 AC                     MOVE *ON       ERROR
414 AC                     MOVE $AMSG     #MSGK
414 AC                     EXSR ZMQMSG
414 AC                     ENDIF
     C*  Create adjustment record for "To" item.
415 ACSR                   CLEARIAREC
415 ACSR                   Z-ADD$PWHSE    IAWHSE
415 ACSR                   MOVE TOITEM    IAITEM
415 ACSR                   Z-ADDTODAY     IADATE
415 ACSR                   TIME           IATIME
415 ACSR                   MOVE #USER     IABY
415 ACSR                   MOVE TOWHDP    IAWHDP
415 ACSR                   MOVE TODISP    IADISP
500gAC*    Catchweight item, update extended weight transferred.
500gAC           TOCWGT    IFEQ 'Y'
500gAC                     Z-ADDEXWGFM    IACWTA
500gAC                     ELSE
415 ACSR                   Z-ADD0         IACWTA
500gAC                     ENDIF
416SACSR                   Z-ADDTOQTY1    IAQTY1
416sDC**         *IN59     IFEQ *ON
416sDC**         W1QT01    MULT SVUMQ2    IAQTY1
416sDC**                   ELSE
416sDC**                   Z-ADDW1QT01    IAQTY1
416sDC**                   ENDIF
415 ACSR                   Z-ADDW1QT02    IAQTY2
415 ACSR                   Z-ADDW1QT03    IAQTY3
416jMCSR                   MOVE W2ADJ     IACODE           Change Item
416jDC**                   MOVE 'CI'      IACODE           Change Item
415 ACSR         'From'    CAT  FMITEM:1  IAMEMO
415 ACSR                   WRITEIAREC
416vAC*
416vACSR                   EXSR ZZZISF
416vAC*
416vACSR                   EXSR ZZZS2D
416vACSR                   EXSR ZZZFS2
416vACSR                   Z-ADDIAWHSE    S$WHSE
416vACSR                   MOVE IAWHDP    S$WHDP
416vACSR                   MOVE IADISP    S$DISP
416vACSR                   MOVE IAITEM    A$ITEM
416vACSR                   Z-ADDIAQTY1    A$QTY1
416vACSR                   Z-ADDIAQTY2    A$QTY2
416vACSR                   Z-ADDIAQTY3    A$QTY3
416vACSR                   Z-ADDIACWTA    A$CWTA
416vACSR                   MOVELIACODE    A$CODE
416vACSR                   MOVELIAMEMO    A$MEMO
416vACSR                   MOVEL'%ADJUST' DRISUB    P
416vACSR         DRISUB    CAT  'TFR':0   DRISUB
416vACSR                   MOVEL@NOUPD    DRIRTN
416vACSR                   MOVE *OFF      CK4ERR  1
416vACSR                   MOVE *OFF      DRIERR  1
416vACSR                   EXSR ZZZCOP
415  C*
     C*
414 AC                     ENDIF
     C*
416rAC*  Update held quantities for item.
416rACSR         FMKEY     CHAINSLOT2               N79
416rAC*
416rACSR         SLSTAT    IFNE 'A '
416rACSR         SLSTAT    ANDNE'V '
416rACSR         SLSTAT    ANDNE'Z '
416rACSR                   Z-SUBW1QT01    $AQTY1
416rACSR                   Z-SUBW1QT02    $AQTY2
416rACSR                   Z-SUBW1QT03    $AQTY3
416rACSR                   EXSR ZZUHLD
416rACSR         ERROR     CABEQ*ON       ENDCRL
416rACSR                   ENDIF
416rAC*
416rACSR         TOKEY     CHAINSLOT2               N79
416rAC*
416rACSR         SLSTAT    IFNE 'A '
416rACSR         SLSTAT    ANDNE'V '
416rACSR         SLSTAT    ANDNE'Z '
416rACSR                   Z-ADDTOQTY1    $AQTY1
416rAC**                   Z-ADDW1QT01    $AQTY1
416rACSR                   Z-ADDW1QT02    $AQTY2
416rACSR                   Z-ADDW1QT03    $AQTY3
416rACSR                   EXSR ZZUHLD
416rACSR         ERROR     CABEQ*ON       ENDCRL
416rACSR                   ENDIF
     C*
     CSR         ENDCRL    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     C*
     C*   This program is only called with *CHANGE.
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT2   Get default values for add.
     C*
     CSR         ZZDFT2    BEGSR
     C*
     C*   This program is only called with *CHANGE.
     C*
     CSR                   ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZDFT3   Get default values for add.
416aAC*
416aACSR         ZZDFT3    BEGSR
416aAC*
416aAC*   This program is only called with *CHANGE.
416aAC*
416aACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZEND  End current task.
     C*
413eACSR         ZZEND     BEGSR
     C*  No current task to end.
     CSR         CURTRN    CABEQ0         ENDEND
     C*  End current task
     CSR                   Z-ADDCURTRN    WOTRN#
     CSR         PTKEY     CHAINPIRTRAN              79
     CSR         *IN79     IFEQ *OFF
     CSR         CURTYP    IFEQ 'D'
     CSR         CURTSK    ANDNE'IDLE  '
     CSR                   MOVE '3'       PTSTAT
     CSR                   ELSE
     CSR                   MOVE '4'       PTSTAT
     CSR                   ENDIF
     CSR                   MOVE 'N'       PTETYP
     CSR                   ENDIF
     C*
     CSR                   CALL @ADJTD
     CSR                   PARM '*END    '@PCMD   8
     CSR                   PARM '*INTER  '@PTYPE  8
     CSR                   PARM           PTPARM
     CSR                   PARM ' '       @PRTN   8
     CSR                   PARM ' '       @PMSG   4
     C*
     CSR                   UPDATPTREC                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDEND
     CSR                   ENDIF
     C*
     CSR         CURTYP    IFEQ 'D'
     C*
     C*        There is a posibility that a manual task might have
     C*        been added before the current task was ended. Hence
     C*        adjust the current task just ended, if there is
     C*        any overlapping manual task.
     C*
     CSR                   Z-ADDPTTRN#    SVTRN#
     C*  Past overnight. (PTEDTE > PTSDTE)
     CSR         PTEDTE    IFGT PTSDTE
     CSR                   Z-ADDPTEDTE    STDATE
     CSR                   ELSE
     CSR                   Z-ADDPTSDTE    STDATE
     CSR                   ENDIF
     CSR                   Z-ADDPTSDTE    ZZSDTE
     CSR                   Z-ADDPTEDTE    ZZEDTE
     CSR                   Z-ADDPTSTIM    ZZSTIM
     CSR                   Z-ADDPTETIM    ZZETIM
     CSR                   EXSR ZZCKU2
     CSR                   ENDIF
     C*
413eACSR         ENDEND    ENDSR
417 AC*
417 AC*----------------------------------------------------------------
417 AC*
417 AC*  ZZENDI  End current Indirect task.
417 AC*
417 ACSR         ZZENDI    BEGSR
417 AC*
417 AC*    Send currect Direct transaction number to ensure that this
417 AC*    transaction doesn't get closed by mistake.
417 ACSR                   Z-ADD$LTRN#    @PTRN#
417 AC*
417 ACSR                   CALL @ADJTR
417 ACSR                   PARM '*CLOSEI '@PCMD
417 ACSR                   PARM           #JOB
417 ACSR                   PARM           @PTRN#
417 ACSR                   PARM *BLANKS   @PTASK
417 ACSR                   PARM $PWHSE    @PWHSE
417 ACSR                   PARM *BLANKS   @PWHDP
417 ACSR                   PARM *BLANKS   @PSTYP
417 ACSR                   PARM 0         @PCUBE
417 ACSR                   PARM 0         @PSWGT
417 ACSR                   PARM 0         @PPCS
417 ACSR                   PARM 0         @PAISL
417 ACSR                   PARM 0         @PQTY1
417 ACSR                   PARM 0         @PQTY2
417 ACSR                   PARM 0         @PQTY3
417 ACSR                   PARM '0'       @PRTE
417 ACSR                   PARM ' '       @PPO
417 ACSR                   PARM ' '       @PGRP1
417 ACSR                   PARM ' '       @PGRP2
417 ACSR                   PARM ' '       @PRTN
417 ACSR                   PARM ' '       @PMSG
417 AC*
417 ACSR                   ENDSR
417 AC*
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL0   Fill screen 1 & 2 heading fields.
     C*
     CSR         ZZFIL0    BEGSR
413eDC***                  MOVE SLITEM    SVITEM
     CSR                   MOVE SLITEM    W1ITEM
414cACSR                   MOVE SLITEM    KYITEM
     CSR                   MOVE SLSTYP    W1STYP
     C*
     C*   Convert quantity to string.
     C*
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     C*
     CSR                   CALL 'SLOTQTY'
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     C*
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     C*
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     C*
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     C*
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     C*
     CSR                   PARM           STOCK1  50
     CSR                   PARM           STOCK2  30
     CSR                   PARM           STOCK3  30
     C*
     CSR                   PARM           AVAIL1  50
     CSR                   PARM           AVAIL2  30
     CSR                   PARM           AVAIL3  30
     C*
     CSR                   Z-ADDAVAIL1    $CQTY1
     CSR                   Z-ADDAVAIL2    $CQTY2
     CSR                   Z-ADDAVAIL3    $CQTY3
     C*
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $CCMD
     CSR                   PARM           $CPRG
     CSR                   PARM           $CQTY1
     CSR                   PARM           $CQTY2
     CSR                   PARM           $CQTY3
     CSR                   PARM           $CUM1
     CSR                   PARM           $CUM2
     CSR                   PARM           $CUM3
     CSR                   PARM           $CQSTR
     CSR                   PARM           $CUSTR
     CSR                   PARM           $CRTN
     CSR                   PARM           $CERM
     CSR                   MOVEL$CQSTR    W1CURQ
     C*
     C*  Get status description.
     C*
     CSR         SLSTAT    CHAINSLOTSTAT             79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   SSDESC
     CSR                   MOVELSLSTAT    SSDESC
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
413 DC*   Get Unit of measure fields
413 DC**                   MOVE *BLANKS   W1UM1
413 DC**                   MOVE *BLANKS   W1UM2
413 DC**                   MOVE *BLANKS   W1UM3
413 DC**                   EXSR ZZUOM
     C*
416s CSR                   MOVE *BLANKS   FMTYPE  1
416s CSR                   MOVE *BLANKS   TOTYPE  1
416s CSR                   Z-ADD0         UMQ2    50
416s CSR                   Z-ADD0         FMQMQ2  50
416s CSR                   Z-ADD0         TOUMQ2  50
     C*
     C*   Get item record.
     C*
     CSR         KEYIT     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
413 ACSR                   MOVE *BLANKS   ITDESC
413 ACSR                   MOVE *BLANKS   ITPDSC
416pACSR                   MOVE *BLANKS   ITTYPE
     CSR                   Z-ADD0         ITUMQ2
     CSR                   Z-ADD0         ITUMQ3
     CSR                   ENDIF
416sAC                     MOVE ITTYPE    FMTYPE
416sAC                     Z-ADDITUMQ2    FMUMQ2
416j C                     Z-ADDITUMQ2    SVUMQ2
416pACSR                   MOVE ITTYPE    SVTYPE
413 ACSR                   MOVELSLITEM    $IITEM
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   MOVE *BLANKS   $IDESC
415gACSR                   MOVELITDESC    W61DSC    P
415gACSR                   OTHER
413 ACSR                   MOVELITDESC    $IDESC
415gACSR                   ENDSL
413 ACSR                   MOVELITPDSC    $IPDSC
413 ACSR                   MOVE *BLANKS   $ISTR
413 ACSR                   CALL @FMTIT
413 ACSR                   PARM           $IITEM 15
413 ACSR                   PARM           $IDESC 30
413 ACSR                   PARM           $IPDSC 15
413 ACSR                   PARM           $ISTR  70
413 DCSR                   MOVE *BLANKS   W1ITEM
413 ACSR                   MOVEL$ISTR     W1ITEM
415gACSR                   MOVEL$ISTR     W61ITM
416oDC**                   MOVE *BLANKS   W1ITM
416oACSR                   MOVE SLITEM    W1ITM
413 AC*
413 AC*   Get SSB item, if one exists
413 AC*
413 ACSR                   MOVE *OFF      SSBFLG  1
413 ACSR                   MOVE *BLANKS   W1LBLS
413 ACSR                   MOVE *BLANKS   W1ITMS
413 ACSR         ITTYPE    IFEQ ' '
413 ACSR                   CALL 'GETSSB'
413 ACSR                   PARM ITWHSE    $GWHSE  30
413 ACSR                   PARM ITITEM    $GITEM 15
413 ACSR                   PARM ' '       #BITEM 15
413 ACSR                   PARM           #BDESC 30
413 ACSR                   PARM           #BPDSC 15
413 ACSR                   PARM           #BWHDP  5
413 ACSR                   PARM           #BSTYP  1
413 ACSR                   PARM           #BUM    2
413 ACSR                   PARM           #BUM2   2
413 ACSR                   PARM           #BUMQ2  30
413 ACSR                   PARM           #BUM3   2
413 ACSR                   PARM           #BUMQ3  30
413 ACSR                   PARM           #BRTN   8
413 AC*
413 ACSR         #BRTN     IFEQ '*FOUND  '
413 ACSR                   MOVE *ON       SSBFLG
413 ACSR                   MOVE *BLANKS   W1UM1
413 ACSR                   MOVE *BLANKS   W1UM2
413 ACSR                   MOVE *BLANKS   W1UM3
413 ACSR                   EXSR ZZUOM
413 ACSR                   MOVEL'SSB ('   W1LBLS
413 ACSR         W1LBLS    CAT  W1UM2:0   W1LBLS                               -
413 ACSR         W1LBLS    CAT  ')':0     W1LBLS
413 ACSR                   MOVE ':'       W1LBLS
413 AC*
413 ACSR                   MOVE *BLANKS   $ISTR
413 ACSR                   CALL @FMTIT
413 ACSR                   PARM           #BITEM 15
413 ACSR                   PARM           #BDESC 30
413 ACSR                   PARM           #BPDSC 15
413 ACSR                   PARM           $ISTR  70
413 ACSR                   MOVEL$ISTR     W1ITMS
413 AC*
413 ACSR                   ENDIF
413 AC*
413 ACSR                   ENDIF
    AC*
412 ACSR                   MOVE ITWHDP    W1WHDP  5
413EACSR                   MOVE ITSTYP    W1STYP
     C*
413 AC*   Get Unit of measure fields
413 ACSR                   MOVE *BLANKS   W1UM1
413 ACSR                   MOVE *BLANKS   W1UM2
413 ACSR                   MOVE *BLANKS   W1UM3
413 ACSR                   EXSR ZZUOM
     C*
     C*   Initialize entry fields
     C*
413eDC*R                   MOVE *BLANKS   W1DISP
     CSR                   Z-ADD0         W1QT01
     CSR                   Z-ADD0         W1QT02
     CSR                   Z-ADD0         W1QT03
     CSR                   Z-ADD0         W1QTY1
     CSR                   Z-ADD0         W1QTY2
     CSR                   Z-ADD0         W1QTY3
     C*
     C*   Initialize header fields. Save quantities and status for
     C*     comparison before updating.
     C*
     CSR                   EXSR ZZFIL0
416j CSR         *LIKE     DEFN ITUMQ2    SVUMQ2
416s CSR         *LIKE     DEFN ITUMQ2    FMUMQ2
416s CSR         *LIKE     DEFN $CQTY1    TOQTY1
     CSR         *LIKE     DEFN $CQTY1    SAVQT1
     CSR         *LIKE     DEFN $CQTY2    SAVQT2
     CSR         *LIKE     DEFN $CQTY3    SAVQT3
     CSR         *LIKE     DEFN SLSTAT    SAVST
     CSR                   Z-ADD$CQTY1    SAVQT1
     CSR                   Z-ADD$CQTY2    SAVQT2
     CSR                   Z-ADD$CQTY3    SAVQT3
     CSR                   MOVE SLSTAT    SAVST
     CSR         *LIKE     DEFN SLDISP    FMDISP
     CSR                   MOVE SLDISP    FMDISP
413EACSR                   MOVELSLITEM    W1ITM
     C*
415gACSR                   MOVE $PDISP    WOFROM
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     C*
     C*   Initialize entry fields
     C*
     CSR                   MOVE *BLANKS   W2QTY   7
413eACSR                   MOVE *BLANKS   W2DISP
416jACSR         *IN59     IFEQ *ON
416jACSR                   MOVEL'CI'      W2ADJ
416jACSR                   ELSE
416jACSR                   MOVE *BLANKS   W2ADJ
416jACSR                   ENDIF
     C*
     C*   Get item record.
     C*
     CSR         KEYIT1    CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
413eACSR                   MOVE *BLANKS   ITDESC
413eACSR                   MOVE *BLANKS   ITPDSC
413eACSR                   Z-ADD0         ITUMQ2
413eACSR                   Z-ADD0         ITUMQ3
415bACSR                   MOVE *BLANKS   ITDESG
413eACSR                   ENDIF
413eACSR                   MOVELW1ITM     $IITEM
415gACSR                   SELEC
415gACSR         #LLINE    WHEQ '16'
415gACSR                   MOVE *BLANKS   $IDESC
415gACSR                   MOVELITDESC    W62DSC    P
415gACSR                   OTHER
413eACSR                   MOVELITDESC    $IDESC
415gACSR                   ENDSL
413eACSR                   MOVELITPDSC    $IPDSC
413eACSR                   MOVE *BLANKS   $ISTR
413eACSR                   CALL @FMTIT
413eACSR                   PARM           $IITEM 15
413eACSR                   PARM           $IDESC 30
413eACSR                   PARM           $IPDSC 15
413eACSR                   PARM           $ISTR  70
413eACSR                   MOVE *BLANKS   W2ITEM
413eACSR                   MOVEL$ISTR     W2ITEM
415gACSR                   MOVEL$ISTR     W62ITM
     C*
413eACSR                   MOVE ITWHDP    NEWWHD  5
415bAC*
415bAC*    Retrieve hard/soft item designation code.
415bAC*
415bACSR                   MOVE *BLANKS   ITDTYP
415bACSR         ITDESG    IFGT *BLANKS
415bACSR                   MOVE '*VERIFY '$LCMD
415bACSR                   MOVE ITDESG    $LDSG
415bACSR                   CALL 'DS900'
415bACSR                   PARM           $LPARM
415bACSR                   SELEC
415bACSR         $LRTN     WHEQ '*OK     '
415bACSR                   MOVE $LTYP     ITDTYP
415bACSR         $LRTN     WHEQ '*ERROR  '
415bACSR                   MOVE *ON       ERROR
415bACSR                   MOVE *ON       *IN21
415bACSR                   MOVE *ON       *IN01
415bACSR                   MOVEL$LERM     ERRMSG
415bACSR                   EXSR ZM0105
415bACSR         $LRTN     WHEQ '*PGMQ   '
415bACSR                   MOVE *ON       ERROR
415bACSR                   MOVE *ON       *IN21
415bACSR                   MOVE *ON       *IN01
415bACSR                   MOVE $LMSG     #MSGK
415bACSR                   EXSR ZMQMSG
415bACSR                   ENDSL
415bACSR                   ENDIF
     C*
     C*   Get SSB item, if one exists
     C*
413eACSR                   MOVE *OFF      SSBFLG  1
413eACSR                   MOVE *BLANKS   W2LBLS
413eACSR                   MOVE *BLANKS   W2ITMS
413eACSR         ITTYPE    IFEQ ' '
413eACSR                   CALL 'GETSSB'
413eACSR                   PARM ITWHSE    $GWHSE  30
413eACSR                   PARM ITITEM    $GITEM 15
413eACSR                   PARM ' '       #BITEM 15
413eACSR                   PARM           #BDESC 30
413eACSR                   PARM           #BPDSC 15
413eACSR                   PARM           #BWHDP  5
413eACSR                   PARM           #BSTYP  1
413eACSR                   PARM           #BUM    2
413eACSR                   PARM           #BUM2   2
413eACSR                   PARM           #BUMQ2  30
413eACSR                   PARM           #BUM3   2
413eACSR                   PARM           #BUMQ3  30
413eACSR                   PARM           #BRTN   8
413eAC*
413eACSR         #BRTN     IFEQ '*FOUND  '
413eACSR                   MOVE *ON       SSBFLG
413eACSR                   MOVE *BLANKS   W2UM1   5
413eACSR                   MOVE *BLANKS   W2UM2   5
413eACSR                   MOVE *BLANKS   W2UM3   5
413eACSR                   EXSR ZZUOM
413eACSR                   MOVE W1UM1     W2UM1
413eACSR                   MOVE W1UM2     W2UM2
413eACSR                   MOVE W1UM3     W2UM3
413eACSR                   MOVEL'SSB ('   W2LBLS
413eACSR         W2LBLS    CAT  W2UM2:0   W2LBLS                               -
413eACSR         W2LBLS    CAT  ')':0     W2LBLS
413eACSR                   MOVE ':'       W2LBLS
413eAC*
413eACSR                   MOVE *BLANKS   $ISTR
413eACSR                   CALL @FMTIT
413eACSR                   PARM           #BITEM 15
413eACSR                   PARM           #BDESC 30
413eACSR                   PARM           #BPDSC 15
413eACSR                   PARM           $ISTR  70
413eACSR                   MOVEL$ISTR     W2ITMS
413eAC*
413eACSR                   ENDIF
413eAC*
413eACSR                   ENDIF
     C*  Show the qty from screen 1
413eACSR                   Z-ADDW1QT01    $CQTY1
413eACSR                   Z-ADDW1QT02    $CQTY2
413eACSR                   Z-ADDW1QT03    $CQTY3
413eAC*
413eACSR                   CALL 'CVTQTY'
413eACSR                   PARM           $CCMD
413eACSR                   PARM           $CPRG
413eACSR                   PARM           $CQTY1
413eACSR                   PARM           $CQTY2
413eACSR                   PARM           $CQTY3
413eACSR                   PARM           $CUM1
413eACSR                   PARM           $CUM2
413eACSR                   PARM           $CUM3
413eACSR                   PARM           $CQSTR
413eACSR                   PARM           $CUSTR
413eACSR                   PARM           $CRTN
413eACSR                   PARM           $CERM
413eACSR                   MOVEL$CQSTR    W2CURQ
     CSR                   ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZFIL3   Fill screen 3 fields with info from file.
416aAC*
416aACSR         ZZFIL3    BEGSR
416aAC*
415gACSR                   SELEC
416aAC*
416aAC*    16 Line screen in use.
415gACSR         #LLINE    WHEQ '16'
416aACSR                   MOVELW61ITM    W63ITM
416aACSR                   MOVELW61DSC    W63DSC
416aAC*
416aACSR                   OTHER
416aAC*
416aACSR                   MOVELW1ITEM    W3ITEM
416aACSR                   MOVELW1LBLS    W3LBLS
416aACSR                   MOVELW1ITMS    W3ITMS
416aAC*
416aACSR                   ENDSL
416aAC*
416aACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     C*   Get record from main file.
     C*
414cMCSR         FMKEY     CHAINRECORD              N79
414cDC*R         FILEKY    CHAINRECORD              N79
     C*
     C*  Record not found.
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
500kACSR                   SELEC
500kACSR         E$LNG     WHEQ 'SP'
500kACSR                   MOVE DESCSP,1  ERRMSG
500kACSR                   OTHER
     CSR                   MOVE DESC,1    ERRMSG
500kACSR                   ENDSL
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM7973
     CSR                   GOTO ENDGT1
     CSR                   ENDIF
     C*
     C*  Slot does not contain an item.
     C*
     CSR         SLITEM    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM15
     CSR                   GOTO ENDGT1
     CSR                   ENDIF
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET2   Get record(s) for screen 2.
     C*
     CSR         ZZGET2    BEGSR
     C*
413eDC**                   EXSR ZZGET1
     C*
     CSR         ENDGT2    ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZGET3   Get record(s) for screen 3.
416aAC*
416aACSR         ZZGET3    BEGSR
416aAC*
416aAC*
416aACSR         ENDGT3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZIDLE   Create and Start an Idle task.
     C*
413eACSR         ZZIDLE    BEGSR
     CSR                   CALL 'PIRTRN#'
     CSR                   PARM           PTTRN#
     CSR                   MOVE '2'       PTSTAT
     CSR                   MOVEL'IDLE  '  PTTASK
     CSR                   MOVEL'IDLE  '  T#TASK
     CSR         TKKEY     CHAINTASK                 77
     CSR                   MOVE TKCAT     PTCAT
     CSR                   MOVE TKSUB     PTSUB
     CSR                   SELEC
     CSR         TKTLVL    WHEQ 'S'
     CSR                   Z-ADD$PWHSE    PTWHSE
     CSR                   MOVE W1WHDP    PTWHDP
     CSR                   MOVE W1STYP    PTSTYP
     CSR         TKTLVL    WHEQ 'D'
     CSR                   Z-ADD$PWHSE    PTWHSE
     CSR                   MOVE W1WHDP    PTWHDP
     CSR                   MOVE *BLANKS   PTSTYP
     CSR                   OTHER
     CSR                   Z-ADD$PWHSE    PTWHSE
     CSR                   MOVE *BLANKS   PTWHDP
     CSR                   MOVE *BLANKS   PTSTYP
     CSR                   ENDSL
     CSR                   MOVE W1SHFT    PTSHFT
     CSR                   MOVE W1CREW    PTCREW
     CSR                   Z-ADDW1EMP#    PTEMP#
     CSR                   Z-ADD0         PTCUBE
     CSR                   Z-ADD0         PTSWGT
     CSR                   Z-ADD0         PTPCS
     CSR                   Z-ADD0         PTAISL
     CSR                   Z-ADD0         PTQTY1
     CSR                   Z-ADD0         PTQTY2
     CSR                   Z-ADD0         PTQTY3
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
415gACSR                   Z-ADD$CVD8O    PTRDTE
     CSR                   Z-ADD$CVD8O    PTGDTE
     CSR                   TIME           PTGTIM
     CSR                   Z-ADD$CVD8O    PTSDTE
     CSR                   TIME           PTSTIM
     CSR                   Z-ADD0         PTEDTE
     CSR                   Z-ADD0         PTETIM
     CSR                   MOVE *BLANKS   PTETYP
     CSR                   Z-ADD0         PTCDTE
     CSR                   Z-ADD0         PTCTIM
     CSR                   Z-ADD0         PTDMIN
     CSR                   Z-ADD0         PTIMIN
     CSR                   MOVE *BLANKS   PTRTPO
     CSR                   WRITEPTREC                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM71
     CSR                   GOTO ENDIDL
     CSR                   ENDIF
     C*
413eACSR         ENDIDL    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PWHDP
     CSR                   KFLD           $PDISP
     C*
     C*  Define key for main file.(FROM SLOT)
     C*
     CSR         FMKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PWHDP
     CSR                   KFLD           $PDISP
     C*
     C*  Define key for main file.(TO SLOT)
     C*
     CSR         TOKEY     KLIST
     CSR                   KFLD           $PWHSE
412 DC*R                   KFLD           $PWHDP
413eDC*R                   KFLD           ITWHDP
413eACSR                   KFLD           ITWHDP
413eMCSR                   KFLD           W2DISP
500fAC*
500fAC*    Key used to Zero verify base/virtual slots.
500fAC           *LIKE     DEFN SLDISP    KYVDSP
500fAC           KYSL2A    KLIST
500fAC                     KFLD           LBWHSE
500fAC                     KFLD           LBWHDP
500fAC                     KFLD           KYVDSP
     C*
     CSR         CKKEY     KLIST
     CSR                   KFLD           $PWHSE
500cDC*R                   KFLD           $PWHDP
500cMCSR                   KFLD           ITWHDP
     CSR                   KFLD           $VDISP
     C*
     CSR         VSKEY     KLIST
     CSR                   KFLD           $PWHSE
500cDC*R                   KFLD           $PWHDP
500cMCSR                   KFLD           ITWHDP
     CSR                   KFLD           VSDISP
     C*
     C*  Define key for PIRITEM file.
     C*
     CSR         KEYIT     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           SLITEM
     C*
     C*  Define key for PIRITEM file.
     C*
413eACSR         KEYIT1    KLIST
413eACSR                   KFLD           $PWHSE
413eACSR                   KFLD           W1ITM
     C*
     C*  Define key for itemdef file.
     C*
     CSR         IDKEY     KLIST
     CSR                   KFLD           $PWHSE
413 DC**                   KFLD           W1ITEM
413 MC                     KFLD           ITITEM
     CSR                   KFLD           SLSDEF
     C*
     C*  Define partial key for options file.
     C*
     CSR         *LIKE     DEFN OPDCOD    KYCODE
     CSR         KEYOPD    KLIST
     CSR                   KFLD           KYCODE
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PWHDP
     C*
     C*  Define partial key for PIRTRAN2 file.
     C*
413EACSR         PTKEY2    KLIST
413EACSR                   KFLD           W1EMP#
413EACSR                   KFLD           STDATE
     C*
     C*  Define key for PIRTRAN file.
     C*
410 ACSR         *LIKE     DEFN PTTRN#    WOTRN#
410 ACSR         PTKEY     KLIST
410 ACSR                   KFLD           WOTRN#
     C*
410 ACSR         TKKEY     KLIST
410 ACSR                   KFLD           T#TASK  6
     C*
     C*  Define key for PIRTRAN file.
     C*
413EACSR         PTKEY$    KLIST
413EACSR                   KFLD           $PTRN#
414cAC*
414cAC*  Define key for ITEMMSC file.
414cAC*
414cACSR         *LIKE     DEFN $PITEM    KYITEM
414cACSR         ITKEY     KLIST
414cACSR                   KFLD           $PWHSE
415aACSR                   KFLD           W1ITM
415aDC***                  KFLD           KYITEM
414c C*
414c C*  Define key for options file, System values.
414c C*
414cACSR         *LIKE     DEFN $PWHSE    KYWHSE
414cACSR         OPTSKY    KLIST
414cACSR                   KFLD           KYWHSE
414cACSR                   KFLD           OPCODE
414cAC*
414cAC*  Define partial key for SLOT3 file.
414cAC*
414cACSR         *LIKE     DEFN SLSTAT    K3STAT
414cACSR         *LIKE     DEFN SLPICK    K3PICK
414cACSR         KEYS3     KLIST
414cACSR                   KFLD           $PWHSE
500cDC*R                   KFLD           KYITEM
500cMCSR                   KFLD           ITITEM
414cACSR                   KFLD           K3STAT
414cACSR                   KFLD           K3PICK
416aAC*
416aAC*    Define key for VSLOT1 file. (From slot)
416aAC*
416aACSR         *LIKE     DEFN LBDISP    SVFDIS
416aACSR         SVFKEY    KLIST
416cMCSR                   KFLD           $PWHSE
416cMCSR                   KFLD           $PWHDP
416aACSR                   KFLD           SVFDIS
416aACSR         *LIKE     DEFN LBWHDP    KYWHDP
416aACSR         *LIKE     DEFN LBDISP    KYDISP
416aACSR         KEYVS2    KLIST
416aACSR                   KFLD           KYWHSE
416aACSR                   KFLD           KYWHDP
416aACSR                   KFLD           KYDISP
     C*
     C*  Convert today's date into century format.
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TODAY   80
500aACSR                   Z-ADD$CVD8O    CKDATE  80
     C*
     CSR         *LIKE     DEFN $CQTY1    W1QTY1
     CSR         *LIKE     DEFN $CQTY2    W1QTY2
     CSR         *LIKE     DEFN $CQTY3    W1QTY3
412 ACSR         *LIKE     DEFN SLSTK1    ULSTK1
412 ACSR         *LIKE     DEFN SLSTK2    ULSTK2
412 ACSR         *LIKE     DEFN SLSTK3    ULSTK3
     CSR         *LIKE     DEFN SLSTK1    CHGQT1
     CSR         *LIKE     DEFN SLSTK2    CHGQT2
     CSR         *LIKE     DEFN SLSTK3    CHGQT3
     CSR         *LIKE     DEFN SLSTK1    NEWQT1
     CSR         *LIKE     DEFN SLSTK2    NEWQT2
     CSR         *LIKE     DEFN SLSTK3    NEWQT3
     CSR         *LIKE     DEFN SLITEM    SVITEM
     CSR         *LIKE     DEFN SLENTD    SVENTD
     CSR         *LIKE     DEFN SLEXPD    SVEXPD
     CSR         *LIKE     DEFN SLPRTY    SVPRTY
     CSR         *LIKE     DEFN SLSLFD    SVSLFD
     CSR         *LIKE     DEFN SLACTV    SVACTV
     CSR         *LIKE     DEFN SLBLD     SVBLD
414cACSR         *LIKE     DEFN SLPICK    SVPICK
414cACSR         *LIKE     DEFN SLSTK1    NWSTK1
414cACSR         *LIKE     DEFN SLSTK2    NWSTK2
414cACSR         *LIKE     DEFN SLSTK3    NWSTK3
     C***
     CSR         *LIKE     DEFN SLWHSE    PHWHSE
     CSR         *LIKE     DEFN SLWHDP    PHWHDP
416qACSR         *LIKE     DEFN SLSTAT    PHSTAT
     CSR         *LIKE     DEFN SLAISL    PHAISL
     CSR         *LIKE     DEFN SLLOC     PHLOC
     CSR         *LIKE     DEFN SLRLVL    PHRLVL
     CSR         *LIKE     DEFN SLHAND    PHHAND
     CSR         *LIKE     DEFN SLSIDE    PHSIDE
     CSR         *LIKE     DEFN SLSTYP    PHSTYP
     CSR         *LIKE     DEFN SLDISP    PHDISP
     CSR         *LIKE     DEFN SLSDEF    PHSDEF
     CSR         *LIKE     DEFN SLDESG    PHDESG
     CSR         *LIKE     DEFN SLPSEQ    PHPSEQ
     CSR         *LIKE     DEFN SLACTV    PHACTV
     CSR         *LIKE     DEFN SLBLD     PHBLD
     CSR         *LIKE     DEFN SLSLFD    PHSLFD
     CSR         *LIKE     DEFN SLDISP    ODISP
412 ACSR         *LIKE     DEFN SLEXPD    EXPD
412 ACSR         *LIKE     DEFN SLEXPD    ULEXPD
     C*
413EACSR         *LIKE     DEFN PTSTIM    ZZSTIM
413EACSR         *LIKE     DEFN PTETIM    ZZETIM
413EACSR         *LIKE     DEFN PTSDTE    ZZSDTE
413EACSR         *LIKE     DEFN PTEDTE    ZZEDTE
413EACSR         *LIKE     DEFN PTSTIM    STRTIM
413EACSR         *LIKE     DEFN PTETIM    FINTIM
415bACSR         *LIKE     DEFN $LTYP     SLDTYP
415bACSR         *LIKE     DEFN $LTYP     ITDTYP
415cACSR         *LIKE     DEFN PTTRN#    SVTRN1
415cACSR         *LIKE     DEFN PTTRN#    SVTRN2
415cACSR         *LIKE     DEFN PTTRN#    SVTRN3
415cACSR         *LIKE     DEFN PTPCS     WKPCS
415cACSR         *LIKE     DEFN PTSWGT    WKSWGT
415cACSR         *LIKE     DEFN PTCUBE    WKCUBE
415cACSR         *LIKE     DEFN PTSWGT    SVWGT1
415cACSR         *LIKE     DEFN PTCUBE    SVCUB1
415cACSR         *LIKE     DEFN PTSWGT    SVWGT2
415cACSR         *LIKE     DEFN PTCUBE    SVCUB2
415cACSR         *LIKE     DEFN PTSWGT    SVWGT3
415cACSR         *LIKE     DEFN PTCUBE    SVCUB3
     C*
413EACSR                   MOVE *OFF      FOREVR  1
415cACSR                   MOVE '*NO '    NEWTRN  4
415dACSR                   MOVE *OFF      DTEOLD  1
415dACSR                   MOVE *OFF      DTEOFL  1
415hACSR                   MOVE *OFF      TOSLUP  1
416aACSR                   MOVE *OFF      SKPSLT  1
     CSR                   MOVE #PROG     $LPRG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
416eACSR                   Z-ADD0         A$TRN#
416eACSR                   MOVEL'TFRMOV'  A$TASK    P
     C*
414gACSR                   Z-ADD0         WOROW
414gACSR                   Z-ADD0         WOCOL
416gACSR                   MOVE '*NO '    ABORT   4
415gAC*
415gAC*   Get screen size being used.
415gAC*
415gACSR                   CALL 'PIRRFSCR'
415gACSR                   PARM '*GET'    #LCMD   8
415gACSR                   PARM           #LLINE  2
415gACSR                   PARM           #LCOL   3
417cAC*
417cAC*    - Get default values for the user.
417cAC*
417cACSR                   CALL 'GETUSER'
417cACSR                   PARM           #USER
417cACSR                   PARM 0         #WHSE   30
417cACSR                   PARM 0         #EMP#   50
417cACSR                   PARM           #FNAM  15
417cACSR                   PARM           #INIT   1
417cACSR                   PARM           #LNAM  20
417cACSR                   PARM           #WHDP   5
417cACSR                   PARM           #STYP   1
417cACSR                   PARM           #SHFT   6
417cACSR                   PARM           #CREW   6
417cACSR                   PARM 0         #NHRS   31
417cACSR                   PARM           #RTN    8
500kACSR                   PARM           E$BPU   1
500kACSR                   PARM           E$LNG   2
500kACSR         #RTN      IFNE '*OK'
500kACSR                   MOVE 'EN'      E$LNG
500kACSR                   ENDIF
     C*
     C*   Get warehouse description.
     C*
     CSR         $PWHSE    CHAINWAREHS               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   ENDIF
     CSR                   MOVE $PWHSE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*LEFT   '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVEL$CSTR     WOWHSE  3
417dAC*
417dAC*    Retrieve Expiration/Entered date options.
417dACSR                   EXSR ZZEEDT
417eAC*
417eAC*    Retrieve Virtual Slot options.
417eACSR                   EXSR ZZVSOP
500hAC*
500hAC*    Retrieve Check "To Slot" quantity option.
500hACSR                   EXSR ZZCQTY
414c C*
414cAC*
414cAC*   Get system options.
414cAC*
414cACSR                   MOVE *ZEROS    KYWHSE
414cACSR                   MOVE '*SYSTEM 'OPCODE
414cACSR         OPTSKY    CHAINOPTIONS              79
414cACSR         *IN79     IFEQ *ON
414cACSR                   MOVE 'N'       OPMPCK
414cACSR                   ELSE
414cACSR                   MOVE OPDATA    OPDAT2
414cACSR                   ENDIF
414cACSR                   MOVE *ZEROS    NBRPCK  50
414cAC*
     C*
     C*   Get department description.
     C*
     CSR         KEYWD     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PWHDP
     CSR         KEYWD     CHAINWHDEPT               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WDCODE
     CSR                   MOVE *BLANKS   WDDESC
     CSR                   ENDIF
     C*
     C*   Get department Options.
     C*
     CSR                   MOVE '*PICK   'KYCODE
     CSR         KEYOPD    CHAINOPTIOND              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE 'N'       OPMPUT
     CSR                   ENDIF
     C*
     C*   Load handstack array with codes (A..Z, AA..AZ, ...)
     C*
     CSR                   Z-ADD0         K       30
     CSR         1         DO   27        I       20
     CSR         2         DO   27        J       20
     CSR                   ADD  1         K
     CSR         LTR,I     CAT  LTR,J     HND,K
     CSR                   ENDDO
     CSR                   ENDDO
     C*
414cMCSR         FMKEY     CHAINRECORD              N79
414cDC*R         FILEKY    CHAINRECORD              N79
     C*
     C*     Save FIFO information from "From" slot
     C*
     CSR                   Z-ADDSLPRTY    SVPRTY
     CSR                   Z-ADDSLEXPD    SVEXPD
     CSR                   Z-ADDSLENTD    SVENTD
     CSR                   Z-ADDSLSLFD    SVSLFD
     CSR                   MOVE SLACTV    SVACTV
     CSR                   MOVE SLBLD     SVBLD
414fACSR                   MOVE SLPICK    FMPICK  1
     C*
413EACSR         *LIKE     DEFN USEMP#    W1EMP#
413EACSR         *LIKE     DEFN USSTYP    W1STYP
413EACSR         *LIKE     DEFN USSHFT    W1SHFT
413EACSR         *LIKE     DEFN USCREW    W1CREW
413EACSR         USKEY     KLIST
413EACSR                   KFLD           #USER
413EAC*
413EACSR         USKEY     CHAINPIRUSER              79
413EACSR         *IN79     IFEQ *OFF
413EACSR                   Z-ADDUSEMP#    W1EMP#
413EACSR                   MOVE USSTYP    W1STYP
413EACSR                   MOVE USSHFT    W1SHFT
413EACSR                   MOVE USCREW    W1CREW
413EACSR                   ELSE
413EACSR                   Z-ADD0         W1EMP#
413EACSR                   MOVE *BLANKS   W1STYP
413EACSR                   MOVE *BLANKS   W1SHFT
413EACSR                   MOVE *BLANKS   W1CREW
413EACSR                   ENDIF
416bAC*
416bAC*  Define key for PIRTRAN1 file.
416bAC*
416bACSR         *LIKE     DEFN PTSTAT    KYSTAT
416bACSR         PTKEY1    KLIST
416bACSR                   KFLD           W1EMP#
416bACSR                   KFLD           KYSTAT
410 AC*
410 ACSR         *LIKE     DEFN PTSDTE    STDATE
410 ACSR         *LIKE     DEFN PTSTIM    STTIME
410 ACSR         PTKE22    KLIST
410 ACSR                   KFLD           W1EMP#
410 ACSR                   KFLD           STDATE
410 ACSR                   KFLD           STTIME
     C*
     C*   Select first screen to display.
     C*
412 ACSR                   MOVE *BLANKS   ODISP
416aACSR                   MOVE *BLANKS   VFYSLT  4
416aACSR                   MOVE *OFF      VRTSLT  1
     CSR                   MOVE *OFF      LOCK    1
     CSR                   MOVE *OFF      EXIST   1
     CSR                   MOVE *OFF      NEWVS   1
     CSR                   Z-ADD1         USESC   10
416pACSR         *LIKE     DEFN ITTYPE    SVTYPE
413eDC**         USESC     IFEQ 1
     CSR                   EXSR SCR01I
413eDC*R                   ELSE
413eDC*R                   EXSR SCR02I
413eDC*R                   ENDIF
412 ACSR                   MOVE *BLANKS   ODISP
     CSR                   ENDSR
416aAC*
416aAC*
417dAC*----------------------------------------------------------------
417dAC*
417dAC*  ZZAVAL   Caculate Available qty for slot.
417dAC*
417dACSR         ZZAVAL    BEGSR
417dAC*
417dAC*    Get stock quantity in overflow slot.
417dAC*
417dACSR                   CALL 'SLOTQTY'
417dACSR                   PARM           SLSTK1
417dACSR                   PARM           SLSTK2
417dACSR                   PARM           SLSTK3
417dAC*
417dACSR                   PARM           SLALC1
417dACSR                   PARM           SLALC2
417dACSR                   PARM           SLALC3
417dAC*
417dACSR                   PARM           SLTFR1
417dACSR                   PARM           SLTFR2
417dACSR                   PARM           SLTFR3
417dAC*
417dACSR                   PARM           SLPCK1
417dACSR                   PARM           SLPCK2
417dACSR                   PARM           SLPCK3
417dAC*
417dACSR                   PARM           SLRCV1
417dACSR                   PARM           SLRCV2
417dACSR                   PARM           SLRCV3
417dAC*
417dACSR                   PARM           STOCK1  50
417dACSR                   PARM           STOCK2  30
417dACSR                   PARM           STOCK3  30
417dAC*
417dACSR                   PARM           AVAIL1  50
417dACSR                   PARM           AVAIL2  30
417dACSR                   PARM           AVAIL3  30
417dAC*
417dACSR                   ENDSR
417dAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZCHKB   Check if base slot has quantity.
416aAC*
416aACSR         ZZCHKB    BEGSR
416aACSR                   MOVE *OFF      BSZERO  1
416aAC*
416aAC*    Retrieve base slot status.
416aACSR                   CALL 'RTNSTAT'
416aACSR                   PARM           KYWHSE
416aACSR                   PARM           KYWHDP
416aACSR                   PARM           VSPDIS
416aACSR                   PARM           $PSTAT  2
416aACSR         $PSTAT    IFEQ 'Z '
416aACSR         $PSTAT    OREQ 'V '
416aACSR                   MOVE *ON       BSZERO
416aACSR                   ENDIF
416aAC*
416aACSR         ENDCKB    ENDSR
416aAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZCHKV   Check if slot has virtual slots tied to it.
416aAC*
416aACSR         ZZCHKV    BEGSR
416aACSR                   MOVE *OFF      ERROR
416aACSR                   MOVE *OFF      HASVS   1
416aAC*
416aACSR         KEYVS2    SETLLVSLOT2
416aACSR         FOREVR    DOUNEFOREVR
416aACSR         KEYVS2    READEVSLOT2              N  7879
416aACSR         *IN79     IFEQ *ON
416aACSR                   LEAVE
416aACSR                   ENDIF
416aAC*    If slot read same as one selected for transfer, skip
416aAC*    this slot and see if any other virtuals exist.
416aACSR         SKPSLT    IFEQ *ON
416aACSR         VSDISP    ANDEQSVFDIS
416aACSR                   ITER
416aACSR                   ENDIF
416aAC*  Skip, if slot is empty
416aACSR                   CALL 'RTNSTAT'
416aACSR                   PARM           KYWHSE
416aACSR                   PARM           KYWHDP
416aACSR                   PARM           VSDISP
416aACSR                   PARM           $PSTAT
416aACSR         $PSTAT    IFEQ 'Z '
416aACSR                   ITER
416aACSR                   ENDIF
416aAC*
416aACSR                   MOVE *ON       HASVS
416aACSR                   ENDDO
416aAC*
416aACSR                   ENDSR
416aAC*
500hAC*----------------------------------------------------------------
500hAC*
500hAC*  ZZCQTY   Retrieve Check "To Slot" quantity option.
500hAC*
500hACSR         ZZCQTY    BEGSR
500hAC*
500hACSR                   Z-ADD$PWHSE    KYWHSE
500hACSR                   MOVE '*REPLEN 'OPCODE
500hACSR         OPTSKY    CHAINOPTIONS              79
500hAC*
500hAC*    Record not found. Set defaults to No
500hAC*
500hACSR         *IN79     IFEQ *ON
500hACSR                   MOVE 'N'       OPCQTY
500hAC*
500hAC*    Record found. Load file data structure.
500hACSR                   ELSE
500hACSR                   MOVE OPDATA    OPDTA3
500hAC*
500hACSR                   ENDIF
500hAC*
500hACSR                   ENDSR
500hAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZCVDT  Convert date to proper format.
416aAC*
416aACSR         ZZCVDT    BEGSR
416aAC*
416aAC*    Convert date into proper format.
416aAC*
416aACSR                   CALL @CVTDT
416aACSR                   PARM           $CVTDT
416aAC*
416aACSR         ENDCVD    ENDSR
417dAC*
417dAC*----------------------------------------------------------------
417dAC*
417dAC*  ZZDATE   Update Expiration/Entered dates for replenishment.
417dAC*
417dACSR         ZZDATE    BEGSR
417dAC*
417dACSR                   SELEC
417dAC*
417dAC*    Use From Slot date.
417dACSR         OPSLTF    WHEQ '1'
417dAC*
417dAC*      Update slot entered date.
417dACSR         SVENTD    IFGT *ZEROS
417dACSR                   Z-ADDSVENTD    SLENTD
417dACSR                   ENDIF
417dAC*
417dAC*      Update slot expiration date.
417dACSR         SVEXPD    IFGT *ZEROS
417dACSR                   Z-ADDSVEXPD    SLEXPD
417dACSR                   ENDIF
417dAC*
417dAC*    Use Oldest date.
417dACSR         OPSLTF    WHEQ '2'
417dAC*
417dAC*      Update slot entered date.
417dACSR         SVENTD    IFGT *ZEROS
417dACSR         SVENTD    ANDLTSLENTD
417dACSR         SLENTD    OREQ *ZEROS
417dACSR                   Z-ADDSVENTD    SLENTD
417dACSR                   ENDIF
417dAC*
417dAC*      Update slot expiration date.
417dACSR         SVEXPD    IFGT *ZEROS
417dACSR         SVEXPD    ANDLTSLEXPD
417dACSR         SLEXPD    OREQ *ZEROS
417dACSR                   Z-ADDSVEXPD    SLEXPD
417dACSR                   ENDIF
417dAC*
417dAC*    Use From Slot date if To Slot avail. qty is zero.
417dACSR         OPSLTF    WHEQ '3'
417dAC*
417dAC*      Update slot entered date.
417dACSR         SVENTD    IFGT *ZEROS
417dACSR         DTEOFL    ANDEQ*ON
417dACSR                   Z-ADDSVENTD    SLENTD
417dACSR                   ENDIF
417dAC*
417dAC*      Update slot expiration date.
417dACSR         SVEXPD    IFGT *ZEROS
417dACSR         DTEOFL    ANDEQ*ON
417dACSR                   Z-ADDSVEXPD    SLEXPD
417dACSR                   ENDIF
417dAC*
417dACSR                   ENDSL
417dAC*
417dACSR                   ENDSR
417dAC*
417dAC*----------------------------------------------------------------
417dAC*
417dAC*  ZZEEDT   Retrieve Expiration/Entered date options.
417dAC*
417dACSR         ZZEEDT    BEGSR
417dAC*
417dACSR                   Z-ADD$PWHSE    KYWHSE
417dACSR                   MOVE '*DATEOPT'OPCODE
417dACSR         OPTSKY    CHAINOPTIONS              79
417dAC*
417dAC*    Record not found. Set defaults to use Oldest Date.
417dAC*
417dACSR         *IN79     IFEQ *ON
417dACSR                   MOVE '2'       OPLTDN
417dACSR                   MOVE '2'       OPODRP
417dACSR                   MOVE '2'       OPSLTF
417dACSR                   MOVE '2'       OPPARC
417dACSR                   MOVE '2'       OPPART
417dAC*
417dAC*    Record found. Load file data structure.
417dACSR                   ELSE
417dACSR                   MOVE OPDATA    OPDTA1
417dAC*
417dACSR                   ENDIF
417dAC*
417dACSR                   ENDSR
417dAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZEXCP Write item exception record to file.
416aAC*
416aACSR         ZZEXCP    BEGSR
416aAC*
416aAC*    Write an item exception record.
416aACSR                   Z-ADD$PWHSE    EXWHSE
416aACSR                   MOVE $PWHDP    EXWHDP
416aACSR                   MOVE SLSTYP    EXSTYP
416uDC*R                   MOVE $PITEM    EXITEM
4164MCSR                   MOVE SLITEM    EXITEM
416aACSR                   MOVE $PDISP    EXFDIS
416aACSR                   MOVE *BLANKS   EXTDIS
416uDC*R                   MOVE PTTASK    EXTASK
416uMCSR                   MOVE 'TFRMOV'  EXTASK
416aAC*    Get todays date.
416aACSR                   MOVE '*CURCMD '$CVCMD
416aACSR                   EXSR ZZCVDT
416aACSR                   Z-ADD$CVD8O    EXGDTE
416aACSR                   TIME           EXGTIM
416aACSR                   MOVE #USER     EXGBY
416aACSR                   MOVE '1 '      EXESTA
416aACSR                   WRITEEXREC
416aAC*
416aACSR         ENDEXC    ENDSR
417cAC*
417cAC*----------------------------------------------------------------
417cAC*
417cAC*  ZZLLP    Prompt user to scan Lot/License plate tracking info.
417cAC*
417cACSR         ZZLLP     BEGSR
417cAC*
417cACSR                   MOVE *BLANKS   WWLLP#
417cAC*
417cACSR                   SELEC
417cAC*    Get Current identifier.
417cACSR         LLPTP1    WHEQ '*GETCUR '
417cAC*
417cACSR                   SELEC
417cAC*    Scan license plate.
417cACSR         LICTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'EN'
417cACSR                   MOVELLLP01     WWTXT
500kACSR         LICTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   MOVELLLP01S    WWTXT
417cAC*    Scan lot number.
417cACSR         LOTTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'EN'
417cACSR                   MOVELLLP02     WWTXT
500kACSR         LOTTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   MOVELLLP02S    WWTXT
417cACSR                   ENDSL
417cAC*
417cAC*    Get New identifier.
417cACSR         LLPTP1    WHEQ '*GETNEW '
417cACSR                   SELEC
417cAC*    Scan new license plate.
417cACSR         LICTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'EN'
417cACSR                   MOVELLLP03     WWTXT
500kACSR         LICTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   MOVELLLP03S    WWTXT
417cAC*    Scan new lot number.
417cACSR         LOTTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'EN'
417cACSR                   MOVELLLP04     WWTXT
500kACSR         LOTTRK    WHEQ '*YES'
500kACSR         E$LNG     ANDEQ'SP'
500kACSR                   MOVELLLP04S    WWTXT
417cACSR                   ENDSL
417cACSR                   ENDSL
417cAC*
417cAC*    Display window to capture lot/license plate info.
417cAC*
417cACSR         FOREVR    DOWEQFOREVR
417cAC*    Write message subfile to window.
417cACSR                   EXSR ZMDMSW
417cAC*
417cACSR                   EXFMTWDWLLP
417cAC*
417cAC*    Clear message subfile.
417cACSR                   EXSR ZMCMSW
417cAC*
417cACSR                   SELEC
417cAC*    F3/F12 selected - Cancel selection.
417cACSR         *INKC     WHEQ *ON
417cACSR         LLPTP1    ANDEQ'*GETCUR '
417cACSR         *INKL     OREQ *ON
417cACSR         LLPTP1    ANDEQ'*GETCUR '
417cAC*R                   MOVE *BLANKS   W1DISP
417cACSR                   MOVE *ON       CANCEL
417cACSR                   LEAVE
417cAC*
417cAC*    User did not scan in lot/license plate info.
417cACSR         WWLLP#    WHEQ *BLANKS
417cACSR                   ITER
417cAC*
417cAC*    Scanned in data not correct.
417cACSR         WWLLP#    WHNE $RLCNS
417cACSR         LLPTP1    ANDEQ'*GETCUR '
417cACSR                   MOVE WWLLP#    ERLLP1
417cACSR                   MOVE $RLCNS    ERLLP2
417cACSR                   EXSR ZM9007
417cACSR                   ITER
417cAC*
417cAC*    Verify new identifier does not exist.
417cACSR         WWLLP#    WHGT *BLANKS
417cACSR         LLPTP1    ANDEQ'*GETNEW '
417cACSR                   SELEC
417cACSR         LICTRK    WHEQ '*YES'
417cACSR                   MOVE '*NEWLIC#'LLPTP2
417cACSR         LOTTRK    WHEQ '*YES'
417cACSR                   MOVE '*NEWLOT#'LLPTP2
417cACSR                   ENDSL
417cAC*
417cAC*    Retrieve lot/license plate for this slot.
417cACSR                   EXSR ZZLLP2
417cACSR         $RRTN     IFEQ '*FOUND  '
417cACSR         LICTRK    IFEQ '*YES'
417cACSR                   MOVEL'Lic#'    ERRMSG    P
417cACSR                   ELSE
417cACSR                   MOVEL'Lot#'    ERRMSG    P
417cAC                     ENDIF
417cACSR                   EXSR ZM9008
417cACSR                   ITER
417cACSR                   ELSE
417cAC*
417cAC*    Valid new license plate identifier scanned in.
417cACSR                   LEAVE
417cACSR                   ENDIF
417cAC*
417cAC*    User scanned in necessary info.
417cACSR                   OTHER
417cAC*
417cACSR                   LEAVE
417cAC*
417cACSR                   ENDSL
417cACSR                   ENDDO
417cAC*
417cACSR         ENDLLP    ENDSR
417cAC*
417cAC*----------------------------------------------------------------
417cAC*
417cAC*  ZZLLP2   Retrieve lot/license plate for specific slot.
417cAC*
417cACSR         ZZLLP2    BEGSR
417cAC*
417cACSR                   CLEAR$RPARM
417cAC*
417cACSR                   Z-ADD$PWHSE    $RWHSE
417cAC*
417cACSR                   SELEC
417cACSR         LLPTP2    WHEQ '*NEWLIC#'
417cACSR         LLPTP2    OREQ '*NEWLOT#'
417cACSR                   MOVE WWLLP#    $RLCNS
417cAC*
417cACSR                   ENDSL
417cAC*
417cACSR                   MOVE SLWHDP    $RTWHD
417cACSR                   MOVE SLAISL    $RTASL
417cACSR                   Z-ADDSLLOC     $RTLOC
417cACSR                   Z-ADDSLRLVL    $RTLVL
417cACSR                   MOVE SLHAND    $RTHND
417cAC*
417cACSR                   Z-ADD#EMP#     $RCEMP
417cACSR                   MOVE LLPTP2    $RCMD
417cACSR                   CALL @LLPTR
417cACSR                   PARM           $RCMD   8
417cACSR                   PARM           $RPRG  10
417cACSR                   PARM           $RPARM
417cACSR                   PARM           $RDATA100
417cACSR                   PARM           $RRTN   8
417cACSR                   PARM           $RMSG   4
417cAC*
417cACSR         $RRTN     IFEQ '*NOTFND '
417cAC*R                   MOVE *ON       ERROR
417cACSR                   ENDIF
417cAC*
417cACSR                   ENDSR
417cAC*
417cAC*----------------------------------------------------------------
417cAC*
417cAC*  ZZLLP3   Update lot/license plate for specific slot.
417cAC*
417cACSR         ZZLLP3    BEGSR
417cAC*
417cACSR                   CLEAR$RPARM
417cAC*
417cACSR                   Z-ADD$PWHSE    $RWHSE
417cAC*
417cACSR                   SELEC
417cACSR         LLPTP3    WHEQ '*UPDTFRP'
417cACSR         LLPTP3    OREQ '*CLSTFRP'
417cACSR                   MOVE NEWLLP    $RLCNS
417cACSR                   MOVE SAVLLP    $RFMLC
417cAC*
417cACSR                   OTHER
417cACSR                   MOVE SAVLLP    $RLCNS
417cAC*
417cACSR                   ENDSL
417cAC*
417cAC*    Load From Slot info.
417cACSR                   MOVE W1WHDP    $RFWHD
417cACSR                   MOVE LBAISL    $RFASL
417cACSR                   Z-ADDLBLOC     $RFLOC
417cACSR                   Z-ADDLBRLVL    $RFLVL
417cACSR                   MOVE LBHAND    $RFHND
417cAC*    Load To Slot info.
417cACSR                   MOVE W1WHDP    $RTWHD
417cACSR                   MOVE LBASL2    $RTASL
417cACSR                   Z-ADDLBLOC2    $RTLOC
417cACSR                   Z-ADDLBLVL2    $RTLVL
417cACSR                   MOVE LBHND2    $RTHND
417cAC*
417cACSR                   SELEC
417cACSR         LLPTP3    WHEQ '*CLSTFRT'
417cACSR         LLPTP3    OREQ '*CLSTFRP'
417cACSR                   MOVE 'S'       $RTOCD
417cACSR                   MOVEL'Slot'    $RTARA    P
417cACSR         LLPTP3    WHEQ '*UPDTFRT'
417cACSR         LLPTP3    OREQ '*UPDTFRP'
417cACSR                   MOVE '?'       $RTOCD
417cACSR                   MOVEL'Unknown' $RTARA    P
417cACSR                   ENDSL
417cAC*
417cACSR                   SELEC
417cACSR         LBUTYP    WHEQ '1'
417cACSR                   Z-ADDLBQPCK    $RLQY2
417cACSR         LBUTYP    WHEQ '2'
417cACSR                   Z-ADDLBQPCK    $RLQY3
417cACSR                   OTHER
417cACSR                   Z-ADDLBQPCK    $RLQY1
417cACSR                   ENDSL
417cAC*
417cACSR                   Z-ADD#EMP#     $RCEMP
417cACSR                   MOVE LLPTP3    $RCMD
417cACSR                   CALL @LLPTR
417cACSR                   PARM           $RCMD
417cACSR                   PARM           $RPRG
417cACSR                   PARM           $RPARM
417cACSR                   PARM           $RDATA
417cACSR                   PARM           $RRTN
417cACSR                   PARM           $RMSG
417cAC*
417cACSR                   ENDSR
417cAC*
     C*----------------------------------------------------------------
     C*
     C*  ZZSTRT   Create and Start a new transaction
     C*
413eACSR         ZZSTRT    BEGSR
     C*
     C*     - Get new transaction number.
     C*
     CSR                   CALL 'PIRTRN#'
     CSR                   PARM           PTTRN#
     C*
     CSR                   Z-ADDPTTRN#    $PTRN#  70
     C*
     CSR                   MOVEL'TFRMOV ' @PTASK
     CSR                   Z-ADD0         @PCUBE
     CSR                   Z-ADD0         @PSWGT
     CSR                   CALL @ADDTR
     CSR                   PARM '*CRTSTRT'@PCMD   8
     CSR                   PARM           #JOB
     CSR                   PARM PTTRN#    @PTRN#  70
     CSR                   PARM           @PTASK  6
     CSR                   PARM $PWHSE    @PWHSE  30
     CSR                   PARM W1WHDP    @PWHDP  5
     CSR                   PARM W1STYP    @PSTYP  1
     CSR                   PARM           @PCUBE  93
     CSR                   PARM           @PSWGT  92
     CSR                   PARM 0         @PPCS   50
     CSR                   PARM 0         @PAISL  50
     CSR                   PARM 0         @PQTY1  50
     CSR                   PARM 0         @PQTY2  50
     CSR                   PARM 0         @PQTY3  50
     CSR                   PARM '0'       @PRTE   5
     CSR                   PARM ' '       @PPO    9
     CSR                   PARM ' '       @PGRP1  1
     CSR                   PARM 'T'       @PGRP2  1
     CSR                   PARM ' '       @PRTN   8
     CSR                   PARM ' '       @PMSG   4
     C*
416eACSR                   Z-ADDPTTRN#    A$TRN#
416eACSR                   MOVELPTTASK    A$TASK
     C*
413eACSR         ENDSTR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTASK  Get current task.
     C*
413eACSR         ZZTASK    BEGSR
     CSR                   Z-ADD*HIVAL    STDATE
     CSR                   Z-ADD*HIVAL    STTIME
416bAC*
416bACSR                   MOVE '2'       KYSTAT
416bACSR         PTKEY1    SETLLPIRTRAN1
416bACSR         PTKEY1    READEPIRTRAN1                 79
416bACSR         *IN79     IFEQ *ON
416bACSR                   MOVE *OFF      FOUND
416bACSR                   GOTO ENDTSK
416bACSR                   ENDIF
416bAC*
     CSR         PTKE22    SETLLPIRTRAN2
     CSR         FOREVR    DOWEQFOREVR
     CSR                   READ PIRTRAN2                 79
     CSR         *IN79     IFEQ *ON
     CSR         PTEMP#    ORNE W1EMP#
     CSR                   MOVE *OFF      FOUND
     CSR                   LEAVE
     CSR                   ENDIF
     CSR         PTSTAT    IFNE '2'
     CSR                   ITER
     CSR                   ENDIF
     C*   Found an active transaction
     CSR                   MOVE *ON       CURENT
     CSR                   Z-ADDPTTRN#    CURTRN
     CSR                   MOVE PTTASK    T#TASK
     CSR         TKKEY     CHAINTASK                 79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE TKCODE    CURTSK
     CSR                   MOVE TKTYPE    CURTYP
     CSR                   ENDIF
     CSR                   LEAVE
     CSR                   ENDDO
413eACSR         ENDTSK    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTIME   Update for screen 1.
     C*
413eACSR         ZZTIME    BEGSR
     C*
     C*      Calculate length of time in minutes for output.
     C*
     CSR                   Z-ADDSTRTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPBEG  40
     CSR                   ADD  DSMM      TMPBEG
     C*
     CSR                   Z-ADDFINTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     C*
     C*   If the ending time is < starting time, than
     C*   we have gone past the midnight.
     C*
     CSR         FINTIM    IFLT STRTIM
     CSR                   ADD  24        DSHH
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPEND  40
     CSR                   ADD  DSMM      TMPEND
     C*
     CSR         *LIKE     DEFN PTDMIN    TIMLEN
     CSR         TMPEND    SUB  TMPBEG    TIMLEN
     CSR         TIMLEN    IFLT 0
     CSR                   Z-ADD0         TIMLEN
     CSR                   ENDIF
     C*
413eACSR         ENDTIM    ENDSR
416r C*----------------------------------------------------------------
416r C*
416r C*  ZZUHLD   Update held quantites.
416r C*
416rACSR         ZZUHLD    BEGSR
416rACSR                   MOVE '*HOLD   '$ACMD
416rACSR                   MOVE #PROG     $APRG
416rACSR                   MOVE '*INTER  '$ATYPE
416rACSR                   Z-ADDSLWHSE    $AWHSE
416rACSR                   MOVE SLITEM    $AITEM
416rAC**                   Z-ADDW1QT01    $AQTY1
416rAC**                   Z-ADDW1QT02    $AQTY2
416rAC**                   Z-ADDW1QT03    $AQTY3
416rACSR                   CALL 'ADJQTY'
416rACSR                   PARM           $ACMD   8
416rACSR                   PARM           $APRG  10
416rACSR                   PARM           $ATYPE  8
416rACSR                   PARM           $AWHSE  30
416rACSR                   PARM           $AITEM 15
416rACSR                   PARM           $AQTY1  70
416rACSR                   PARM           $AQTY2  70
416rACSR                   PARM           $AQTY3  70
416rACSR                   PARM           $ARTQ1  70
416rACSR                   PARM           $ARTQ2  70
416rACSR                   PARM           $ARTQ3  70
416rACSR                   PARM           $ARTN   8
416rACSR                   PARM           $AERM
416rDC*R         $PRTN     IFEQ '*PGMQ   '
416rMCSR         $ARTN     IFEQ '*PGMQ   '
416rACSR                   MOVE *ON       ERROR
416rDC*R                   MOVE $PMSG     #MSGK
416rMCSR                   MOVE $AMSG     #MSGK
416rACSR                   EXSR ZMQMSG
416rAC**                   UNLCKSLOT2
416rACSR                   ENDIF
416rACSR         ENDHLD    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUOM    Get Unit Of Measure Normal, Breakdown1, Breakdown2.
     C*
     CSR         ZZUOM     BEGSR
     C*
     C*   Get Unit of Measures.
     C*    *IN92=Protect & non-display breakdown1 unit of measure
     C*    *IN93=Protect & non-display breakdown2 unit of measure
     C*
     C*
416pACSR                   MOVE '*NO '    BKDWN1
416pACSR                   MOVE '*NO '    BKDWN2
417GACSR                   MOVE *OFF      *IN92
416fDC**         KEYIT     CHAINPIRITEM              75
416fMCSR         KEYIT1    CHAINPIRITEM              75
     CSR         *IN75     IFEQ *ON
     CSR                   MOVE *ON       *IN92
     CSR                   MOVE *ON       *IN93
     CSR                   GOTO ENDUOM
     CSR                   ELSE
     CSR         ITFLG1    IFEQ 'N'
413 MCSR         SSBFLG    ANDEQ*OFF
     CSR                   MOVE *ON       *IN92
     CSR                   ENDIF
     CSR         ITFLG2    IFEQ 'N'
413 ACSR         SSBFLG    ANDEQ*OFF
413 ACSR         ITFLG2    OREQ 'N'
413 ACSR         SSBFLG    ANDEQ*ON
413 ACSR         ITUM3     ANDEQ*BLANKS
     CSR                   MOVE *ON       *IN93
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ITUM1     CHAINUNMESR               75
     CSR         *IN75     IFEQ *OFF
     CSR                   MOVE UMSHRT    W1UM1
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W1UM1
     CSR                   ENDIF
     C*
     CSR         *IN92     IFEQ *OFF
416pA *
416pA *    Breakdown 1  qty's supported.
416pACSR         ITUMQ2    IFGT *ZEROS
416pACSR                   MOVE '*YES'    BKDWN1
416pACSR                   ENDIF
     CSR         ITUM2     CHAINUNMESR               75
     CSR         *IN75     IFEQ *OFF
     CSR                   MOVE UMSHRT    W1UM2
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W1UM2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         *IN93     IFEQ *OFF
416pA *
416pA *    Breakdown 2  qty's supported.
416pACSR         ITUMQ3    IFGT *ZEROS
416pACSR                   MOVE '*YES'    BKDWN2
416pACSR                   ENDIF
     CSR         ITUM3     CHAINUNMESR               75
     CSR         *IN75     IFEQ *OFF
     CSR                   MOVE UMSHRT    W1UM3
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W1UM3
     CSR                   ENDIF
     CSR                   ENDIF
     CSR         ENDUOM    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update record.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
416eAC*
416eAC*  Initialize interface data structure.
416eAC*
416eACSR                   EXSR ZZZISF
416j C*
416j C*   Item changed, set flag for adjustment code entry.
416jACSR         SLITEM    IFNE W1ITM
416jACSR                   MOVE *ON       *IN59
416jACSR                   ELSE
416jACSR                   MOVE *OFF      *IN59
416jACSR                   ENDIF
416j C*
     C*
     C*   Update the "FROM SLOT" record.
     C*
     CSR         FMKEY     CHAINRECORD               79
412 ACSR         SLEXPD    IFGT SVEXPD
412 ACSR                   Z-ADDSLEXPD    EXPD
412 ACSR                   ELSE
412 ACSR                   Z-ADDSVEXPD    EXPD
412 ACSR                   ENDIF
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    SLSDTE
     C*
     CSR                   TIME           SLSTIM
414cACSR                   MOVE SLPICK    SVPICK
413eDC***                  MOVE SLITEM    SVITEM
412 AC*   Save quantities to reverse if needed.
412 ACSR                   Z-ADDW1QTY1    ULSTK1
412 ACSR                   Z-ADDW1QTY2    ULSTK2
412 ACSR                   Z-ADDW1QTY3    ULSTK3
412 ACSR                   Z-ADDSLEXPD    ULEXPD
     C*
     C*   Update slot record. (From Slot)
     C*
     CSR                   ADD  W1QTY1    SLTFR1
     CSR                   ADD  W1QTY2    SLTFR2
     CSR                   ADD  W1QTY3    SLTFR3
     C*
415dDC*R                   Z-ADDEXPD      SLEXPD
414 AC*
414 AC*   Check if from status will be changed
414 AC*
414cACSR         SLSTK1    SUB  SLTFR1    NWSTK1
414cACSR         SLSTK2    SUB  SLTFR2    NWSTK2
414cACSR         SLSTK3    SUB  SLTFR3    NWSTK3
414cACSR         NWSTK1    IFEQ 0
414cACSR         NWSTK2    ANDEQ0
414cACSR         NWSTK3    ANDEQ0
414cACSR                   MOVE 'Z '      NWSTAT  2
414cACSR                   ELSE
414cACSR                   MOVE SLSTAT    NWSTAT
414cACSR                   ENDIF
     C*
     C*      Update from slot recrod.
     C*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ *ON
412 AC****                 EXSR ZZUNDO
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP1
     CSR                   ENDIF
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS1
416eACSR                   MOVE SLITEM    A$ITEM
416eACSR                   Z-ADDW1QTY1    A$QTY1
416eACSR                   Z-ADDW1QTY2    A$QTY2
416eACSR                   Z-ADDW1QTY3    A$QTY2
416eACSR                   MOVEL'%TFROUT' DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
413eACSR                   MOVELW1ITM     SVITEM
510aAC*
510aAC*    Save value for SLOTDTE update.
510aAC*
510aAC***                  Z-ADDSLWHSE    FRMWHS  30
510aAC***                  MOVE SLWHDP    FRMWHD  5
510aAC***                  MOVE SLDISP    FRMDSP 12
510aAC***                  MOVE SLPICK    FRMPCK  1
510aAC***                  MOVE SLITEM    FRMITM 15
     C*
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update record.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
415dACSR                   MOVE *OFF      DTEOLD
415dACSR                   MOVE *OFF      DTEOFL
500aAC*    Get todays date.
500aACSR                   MOVE '*CURCMD '$CVCMD
500aACSR                   EXSR ZZCVDT
500aACSR                   Z-ADD$CVD8O    CKDATE
416eAC*
416eAC*  Initialize interface data structure.
416eAC*
416eACSR                   EXSR ZZZISF
     C*   Change quantity to breakdown quantity if needed.
416s CSR         *IN59     IFEQ *ON
416s CSR         FMTYPE    IFEQ ' '
416s CSR         TOTYPE    IFEQ 'S'
416s CSR         TOTYPE    OREQ 'B'
416s CSR         FMUMQ2    ANDNE0
416s CSR         W1QTY1    MULT FMUMQ2    TOQTY1
417b CSR                   ELSE
417b CSR                   Z-ADDW1QTY1    TOQTY1
416s CSR                   ENDIF
416s CSR                   ENDIF
     C*
416s CSR         FMTYPE    IFEQ 'S'
416s CSR         FMTYPE    OREQ 'B'
416s CSR         TOTYPE    IFEQ ' '
416s CSR         TOUMQ2    ANDNE0
416s CSR         W1QTY1    DIV  TOUMQ2    TOQTY1
417GDC**                   ENDIF
417b CSR                   ELSE
417b CSR                   Z-ADDW1QTY1    TOQTY1
416s CSR                   ENDIF
417G CSR                   ENDIF
416s CSR                   ELSE
416s CSR                   Z-ADDW1QTY1    TOQTY1
416s CSR                   ENDIF
     C*
     C*   Update the "To Slot" record.
     C*
     CSR         TOKEY     CHAINRECORD               79
     CSR         *IN79     IFEQ *ON
412 ACSR         NEWVS     IFEQ *OFF
412 AC*****                EXSR ZZUNDO
412 ACSR                   MOVE '*PGMQ   '$PRTN
412 ACSR                   MOVE *ON       ERROR
412 ACSR                   EXSR ZM72
412 ACSR                   GOTO ENDUP2
412 ACSR                   ENDIF
     CSR                   CLEARRECORD
416s CSR                   Z-ADDTOQTY1    SLRCV1
416sDC**                   Z-ADDW1QTY1    SLRCV1
     CSR                   Z-ADDW1QTY2    SLRCV2
     CSR                   Z-ADDW1QTY3    SLRCV3
     C****                 Z-ADDW1QTY1    SLSTK1
     C****                 Z-ADDW1QTY2    SLSTK2
     C****                 Z-ADDW1QTY3    SLSTK3
     CSR                   MOVE 'V '      SLSTAT
     CSR                   ELSE
417dAC*
417dAC*    Calculate actual qty in pick slot. Not including
417dAC*    qty being transfered with this transaction.
417dACSR                   EXSR ZZAVAL
415dAC*
415dAC*    Slot is not empty. Keep oldest date.
415dACSR                   SELEC
417dDC*R         SLSTK1    WHGT 0
417dMCSR         AVAIL1    WHGT 0
417dDC*R         SLSTK2    ORGT 0
417dMCSR         AVAIL2    ORGT 0
417dDC*R         SLSTK3    ORGT 0
417dMCSR         AVAIL3    ORGT 0
415dACSR                   MOVE *ON       DTEOLD
415dAC*
415dAC*    Slot is empty. Update with date from From slot.
417dDC*R         SLSTK1    WHLE 0
417dMCSR         AVAIL1    WHLE 0
417dDC*R         SLSTK2    ANDLE0
417MMCSR         AVAIL2    ANDLE0
417dDC*R         SLSTK3    ANDLE0
417dMCSR         AVAIL3    ANDLE0
415dACSR                   MOVE *ON       DTEOFL
415dACSR                   ENDSL
415dAC*
     CSR                   Z-ADDSLEXPD    ULEXPD
416sDC*R         *IN59     IFEQ *ON
416sDC*          W1QTY1    MULT SVUMQ2    W1QTY1
416sDC*                    ENDIF
416sDC*R                   ADD  W1QTY1    SLRCV1
416SMCSR                   ADD  TOQTY1    SLRCV1
     CSR                   ADD  W1QTY2    SLRCV2
     CSR                   ADD  W1QTY3    SLRCV3
     C****                 ADD  W1QTY1    SLSTK1
     C****                 ADD  W1QTY2    SLSTK2
     C****                 ADD  W1QTY3    SLSTK3
     CSR                   ENDIF
     CSR         SLSTAT    IFEQ 'Z '
     CSR         SLSTAT    OREQ 'V '
     CSR                   MOVE 'A '      SLSTAT
     CSR                   Z-ADDSVENTD    SLENTD
     CSR                   Z-ADDSVEXPD    SLEXPD
     CSR                   Z-ADDTODAY     SLSDTE
     CSR                   TIME           SLSTIM
     CSR                   Z-ADDSVPRTY    SLPRTY
     CSR                   ENDIF
413EACSR                   MOVE W1ITM     SLITEM
413EDC*R                   MOVE SVITEM    SLITEM
     C*
     C*     Don't allow zero entered date.
     C*
     CSR         SLENTD    IFEQ 0
417dDC*R                   Z-ADDSVENTD    SLENTD
     CSR                   ENDIF
     C*
415dDC*R                   Z-ADDEXPD      SLEXPD
     C*
     C*     Make sure "To" slot stays in correct FIFO order.
     C*
     CSR         SVPRTY    IFLT SLPRTY
     CSR         SVPRTY    OREQ SLPRTY
     CSR         SVEXPD    ANDLTSLEXPD
     CSR         SVPRTY    OREQ SLPRTY
412 DC*R         SVEXPD    ANDEQSLEXPD
     CSR         SVENTD    ANDLTSLENTD
     CSR                   Z-ADDSVPRTY    SLPRTY
412 DC*R                   Z-ADDSVEXPD    SLEXPD
415dDC*R                   Z-ADDSVENTD    SLENTD
     CSR                   ENDIF
     C*
     C*      Calculate available quantity
     C*
     CSR                   CALL 'SLOTQTY'
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     C*
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     C*
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     C*
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     C*
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     C*
     CSR                   PARM           STOCK1  50
     CSR                   PARM           STOCK2  30
     CSR                   PARM           STOCK3  30
     C*
     CSR                   PARM           AVAIL1  50
     CSR                   PARM           AVAIL2  30
     CSR                   PARM           AVAIL3  30
     C*
     C*
     C*      Make sure breakdown qty's are not greater than
     C*        quantity in the unit of measure.
     C*
     CSR         AVAIL3    DOWGEITUMQ3
     CSR         ITUMQ3    ANDNE0
     CSR                   SUB  ITUMQ3    SLSTK3
     CSR                   SUB  ITUMQ3    AVAIL3
     CSR                   ADD  1         SLSTK2
     CSR                   ADD  1         AVAIL2
     CSR                   ENDDO
     C*
     CSR         AVAIL2    DOWGEITUMQ2
     CSR         ITUMQ2    ANDNE0
     CSR                   SUB  ITUMQ2    SLSTK2
     CSR                   SUB  ITUMQ2    AVAIL2
     CSR                   ADD  1         SLSTK1
     CSR                   ADD  1         AVAIL1
     CSR                   ENDDO
409 AC*  Create new slot record
     C*  $V = from Physical slot when virtual was checked
     C*  PH = from saved from physical slot when virtual was checked
     C*  SV = saved from 'FROM' slot.
     C*  SL = saved from 'FROM' slot.
409 ACSR         NEWVS     IFEQ *ON
     CSR                   Z-ADD$VWHSE    SLWHSE
     CSR                   MOVE $VWHDP    SLWHDP
416qACSR         PHSTAT    IFNE 'Z '
416qACSR         PHSTAT    ANDNE'V '
416qACSR                   MOVE PHSTAT    SLSTAT
416qACSR                   ELSE
     CSR                   MOVE 'A '      SLSTAT
416qACSR                   ENDIF
     CSR                   MOVE $VAISL    SLAISL
     CSR                   Z-ADD$VLOC     SLLOC
     CSR                   Z-ADD$VRLVL    SLRLVL
     CSR                   MOVE $VHAND    SLHAND
     CSR                   Z-ADDPHSIDE    SLSIDE
     CSR                   MOVE $VSTYP    SLSTYP
     CSR                   MOVE $VDISP    SLDISP
     CSR                   MOVE PHSDEF    SLSDEF
     CSR                   MOVE PHDESG    SLDESG
     CSR                   MOVE SVACTV    SLACTV
     CSR                   MOVE SVBLD     SLBLD
412 DC*R                   MOVE 'N'       SLPICK
412 MCSR                   MOVE $VPICK    SLPICK
     CSR                   Z-ADD$VPSEQ    SLPSEQ
412 DC*R                   Z-ADDSVSLFD    SLSLFD
412 MCSR                   Z-ADD0         SLSLFD
     CSR                   MOVE 'V'       SLRSRV
     CSR                   Z-ADDSVENTD    SLENTD
     CSR                   Z-ADDSVEXPD    SLEXPD
     CSR                   Z-ADDTODAY     SLSDTE
     CSR                   TIME           SLSTIM
     CSR                   Z-ADDSVPRTY    SLPRTY
     CSR                   WRITERECORD                 79
     CSR         *IN79     IFEQ *ON
412 AC*****                EXSR ZZUNDO
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP2
415hACSR                   ELSE
     CSR                   MOVE *ON       TOSLUP
     CSR                   ENDIF
     C*  create vslot record.
PCKeAC           CLIENT    IFEQ PACKER
PCKeAC           SLRSRV    ANDNE'Y'
PCKeAC           CLIENT    ORNE PACKER
     CSR                   Z-ADD$VWHSE    VSWHSE
     CSR                   MOVE $VWHDP    VSWHDP
     CSR                   MOVE $VAISL    VSAISL
     CSR                   Z-ADD$VLOC     VSLOC
     CSR                   Z-ADD$VRLVL    VSRLVL
     CSR                   MOVE $VHAND    VSHAND
     CSR                   MOVE $VDISP    VSDISP
     CSR                   MOVE PHDISP    VSPDIS
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    VSCDTE
     CSR                   TIME           VSCTIM
     CSR                   ADD  1         VSCTIM
     CSR                   WRITEVSREC                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP2
     CSR                   ENDIF
PCK ACSR                   ENDIF
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS1
416eACSR                   MOVEL'%ADDVS'  DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
416eACSR                   EXSR ZZZFS2
416eACSR                   MOVE SLITEM    A$ITEM
416eACSR                   Z-ADDW1QTY1    A$QTY1
416eACSR                   Z-ADDW1QTY2    A$QTY2
416eACSR                   Z-ADDW1QTY3    A$QTY3
416eACSR                   MOVEL'%TFRIN'  DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
     C***
     CSR                   ELSE
     C*** Update slot record
415dAC*
415dAC*    Slot is not empty. Keep oldest date.
415dACSR                   SELEC
415dACSR         DTEOLD    WHEQ *ON
415dAC*
415dMCSR         SVENTD    IFLT SLENTD
415dACSR         SVENTD    ANDGT*ZEROS
417dDC*R                   Z-ADDSVENTD    SLENTD
415dACSR                   ENDIF
415dMCSR         SVEXPD    IFLT SLEXPD
415dACSR         SVEXPD    ANDGT*ZEROS
500aACSR         SLPICK    ANDNE'Y'
500aAC*
500aACSR         SVEXPD    ORLT SLEXPD
500aACSR         SVEXPD    ANDGT*ZEROS
500aACSR         SVEXPD    ANDGECKDATE
500aACSR         SLPICK    ANDEQ'Y'
500aAC*
417dDC*R                   Z-ADDSVEXPD    SLEXPD
415dACSR                   ENDIF
415dAC*
415dAC*    Slot is empty. Update with date from From slot.
415dACSR         DTEOFL    WHEQ *ON
415dAC*
415dDCSR         SVENTD    IFGT *ZEROS
417dDC*R                   Z-ADDSVENTD    SLENTD
415dACSR                   ENDIF
415dDCSR         SVEXPD    IFGT *ZEROS
500aACSR         SLPICK    ANDNE'Y'
500aAC*
500aACSR         SVEXPD    ORGT *ZEROS
500aACSR         SVEXPD    ANDGECKDATE
500aACSR         SLPICK    ANDEQ'Y'
500aAC*
417dDC*R                   Z-ADDSVEXPD    SLEXPD
415dACSR                   ENDIF
415dAC*
415dACSR                   ENDSL
417dAC*
417dAC*    Update Expiration/Entered dates for transfer.
417dACSR                   EXSR ZZDATE
415dAC*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ *ON
412 AC*****                EXSR ZZUNDO
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP2
415hACSR                   ELSE
415hACSR                   MOVE *ON       TOSLUP
     CSR                   ENDIF
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS1
416eACSR                   MOVE SLITEM    A$ITEM
416eACSR                   Z-ADDW1QTY1    A$QTY1
416eACSR                   Z-ADDW1QTY2    A$QTY2
416eACSR                   Z-ADDW1QTY3    A$QTY3
416eACSR                   MOVEL'%TFRIN'  DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
     CSR                   ENDIF
PCKbAC*
PCKbAC*    Ask user if slot was empty before putaway.
PCKbAC*
PCKbACSR                   MOVE *BLANKS   $LCMD
PCKbACSR                   Z-ADDSLWHSE    $LWHSE
PCKbACSR                   MOVE SLWHDP    $LWHDP
PCKbACSR                   MOVE SLDISP    $LDSP2
PCKbACSR                   MOVE SLITEM    $LITM2
PCKdACSR                   MOVELSLSTAT    $LSTS
PCKbACSR                   Z-ADDW1QTY1    $LQTY1
PCKbACSR                   Z-ADDW1QTY2    $LQTY2
PCKbACSR                   Z-ADDW1QTY3    $LQTY3
PCKbACSR                   CALL 'RC200E'
PCKbACSR                   PARM           $LPARM
     C*
     C*   Send back info message.
     C*
     CSR                   MOVE '*OK     '$PRTN
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVE W2QTY     ERQTY
     CSR                   MOVE SVITEM    ERITEM
     CSR                   MOVE FMDISP    ERFROM
413eMCSR                   MOVE W2DISP    ERTO
413eDC**                   MOVE W1DISP    ERTO
     CSR                   EXSR ZM1521
416s C*   Set quantity back to original if changed for breakdown.
416s CSR                   Z-ADDULSTK1    W1QTY1
510aAC*
510aAC*   Update SLOTDTE with From slot information.
510aAC*
510aAC***                  Z-SUBW1QTY1    $UQTY1
510aAC***                  Z-SUBW1QTY2    $UQTY2
510aAC***                  Z-SUBW1QTY3    $UQTY3
510aAC*
510aAC***                  CALL @SLTDT
510aAC***                  PARM '*FIFO'   $UCMD   8
510aAC***                  PARM #PROG     $UPGM  10
510aAC***                  PARM ' '       $UPGM2 10
510aAC***                  PARM FRMWHS    $UWHSE  30
510aAC***                  PARM FRMWHD    $UWHDP  5
510aAC***                  PARM FRMDSP    $USLOT 12
510aAC***                  PARM FRMPCK    $UPICK  1
510aAC***                  PARM FRMITM    $UITEM 15
510aAC***                  PARM ' '       $UNEWI 15
510aAC***                  PARM 0         $UENTD  80
510aAC***                  PARM 0         $UEXPD  80
510aAC***                  PARM           $UQTY1  50
510aAC***                  PARM           $UQTY2  50
510aAC***                  PARM           $UQTY3  50
510aAC***                  PARM           $URTN   50
510aAC*
510aAC*   Update SLOTDTE with To slot information.
510aAC*
510aAC***                  Z-ADDTOQTY1    $UQTY1
510aAC***                  Z-ADDW1QTY2    $UQTY2
510aAC***                  Z-ADDW1QTY3    $UQTY3
510aAC*
510aAC***                  CALL @SLTDT
510aAC***                  PARM '*DATE'   $UCMD   8
510aAC***                  PARM #PROG     $UPGM  10
510aAC***                  PARM ' '       $UPGM2 10
510aAC***                  PARM SLWHSE    $UWHSE  30
510aAC***                  PARM SLWHDP    $UWHDP  5
510aAC***                  PARM SLDISP    $USLOT 12
510aAC***                  PARM SLPICK    $UPICK  1
510aAC***                  PARM SLITEM    $UITEM 15
510aAC***                  PARM ' '       $UNEWI 15
510aAC***                  PARM SVENTD    $UENTD  80
510aAC***                  PARM SVEXPD    $UEXPD  80
510aAC***                  PARM           $UQTY1  50
510aAC***                  PARM           $UQTY2  50
510aAC***                  PARM           $UQTY3  50
510aAC***                  PARM           $URTN   50
     C*
     CSR         ENDUP2    ENDSR
416aAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZUPD3   Update record.
416aAC*
416aACSR         ZZUPD3    BEGSR
416aACSR                   MOVE *OFF      ERROR
416aAC*
416aAC*    If user says that the slot is not empty, log an exception.
416aAC*    System says slot should be empty.
416aACSR         W3ZERO    IFEQ 'N'
416aACSR                   MOVE 'NOTEMTY' EXERID
416uDC*R                   MOVE *ZEROS    EXQTY
416uMCSR                   Z-ADDW1QT01    EXQTY
416uAC*R                   Z-ADDW1QT02    EXQTY2
416uAC*R                   Z-ADDW1QT03    EXQTY3
416aACSR                   EXSR ZZEXCP
416aACSR                   ENDIF
416aAC*
416aACSR                   EXSR SCR02I
416aAC*
416aACSR         ENDUP3    ENDSR
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZVFY    Check if From Slot can be verified after transfer.
416aAC*
416aACSR         ZZVFY     BEGSR
416aAC*
416aAC*    Checking to see if slot is physically empty and can have status
416aAC*    changed to 'Z'.
416aAC*    NOTE: Verify slot will only be displayed in the following
416aAC*          situations:
416aAC*           1. Base slot and no virtual slots or virtual slots
416aAC*              are at zero status and this transfer will leave
416aAC*              slot at zero status.
416aAC*           2. Base slot at verified or zero status and only
416aAC*              one remaining virtual slot that will be at
416aAC*              zero status after transfer is complete.
416aAC*
416aACSR                   MOVE *OFF      BSZERO
416aACSR                   MOVE $PDISP    SVFDIS
416aACSR         SVFKEY    CHAINVSLOT1              N79
416aAC*
416aAC*    Virtual slot being selected for transfer, check
416aAC*    of base slot.
416aACSR         *IN79     IFEQ *OFF
416cACSR                   Z-ADD$PWHSE    KYWHSE
416cACSR                   MOVE $PWHDP    KYWHDP
416aACSR                   MOVE VSPDIS    KYDISP
416aACSR                   MOVE *ON       VRTSLT
416aACSR                   EXSR ZZCHKB
416aACSR                   ELSE
416aACSR                   MOVE $PDISP    KYDISP
416aACSR                   MOVE *OFF      VRTSLT
416aACSR                   ENDIF
416aAC*
416aACSR                   MOVE *ON       SKPSLT
416aACSR                   Z-ADD$PWHSE    KYWHSE
416aACSR                   MOVE $PWHDP    KYWHDP
416aACSR                   EXSR ZZCHKV
416aACSR                   MOVE *OFF      SKPSLT
416aAC*
416aACSR                   SELEC
416aACSR         NWSTK1    WHEQ *ZEROS
416aACSR         NWSTK2    ANDEQ*ZEROS
416aACSR         NWSTK3    ANDEQ*ZEROS
416aACSR         SLALC1    ANDEQ0
416aACSR         SLALC2    ANDEQ0
416aACSR         SLALC3    ANDEQ0
416aACSR         SLRCV1    ANDEQ0
416aACSR         SLRCV2    ANDEQ0
416aACSR         SLRCV3    ANDEQ0
416aACSR         HASVS     ANDEQ*OFF
416aACSR         VRTSLT    ANDEQ*OFF
416aACSR         BSZERO    ANDEQ*OFF
416aACSR                   MOVE '*YES'    VFYSLT
416aAC*
416aACSR         NWSTK1    WHEQ *ZEROS
416aACSR         NWSTK2    ANDEQ*ZEROS
416aACSR         NWSTK3    ANDEQ*ZEROS
416aACSR         SLALC1    ANDEQ0
416aACSR         SLALC2    ANDEQ0
416aACSR         SLALC3    ANDEQ0
416aACSR         SLRCV1    ANDEQ0
416aACSR         SLRCV2    ANDEQ0
416aACSR         SLRCV3    ANDEQ0
416aACSR         HASVS     ANDEQ*OFF
416aACSR         VRTSLT    ANDEQ*ON
416aACSR         BSZERO    ANDEQ*ON
416aACSR                   MOVE '*YES'    VFYSLT
416aAC*
416aAC*    Slot can't be verified..... virtual(s) or base slot not empty.
416aAC*    Don't display Zero verify screen.
416aACSR                   OTHER
416aACSR                   MOVE '*NO '    VFYSLT
416aAC*
416aACSR                   ENDSL
416aAC*
416aAC*
416aACSR         ENDVFY    ENDSR
417eAC*
417eAC*----------------------------------------------------------------
417eAC*
417eAC*  ZZVSOP   Retrieve Virtual slot options.
417eAC*
417eACSR         ZZVSOP    BEGSR
417eAC*
417eACSR                   Z-ADD$PWHSE    KYWHSE
417eACSR                   MOVE '*VIRTUAL'OPCODE
417eACSR         OPTSKY    CHAINOPTIONS              79
417eAC*
417eAC*    Record not found. Set defaults.
417eAC*
417eACSR         *IN79     IFEQ *ON
417eACSR                   MOVE 'N'       OPVPCK
417eACSR                   MOVE 'N'       OPVALL
417eACSR                   MOVE 'Y'       OPVSLT
417eACSR                   MOVE 'N'       OPVEXP
417eACSR                   MOVE 'N'       OPVEND
417eACSR                   MOVE 'Y'       OPVSAM
417eACSR                   MOVE 'Y'       OPVEDF
417eAC*
417eAC*    Record found. Load file data structure.
417eACSR                   ELSE
417eACSR                   MOVE OPDATA    OPDTAV
417eAC*
417eACSR                   ENDIF
417eAC*
417eACSR                   ENDSR
416aAC*
416aAC*----------------------------------------------------------------
416aAC*
416aAC*  ZZZERO   Verify zero slots.
416aAC*
416aACSR         ZZZERO    BEGSR
416aAC*
416aACSR         FMKEY     CHAINSLOT2                79
416aAC*
416aACSR                   SELEC
416aACSR         *IN79     WHEQ *ON
416aAC*
416aAC*    Slot at 'Z'ero status - verify slot.
416aAC*
416aACSR         SLSTAT    WHEQ 'Z'
500fAC*
500fAC*    Virtual slot @ zero status - verify slot.
416aACSR         SLRSRV    IFEQ 'V'
416aACSR                   DELETRECORD
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS2
416eACSR                   MOVEL'%DELETEX'DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
416eAC*
416aACSR         FMKEY     CHAINVSLOT1               78
416aACSR                   DELETVSREC1
500fAC*
500fAC*    Verify base slot if at Zero status.
500fAC                     MOVE VSPDIS    KYVDSP
500fAC           KYSL2A    CHAINSLOT2                79
500fAC*
500fDC*                    ELSE
500fMC                     ENDIF
500fAC*
500fAC*    Load base slot into key.
500fAC                     MOVE SLDISP    KYVDSP
500fAC*
500fAC*
500fAC*    Base slot @ zero status - verify slot.
500fAC           *IN79     IFEQ *OFF
500fAC           SLSTAT    ANDEQ'Z'
416aACSR                   MOVE 'V '      SLSTAT
PCKfAC*
PCKfAC           CLIENT    IFEQ PACKER
PCKfAC*     Reset status to SO when Star Meat slot.
PCKfAC           SLDESG    IFEQ 'SM'
PCKfAC                     MOVE 'SO'      SLSTAT
PCKfAC                     ENDIF
PCKfAC*
PCKfAC                     ENDIF
PCKfAC*
416aACSR                   MOVE *BLANKS   SLITEM
416aAC*    Get todays date.
416aACSR                   MOVE '*CURCMD '$CVCMD
416aACSR                   EXSR ZZCVDT
416aACSR                   Z-ADD$CVD8O    TODAY
416aACSR                   Z-ADDTODAY     SLSDTE
416aACSR                   TIME           SLSTIM
416aAC*
416aAC*    Initialize dates, picking priority and quantities.
416aAC*
416aACSR                   MOVE *ZEROS    SLENTD
416aACSR                   MOVE *ZEROS    SLEXPD
416aACSR                   MOVE *ZEROS    SLPRTY
416aACSR                   MOVE *ZEROS    SLSTK1
416aACSR                   MOVE *ZEROS    SLSTK2
416aACSR                   MOVE *ZEROS    SLSTK3
416aACSR                   MOVE *ZEROS    SLRCV1
416aACSR                   MOVE *ZEROS    SLRCV2
416aACSR                   MOVE *ZEROS    SLRCV3
416aACSR                   MOVE *ZEROS    SLALC1
416aACSR                   MOVE *ZEROS    SLALC2
416aACSR                   MOVE *ZEROS    SLALC3
416aACSR                   MOVE *ZEROS    SLTFR1
416aACSR                   MOVE *ZEROS    SLTFR2
416aACSR                   MOVE *ZEROS    SLTFR3
416aACSR                   MOVE *ZEROS    SLPCK1
416aACSR                   MOVE *ZEROS    SLPCK2
416aACSR                   MOVE *ZEROS    SLPCK3
416aACSR                   UPDATRECORD
416eAC*
416eACSR                   EXSR ZZZS2D
416eACSR                   EXSR ZZZFS1
416eACSR                   MOVEL@VFYSL    DRISUB    P
416eACSR                   MOVEL@NOUPD    DRIRTN    P
416eACSR                   MOVE *OFF      CK4ERR  1
416eACSR                   MOVE *OFF      DRIERR  1
416eACSR                   EXSR ZZZCOP
500fAC*
500fAC                     ELSE
500fAC*
500fAC*    Base slot not at Zero status. Release record lock.
500fAC                     UNLCKSLOT2
416eAC*
416aACSR                   ENDIF
500fAC*
500fAC*    Remove all Zero status virtual slots.
500fAC           KYSL2A    SETLLVSLOT2
500fAC           FOREVR    DOWEQFOREVR
500fAC           KYSL2A    READEVSLOT2                   78
500fAC                     SELEC
500fAC           *IN78     WHEQ *ON
500fAC                     LEAVE
500fAC*
500fAC           *IN78     WHEQ *OFF
500fAC           VSKEY     CHAINSLOT2                79
500fAC           *IN79     IFEQ *OFF
500fAC           SLSTAT    ANDEQ'Z '
500fAC                     DELETRECORD
500fAC*
500fAC                     EXSR ZZZS2D
500fAC                     EXSR ZZZFS2
500fAC                     MOVEL'*SLOT'   DRICMD    P
500fAC                     MOVEL'%DELETEX'DRISUB    P
500fAC                     MOVEL@NOUPD    DRIRTN    P
500fAC                     MOVE *OFF      CK4ERR
500fAC                     EXSR ZZZCOP
500fAC*
500fAC                     DELETVSREC
500fAC                     ENDIF
500fAC                     ENDSL
500fAC                     ENDDO
500fAC*
417gAC*
417gACSR                   MOVE SLWHSE    $LWHSE
417gACSR                   MOVE SLWHDP    $LWHDP
417gACSR                   MOVE SLAISL    $LAISL
417gACSR                   Z-ADDSLLOC     $LLOC
417gACSR                   Z-ADDSLRLVL    $LRLVL
417gACSR                   MOVE SLHAND    $LHAND
417gACSR                   MOVE *ZEROS    $LPOS
417gACSR                   MOVE *BLANKS   $LPDSP
417gACSR                   MOVE *BLANKS   $LVDSP
417gACSR                   MOVE ' '       $LPLLC
417gACSR                   MOVE *ZEROS    $LMXPS
417gAC*
417gAC*    Delete Slot Position file entry.
417gAC*
500fDC*                    MOVE '*DLTSLT '$LCMD
500fDC*                    CALL @SLTPS
500fDC*                    PARM           $LPARM
416aAC*
416aAC*    Release record lock if slot status is not 'Z'ero.
416aAC*
416aACSR                   OTHER
416aACSR                   UNLCKSLOT2
416aACSR                   ENDSL
416aACSR         ENDZRO    ENDSR
416aAC*
416eAC*----------------------------------------------------------------
416eAC*     ZZZCOP - Copy slot fields into data structure fields.
416eAC*
416eACSR         ZZZCOP    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR                   MOVEL$SLOT     DRIDT1
     CSR                   MOVE $SLOT     DRIDT2
     C*
     CSR                   CALL 'DRICOPL'
     CSR                   PARM '*SLOT'   DRICMD 10
     CSR                   PARM           DRISUB 10
     CSR                   PARM 'D'       DRISYS  1
     CSR                   PARM #PROG     DRIPGM 10
     CSR                   PARM           DRIRTN 10
     CSR                   PARM ' '       DRIMSG 60
     CSR                   PARM           DRIDT1256
     CSR                   PARM           DRIDT2256
     C*
     CSR                   MOVELDRIDT1    $SLOT
     CSR                   MOVE DRIDT2    $SLOT
     C*
     CSR         CK4ERR    IFEQ *ON
     CSR         DRIRTN    ANDNE'*OK'
     CSR                   MOVE *ON       ERROR
     CSR         DRIERR    IFEQ *ON
     CSR                   EXSR ZM0001
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   MOVE *OFF      CK4ERR
     CSR                   MOVE *OFF      DRIERR
416eACSR                   ENDSR
416eAC*----------------------------------------------------------------
416eAC*     ZZZFS1 - Fill data structure slot fields for Add.
416eAC*
416eACSR         ZZZFS1    BEGSR
     C*
     CSR                   MOVE *ON       SUWHSE
     CSR                   MOVE *ON       SUWHDP
     CSR                   MOVE *ON       SUDISP
     CSR                   MOVE *ON       SUAISL
     CSR                   MOVE *ON       SULOC
     CSR                   MOVE *ON       SURLVL
     CSR                   MOVE *ON       SUHAND
     CSR                   MOVE *ON       SUSIDE
     CSR                   MOVE *ON       SUSTYP
     CSR                   MOVE *ON       SUSTAT
     CSR                   MOVE *ON       SUSDTE
     CSR                   MOVE *ON       SUSTIM
     CSR                   MOVE *ON       SUSDEF
     CSR                   MOVE *ON       SUDESG
     CSR                   MOVE *ON       SUACTV
     CSR                   MOVE *ON       SUBLD
     CSR                   MOVE *ON       SUPICK
     CSR                   MOVE *ON       SUPSEQ
     CSR                   MOVE *ON       SUPRTY
     CSR                   MOVE *ON       SUENTD
     CSR                   MOVE *ON       SUEXPD
     CSR                   MOVE *ON       SUSLFD
     CSR                   MOVE *ON       SURSRV
     CSR                   MOVE *ON       SUITEM
     CSR                   MOVE *ON       AUITEM
     CSR                   MOVE *ON       AUQTY
     C*
     CSR                   MOVE *ON       AUTRN#
     CSR                   MOVE *ON       AUTASK
     CSR                   MOVE *OFF      AULIC#
     C********             Z-ADDW1LCNS    A$LIC#
     C*
416eACSR                   ENDSR
416eAC*----------------------------------------------------------------
416eAC*     ZZZFS2 - Fill data structure slot fields for Receive
416eAC*
416eACSR         ZZZFS2    BEGSR
     C*
     CSR                   MOVE *ON       SUWHSE
     CSR                   MOVE *ON       SUWHDP
     CSR                   MOVE *ON       SUDISP
     CSR                   MOVE *ON       AUITEM
     CSR                   MOVE *ON       AUQTY
     C*
     CSR                   MOVE *ON       AUTRN#
     CSR                   MOVE *ON       AUTASK
     CSR                   MOVE *OFF      AULIC#
     C********             Z-ADDW1LCNS    A$LIC#
     C*
416eACSR                   ENDSR
416eAC*----------------------------------------------------------------
416eAC*     ZZZISF - Initialize slot fields.
416eAC*
416eACSR         ZZZISF    BEGSR
     C*
     CSR                   MOVE *OFF      SUWHSE
     CSR                   Z-ADD0         S$WHSE
     C*
     CSR                   MOVE *OFF      SUWHDP
     CSR                   MOVE *BLANKS   S$WHDP
     C*
     CSR                   MOVE *OFF      SUDISP
     CSR                   MOVE *BLANKS   S$DISP
     C*
     CSR                   MOVE *OFF      SUAISL
     CSR                   MOVE *BLANKS   S$AISL
     C*
     CSR                   MOVE *OFF      SULOC
     CSR                   Z-ADD0         S$LOC
     C*
     CSR                   MOVE *OFF      SURLVL
     CSR                   Z-ADD0         S$RLVL
     C*
     CSR                   MOVE *OFF      SUHAND
     CSR                   MOVE *BLANKS   S$HAND
     C*
     CSR                   MOVE *OFF      SUSIDE
     CSR                   MOVE *BLANKS   S$SIDE
     C*
     CSR                   MOVE *OFF      SUSTYP
     CSR                   MOVE *BLANKS   S$STYP
     C*
     CSR                   MOVE *OFF      SUSTAT
     CSR                   MOVE *BLANKS   S$STAT
     C*
     CSR                   MOVE *OFF      SUSDTE
     CSR                   Z-ADD0         S$SDTE
     C*
     CSR                   MOVE *OFF      SUSTIM
     CSR                   Z-ADD0         S$STIM
     C*
     CSR                   MOVE *OFF      SUSDEF
     CSR                   MOVE *BLANKS   S$SDEF
     C*
     CSR                   MOVE *OFF      SUDESG
     CSR                   MOVE *BLANKS   S$DESG
     C*
     CSR                   MOVE *OFF      SUACTV
     CSR                   MOVE *BLANKS   S$ACTV
     C*
     CSR                   MOVE *OFF      SUBLD
     CSR                   MOVE *BLANKS   S$BLD
     C*
     CSR                   MOVE *OFF      SUPICK
     CSR                   MOVE *BLANKS   S$PICK
     C*
     CSR                   MOVE *OFF      SUPSEQ
     CSR                   Z-ADD0         S$PSEQ
     C*
     CSR                   MOVE *OFF      SUPRTY
     CSR                   Z-ADD0         S$PRTY
     C*
     CSR                   MOVE *OFF      SUENTD
     CSR                   Z-ADD0         S$ENTD
     C*
     CSR                   MOVE *OFF      SUEXPD
     CSR                   Z-ADD0         S$EXPD
     C*
     CSR                   MOVE *OFF      SUSLFD
     CSR                   Z-ADD0         S$SLFD
     C*
     CSR                   MOVE *OFF      SURSRV
     CSR                   MOVE 0         S$RSRV
     C*
     CSR                   MOVE *OFF      SUITEM
     CSR                   MOVE 0         S$ITEM
     C*
     CSR                   Z-ADD0         S$STK1
     CSR                   Z-ADD0         S$STK2
     CSR                   Z-ADD0         S$STK3
     CSR                   Z-ADD0         S$ALC1
     CSR                   Z-ADD0         S$ALC2
     CSR                   Z-ADD0         S$ALC3
     CSR                   Z-ADD0         S$TFR1
     CSR                   Z-ADD0         S$TFR2
     CSR                   Z-ADD0         S$TFR3
     CSR                   Z-ADD0         S$PCK1
     CSR                   Z-ADD0         S$PCK2
     CSR                   Z-ADD0         S$PCK3
     CSR                   Z-ADD0         S$RCV1
     CSR                   Z-ADD0         S$RCV2
     CSR                   Z-ADD0         S$RCV3
     CSR                   Z-ADD0         S$PHY1
     CSR                   Z-ADD0         S$PHY2
     CSR                   Z-ADD0         S$PHY3
     CSR                   Z-ADD0         S$AVL1
     CSR                   Z-ADD0         S$AVL2
     CSR                   Z-ADD0         S$AVL3
     CSR                   Z-ADD0         S$ADJ1
     CSR                   Z-ADD0         S$ADJ2
     CSR                   Z-ADD0         S$ADJ3
     C*
     CSR                   MOVE *OFF      AUITEM
     CSR                   MOVE *BLANKS   A$ITEM
     C*
     CSR                   MOVE *OFF      AUQTY
     CSR                   Z-ADD0         A$QTY1
     CSR                   Z-ADD0         A$QTY2
     CSR                   Z-ADD0         A$QTY3
     C*
     CSR                   MOVE *OFF      AUORG
     CSR                   Z-ADD0         A$ORG1
     CSR                   Z-ADD0         A$ORG2
     CSR                   Z-ADD0         A$ORG3
     C*
     CSR                   MOVE *OFF      AUCWTA
     CSR                   Z-ADD0         A$CWTA
     C*
     CSR                   MOVE *OFF      AUCODE
     CSR                   MOVE *BLANKS   A$CODE
     C*
     CSR                   MOVE *OFF      AUMEMO
     CSR                   MOVE *BLANKS   A$MEMO
     C*
     CSR                   MOVE *OFF      AUBY
     CSR                   MOVE *BLANKS   A$BY
     C*
     CSR                   MOVE *OFF      AUDATE
     CSR                   Z-ADD0         A$DATE
     C*
     CSR                   MOVE *OFF      AUTIME
     CSR                   Z-ADD0         A$TIME
     C*
     CSR                   MOVE *OFF      AUVRFY
     CSR                   MOVE *BLANKS   A$VRFY
     C*
     CSR                   MOVE *OFF      AUTRN#
     CSR                   Z-ADD0         A$TRN#
     C*
     CSR                   MOVE *OFF      AULIC#
416nDC**                   Z-ADD0         A$LIC#
416nMCSR                   MOVE *BLANKS   A$LIC#
     C*
     CSR                   MOVE *OFF      AUTASK
     CSR                   MOVE *BLANKS   A$TASK
     C*
     CSR                   MOVE *OFF      AUCDSP
     CSR                   MOVE *BLANKS   A$CDSP
     C*
416eACSR                   ENDSR
416eAC*----------------------------------------------------------------
416eAC*     ZZZS2D - Copy slot fields into data structure fields.
416eAC*
416eACSR         ZZZS2D    BEGSR
     C*
     CSR                   Z-ADDSLWHSE    S$WHSE
     CSR                   MOVE SLWHDP    S$WHDP
     CSR                   MOVE SLDISP    S$DISP
     CSR                   MOVE SLAISL    S$AISL
     CSR                   Z-ADDSLLOC     S$LOC
     CSR                   Z-ADDSLRLVL    S$RLVL
     CSR                   MOVE SLHAND    S$HAND
     CSR                   MOVE SLSIDE    S$SIDE
     CSR                   MOVE SLSTYP    S$STYP
     CSR                   MOVE SLSTAT    S$STAT
     CSR                   Z-ADDSLSDTE    S$SDTE
     CSR                   Z-ADDSLSTIM    S$STIM
     CSR                   MOVE SLSDEF    S$SDEF
     CSR                   MOVE SLDESG    S$DESG
     CSR                   MOVE SLACTV    S$ACTV
     CSR                   MOVE SLBLD     S$BLD
     CSR                   MOVE SLPICK    S$PICK
     CSR                   Z-ADDSLPSEQ    S$PSEQ
     CSR                   Z-ADDSLPRTY    S$PRTY
     CSR                   Z-ADDSLENTD    S$ENTD
     CSR                   Z-ADDSLEXPD    S$EXPD
     CSR                   Z-ADDSLSLFD    S$SLFD
     CSR                   MOVE SLRSRV    S$RSRV
     CSR                   MOVE SLITEM    S$ITEM
     CSR                   Z-ADDSLSTK1    S$STK1
     CSR                   Z-ADDSLSTK2    S$STK2
     CSR                   Z-ADDSLSTK3    S$STK3
     CSR                   Z-ADDSLALC1    S$ALC1
     CSR                   Z-ADDSLALC2    S$ALC2
     CSR                   Z-ADDSLALC3    S$ALC3
     CSR                   Z-ADDSLTFR1    S$TFR1
     CSR                   Z-ADDSLTFR2    S$TFR2
     CSR                   Z-ADDSLTFR3    S$TFR3
     CSR                   Z-ADDSLPCK1    S$PCK1
     CSR                   Z-ADDSLPCK2    S$PCK2
     CSR                   Z-ADDSLPCK3    S$PCK3
     CSR                   Z-ADDSLRCV1    S$RCV1
     CSR                   Z-ADDSLRCV2    S$RCV2
     CSR                   Z-ADDSLRCV3    S$RCV3
     CSR                   Z-ADD0         S$PHY1
     CSR                   Z-ADD0         S$PHY2
     CSR                   Z-ADD0         S$PHY3
     CSR                   Z-ADD0         S$AVL1
     CSR                   Z-ADD0         S$AVL2
     CSR                   Z-ADD0         S$AVL3
     CSR                   Z-ADD0         S$ADJ1
     CSR                   Z-ADD0         S$ADJ2
     CSR                   Z-ADD0         S$ADJ3
     C*
416eACSR                   ENDSR
     O*----------------------------------------------------------------     ****
     O*
     O*  COMPILE TIME TABLES
     O*
**
Slot
Adjustment Type
Transfer Quantity
Verify Zero
**
 ABCDEFGHIJKLMNOPQRSTUVWXYZ
** Descsp
Slot
Tipo de ajustamiento
Cantidad de transferencia
Verificar Zero
