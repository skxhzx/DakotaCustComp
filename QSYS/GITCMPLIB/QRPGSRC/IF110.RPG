     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  IT110A    Item maintenance (one whse) - Display
     F*  09 July 1994
     F*  Dave Sommerville
     F*
     F*  SK110 - 1.01
     F*
     F*  Revisions
     F*
     F*  07 September, 1994
     F*  Hemant Kapadia
     F*  - Option 12 = Work with slots, added.
     F*
     F*    01/12/96  DAS  2.10
     F*      - Took out PIRUSER file and corresponding code and replaced
     F*        with call to GETWHSE.
     F*
     F*    05/08/96  HNK  2.12
     F*      - Added option 8 to work with tie/highs.
     F*
     F*    06/28/96  HNK  2.14
     F*      - Added option 3 to copy an item.
     F*
     F*    03/06/97  RH   2.19
     F*      - Added extended description using ITEMDSC file
     F*      - Added DSPSFL1 subfile for extended descriptions.
     F*
     F*    04/30/97  RH   2.20
     F*      - Refresh screen to reset pointer if CANCEL or EXIT was
     F*        used during F6 ADD.
     F*    07/07/97  RH   2.23
     F*      - Change to position to item for screen1.
411  F*    05/07/99  DAS  4.11
     F*      - If no warehouse is defined, $KWHSE contains blanks.
     F*        Add code to Z-ADD 0 to $KWHSE.
411  F*    06/13/99  KDE  4.11
     F*      - Change to call IT111 for adds/changes versus IT112. This
     F*        programs allows for the maintenance of item types.
411  F*    06/19/99  HNK  4.11
     F*      - Change to pass base item number to IT130 for contract
     F*        and alias items.  Item type and Contract/Alias item
     F*        number is also passed.
412  F*    09/16/99  RH   4.12
     F*      - Change to pass base item number to IT130 for breakdown
     F*        and same slot breakdown.  Item type and breakdown/same
     F*        slot breakdown item number is also passed.
412  F*    09/17/99  RH   4.12
     F*      - Change to pass base item number & item type to IT810
     F*        for Alias and Same slot breakdown items (A&S) to view
     F*        quantities.
     F*      - Add option 13=Linked Items to view linked items IT170CL
413  F*    11/24/99  DAS  4.13
     F*      - Took out 412 changes when calling IT810. IT810 has
     F*        been modified to identify the type of item being sent.
     F*      - Took out 412 changes when call IT130. IT130 has been
     F*        modified to identify the type of item being sent.
     F*
413a F*    02/25/00  DAS  4.13a
     F*      - Changed warehouse position cursor indicator from 01
     F*        to 03.
     F*      - Revised SFLDSP routine to output the POSTN record last.
     F*      - Revised SFLDSP routine display POSTN record base on
     F*        error condition. If error is on, write record in normal
     F*        sequence. Otherwise, write it last.
     F*        Re: Before change,the system would only position the
     F*            cursor correctly on the first display of the screen.
     F*            After that, the cursor would always be positioned
     F*            to the first field, warehouse.
     F*
415 AF*    04/24/01  DAS  4.15
     F*      - Added non-displayed options V1 & V2.
     F*      - Added non-display option V? to display an explanation
     F*        of the 'V' options on the option line. Note: This option
     F*        line is automatically set back to the original option
     F*        line the next time the screen is displayed.
416aAF*    01/17/02  RH   4.16a
     F*      - Added option 6 to print item slot list.
500a F*    05/17/05  HNK  5.00a
     F*      - Added option 91 to display pending receiving transactions
     F*
500b F*    06/01/05  HNK  5.00b
     F*      - Added option 92 to display pending replenishments       s
     F*      - Added option 93 to display receipts                     s
     F*      - Added F23=More options
     F*      - Added support for F24=More keys.
500cAF*    06/09/05  MLB  5.00c
     F*      - Fix: Revised program to pass item# in field $TITEM.
     F*        when calling IT376.
500dAF*    06/21/05  MLB  5.00d
     F*      - Fix: Revised FGET, FGETP to load $KWHSE into $POUKY
     F*        and $POFKY when record not found. Clearing $POUKY and
     F*        $POFKY was causing a data decimal error in ITWHSE.
500eAF*    09/23/05  RH   5.00e
     F*      - Fix: Revised SFLDS1 to position cursor to item each time
     F*        Was only positioning to item the first time for extended
     F*        description.
510 AF*    08/27/06  JCJ  5.10
     F*      - Enh: Revised program to add support for Client id
510aAF*    12/06/06  RH   5.10a
     F*      - Enh: Remove BFCADR, no longer used.
510bAF*    02/20/07  JCJ  5.10b
     F*      - Enh: Add repack item type.
     F*
     *----------------------------------------------------------------
     *  Client Custom Revisions: Packer's
     *
PCK A*    08/27/06  JCJ  PCK
     *      - Add option 7 & 10 to option line / option list
     *----------------------------------------------------------------
     *  Client Custom Revisions: City Wholesale
     *
CWa A*    11/26/07  RH   CWa
     *      - Revised to use CHKLIST to allow only certain users to
     *        use option 2, change.
     *----------------------------------------------------------------
     *  Client Custom Revisions: YHata
     *
YHAaA*    11/26/07  RH   YHAa
     *      - Revised to use CHKLIST to allow only certain users to
     *        use option 2, change.
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        POSITION CURSOR
     F*  21 - 29   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  79        CHAIN INDICATOR
     F*  90        PROTECT INPUT FIELDS FOR DELETE DISPLAY
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT110AFMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
219 AF                                        RECNO KSFILE DSPSFL1
     F                                        MSGK  KSFILE MSGREC
     FWORKOPT UF  E           K        DISK                      A
     FPIRITEM IF  E           K        DISK
     F            ITREC                             KRENAMERECORD
219 AFITEMDSC IF  E           K        DISK
219 AFOPTIONS IF  E           K        DISK
210 DF*IRUSER IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    ZOPT   20  20  2
PCK AE                    ZOP2   20  20  2
415 DE**                  OPTLN   1   2 75
500b E**                  OPTLN   1   3 75
500b E                    OPTLN   1   5 75
PCK AE                    OPTL2   1   5 75
500b E*                   CMDLN   1   1 79
500b E                    CMDLN   1   2 79
510 AI*----------------------------------------------------------------
510 AI*  Customer id
510 AI*
510 AI              'GETCLIENT'           C         @GETCL
510 AI*
510 A /COPY QCOPYSRC,IL#PACKERS
510 A /COPY QCOPYSRC,IL#CITYWHO
510 A /COPY QCOPYSRC,IL#YHATA
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        4  18 $KITEM
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I                                        1  50 DSUKEY
     I I            0                         1   30ITWHSE
     I                                        4  18 ITITEM
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
510 AI                                       22  36 $LITEM
PCK AI                                       37  38 $LCODE
PCK AI                                       39  39 $LTYPE
     I*
     I*----------------------------------------------------------------
219 AI* Data structure
219 AI*
219 AIOPDATA      DS
219 AI                                        1   1 OPSTYP
219 AI                                        2   6 OPWHDP
219 AI                                        7   8 OPUM1
219 AI                                        9  23 OPDUM
219 AI                                       24  43 OPCUM
219 AI                                       44  522OPCDIV
219 AI                                       53  53 OPCAUT
219 AI                                       54  54 OPCWRN
219 AI                                       55  571OPCRNG
219 AI                                       58  72 OPWUM
219 AI                                       73  73 OPXDSC
219 AI                                      117 117 OPTEND
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
411 DI*             'IT112'               C         @CHGPG
411 MI              'IT111'               C         @CHGPG
214 AI              'IT113'               C         @CPYPG
     I              'IT114'               C         @DELPG
     I              '*NONE'               C         @PRTPG
PCK AI              'UI110'               C         @CWGHT
PCK AI              'UI300'               C         @LSTPG
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I                                      137 137 $PITPE
     I*
     I                                       19  210$PWHSE
     I                                       22  36 $PITEM
219 AI                                       37  37 $PXFLG
     I$CVTDT      DS
     I                                        1   8 $CVDOP
     I                                        9  140$CVDD6
     I                                       15  220$CVDD8
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I*
413 AI                                        1  15 ERRIT1
413 AI                                       16  16 ERRTYP
413 AI                                       17  31 ERRIT2
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
CWa AI* Status message(s)
CWa AI              'Not authorized t-    C         ERR01
CWa AI              'o use option  '
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY 50
     C                     PARM           $RTNCD  8
     C*
     C*  Define keys
     C*
     C*     WORKOPT  (Unique key)
     C*
     C           WKOUNQ    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           WKOKYF
     C                     KFLD           WKOKYU
     C*
     C*     WORKOPT  (Partial key)
     C*
     C           WKOPRT    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     C           *LIKE     DEFN WKOKYF    $WKOF
     C           *LIKE     DEFN WKOKYU    $WKOU
     C           DELTOP    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           $WKOF
     C                     KFLD           $WKOU
     C*
     C*     USERCODE
     C*
     C           USKEY     KLIST
     C                     KFLD           #USER
219 AC*
219 AC*     OPTIONS
219 AC*
219 AC           OPKEY     KLIST
219 AC                     KFLD           $KWHSE
219 AC                     KFLD           OCODE
219 AC*
219 AC*     EXTENDED ITEM DESCRIPTION
219 AC*
219 AC           IDKEY     KLIST
219 AC                     KFLD           $KWHSE
219 AC                     KFLD           ITITEM
411 AC*
411 AC*     ITEMLNK file.
411 AC*
411 AC           ILKEY     KLIST
411 AC                     KFLD           $KWHSE
411 AC                     KFLD           ITITEM
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     MOVE *BLANKS   $RTNCD
510aDC*                    CALL 'BFCADR'
510aDC*                    PARM           $RTN    8
510aDC*          $RTN      IFEQ '*EXPIRED'
510aDC*                    MOVE 'EOJ'     NXTSCR
510aDC*                    MOVE '*EXIT   '$RTNCD
510aDC*                    ELSE
     C                     EXSR ZZINZ2
510aDC*                    END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
PCK AC                     SELEC
PCK AC           CLIENT    WHEQ PACKER
415 AC                     MOVE OPTL2,1   OPTLN1
415 AC                     MOVE OPTL2,2   OPTLN2
PCK AC                     OTHER
415 AC                     MOVE OPTLN,1   OPTLN1
415 AC                     MOVE OPTLN,2   OPTLN2
PCK AC                     ENDSL
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
     C*
     C           $RTNCD    IFEQ '*EXIT   '
     C           $RTNCD    OREQ '*CANCEL '
     C                     SETON                     LR
     C                     END
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
219 ACSR         UXFLAG    IFEQ *OFF
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
219 ACSR                   ELSE
219 ACSR                   EXSR SFLDS1
219 ACSR                   READ POSTNREC                 50
219 ACSR                   ENDIF
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXSR DELDSP
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     2021
413aACSR                   SETOF                     03
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
219 ACSR         UXFLAG    IFEQ *OFF
     CSR                   READ DSPSFC                   50
219 ACSR                   ELSE
219 ACSR                   READ DSPSFC1                  50
219 ACSR                   END
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR
     CSR                   MOVE '1'       *IN90
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   WRITECLR0306
     CSR                   WRITEDELREC
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   WRITECMDDEL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 wrap-up
     C*
     CSR         SCR02E    BEGSR
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE '0'       *IN90
     CSR                   WRITECLR0306
     C*
     C*   If delete was not canceled (no errors)
     C*     then reposition to record just before first deleted rec.
     C*
     CSR         CANCEL    IFEQ *OFF
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FRSTKY    $POFKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     C*
     C*   Otherwise, position to last record read.
     C*
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   END
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   EXSR OPTNS
     CSR                   ELSE
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
510aAC*
510aAC* Get client id.
510aAC*
510aAC                     CALL @GETCL
510aAC                     PARM           CLIENT 10
510aAC*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
219 AC                     WRITEDSPSFL1                79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ'0'
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR CMD5 - REFRESH
     C*
     CSR         *INKE     IFEQ '1'
     CSR                   EXSR CLRSCH
219 ACSR         UXFLAG    IFEQ '0'
     CSR         1         DO   10        X
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
219 ACSR                   ELSE
219 ACSR         1         DO   05        X
219 ACSR         X         CHAINDSPSFL1              79
219 ACSR         *IN79     IFEQ '0'
219 ACSR                   MOVE '  '      OPTION
219 ACSR                   UPDATDSPSFL1
219 ACSR                   END
219 ACSR                   END
219 ACSR                   ENDIF
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       CMD01E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR CMD6 - ADD RECORD
     C*
     CSR         *INKF     IFEQ '1'
     CSR                   EXSR INZPAR
     CSR                   MOVE '*ADD    '$PCMD
219 ACSR                   MOVE UXFLAG    $PXFLG
KDE  CSR                   MOVEL*BLANKS   $PITPE
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR         $PRTN     IFNE '*CANCEL '
     CSR         $PRTN     ANDNE'*EXIT   '
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   END
     CSR                   END
220 ACSR                   MOVE '*REFRESH'PAGCMD
220 ACSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD10 - MOVE RECORD THAT CUSOR IS ON TO TOP
     C*
     CSR         *INKJ     IFEQ '1'
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
219 DC*R                   SUB  10        ROW#
219 MCSR                   SUB  PRCREC    ROW#
     CSR         ROW#      IFLT 1
     CSR         ROW#      ORGT DSPLYD
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0106
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE UKEY,ROW# $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       CMD01E
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ '1'
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ '1'
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   MOVE '1'       CANCEL
     CSR                   EXSR SCR02E
     CSR                   GOTO CMD02E
     CSR                   END
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELADD   Add record to subfile for delete display
     C*
     CSR         DELADD    BEGSR
219 ACSR                   Z-ADDPRCREC    NR      20
219 ACSR                   ADD  1         NR
219 DC*R         RECNO     IFLT 11
219 ACSR         RECNO     IFLT NR
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  GET RECORD INFO
     C*
     CSR                   MOVE '*GET    '$POCMD
     CSR                   MOVE WKOKYU    $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       DELADE
     C*
     C*  SAVE KEY TO RECORD OF FIRST SCREEN LINE
     C*
     CSR         RECNO     IFEQ 1
     CSR                   MOVE WKOKYF    $WKOF
     CSR                   MOVE WKOKYU    $WKOU
     CSR                   END
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   MOVE WKOOPT    OPTION
219 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFL
219 ACSR                   ELSE
219 ACSR                   WRITEDSPSFL1
219 ACSR                   ENDIF
     CSR                   END
     CSR         DELADE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELDSP   Display subfile of records marked for deletion
     C*
     CSR         DELDSP    BEGSR
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
219 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFC
219 ACSR                   ELSE
219 ACSR                   WRITEDSPSFC1
219 ACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ENT01E
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         ERROR     CABEQ'1'       ENT01E
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R         OTAKEN    IFEQ '0'
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   GOTO ENT01E
     C*R                   END
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  Save first delete key.
     C*
     CSR         *LIKE     DEFN $PUKY     FRSTKY
     CSR                   MOVE $PUKY     FRSTKY
     C*
     C*  Delete the records that have been selected
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       STOP
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     C*
     CSR         WKOOPT    IFEQ ' 4'
     C*
     C*  Call delete program
     C*
     CSR                   EXSR INZPAR
     CSR                   MOVE '*DELETE '$PCMD
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   CALL @DELPG
     CSR                   PARM           $PARMS
     C*
     C*     Error occured - Error message sent back
     C*
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     C*
     C*     Error occured - Error message sent to program msgq
     C*
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     C*
     C*     Delete canceled
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     C*
     C*     Delete was successful.
     C*
     CSR         $PRTN     IFEQ '*OK     '
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         CANCEL    IFEQ '0'
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE '1'       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   END
     C*
     CSR                   END
     CSR                   END
     CSR                   EXSR SCR02E
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
500dAC                     MOVEL$KWHSE    $POUKY
     CSR                   MOVE *BLANKS   $POFKY
500dAC                     MOVEL$KWHSE    $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
500dAC                     MOVEL$KWHSE    $POUKY
     CSR                   MOVE *BLANKS   $POFKY
500dAC                     MOVEL$KWHSE    $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE '0'       OTAKEN  1
     C*
     C*     DO ALL DELETES FIRST (OPTION 4)
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       STOP
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     DOWEQ'0'
     CSR         WKOOPT    ANDNE' 4'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR                   END
     CSR         *IN79     IFEQ '0'
     CSR         WKOOPT    ANDEQ' 4'
     CSR                   MOVE '1'       OTAKEN
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   EXSR SCR02I
     CSR                   GOTO OPTNSE
     CSR                   END
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       CANCEL  1
     CSR                   MOVE '0'       STOP    1
     CSR         STOP      DOUEQ'1'
     CSR         CANCEL    OREQ '1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE '1'       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE '1'       REFRSH
     CSR         ERROR     IFEQ '0'
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE '0'       REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ '1'
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE '0'       REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS2   Execute individual options
     C*
     CSR         OPTNS2    BEGSR
     CSR                   EXSR INZPAR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     CSR                   SELEC
     C*
     C*   Change
     C*
     CSR         WKOOPT    WHEQ ' 2'
CWa  C*
CWa  C*     Check if user is authorized to use this option.
CWa  C           CLIENT    IFEQ CITYWH
CWa  C           CLIENT    OREQ YHATA
CWa  C                     CALL 'CHKLIST'
CWa  C                     PARM #PROG     $CPGM  10
CWa  C                     PARM WKOOPT    $COPT  20
CWa  C                     PARM #USER     $CUSER 10
CWa  C                     PARM *BLANKS   $CRTN  10
CWa  C*       User not authorized to use this option.
CWa  C           $CRTN     IFEQ '*NO '
CWa  C                     MOVE *ON       ERROR
CWa  C                     MOVE *ON       CANCEL
CWa  C                     MOVELERR01     ERRMSG    P
CWa  C                     EXSR ZM0105
CWa  C                     GOTO ENDOP2
CWa  C                     ENDIF
CWa  C                     ENDIF
CWa  C*
     CSR                   MOVE '*CHANGE '$PCMD
219 ACSR                   MOVE UXFLAG    $PXFLG
KDE  CSR                   MOVELITTYPE    $PITPE
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
214 AC*
214 AC*   Copy
214 AC*
214 ACSR         WKOOPT    WHEQ ' 3'
KDE ACSR         ITTYPE    IFEQ ' '
KDE ACSR         ITTYPE    OREQ 'B'
510bACSR         ITTYPE    OREQ 'R'
KDE  CSR                   MOVELITTYPE    $PITPE
214 ACSR                   MOVE '*COPY   '$PCMD
219 ACSR                   MOVE UXFLAG    $PXFLG
214 ACSR                   CALL @CPYPG
214 ACSR                   PARM           $PARMS
KDE  CSR                   ELSE
KDE  CSR                   MOVEL'*ERROR  '$PRTN
KDE ACSR                   ENDIF
     C*
     C*   View
     C*
     CSR         WKOOPT    WHEQ ' 5'
     CSR                   MOVE '*VIEW   '$PCMD
219 ACSR                   MOVE UXFLAG    $PXFLG
KDE  CSR                   MOVELITTYPE    $PITPE
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     C*
     C*   Print Item slot list
     C*
     CSR         WKOOPT    WHEQ ' 6'
416aDC*                    MOVE '*PRINT  '$PCMD
416aDC*                    CALL @PRTPG
416aDC*                    PARM           $PARMS
416a C*
416a CSR                   MOVE $PWHSE    WHSEA   3
500cDC*R                   MOVE ' '       $TITEM 15
500cMC                     MOVE $PITEM    $TITEM 15
416a CSR                   CALL 'IT376'
416a CSR                   PARM           WHSEA
416a CSR                   PARM           $PITEM
416a CSR                   PARM           $TITEM
     C*
     C*
     C*   View warehouse quantities.
     C*
     CSR         WKOOPT    WHEQ ' 9'
     CSR                   Z-ADD$PWHSE    WHSE    30
     C*
     CSR                   CALL 'IT810'
     CSR                   PARM           WHSE
     CSR                   PARM           $PITEM
     C*
     CSR                   OTHER
     CSR                   EXSR ZZOPT
     CSR                   ENDSL
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE '1'       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
CWa  C           ENDOP2    TAG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE '1'       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         DELTOP    SETLLWORKOPT
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFAC
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
219 AC*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
219 DC*R         P         IFGE 10
219 MCSR         P         IFGE PRCREC
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFAC    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
219 DC*R         DSPLYD    ADD  10        GOBACK  20
219 MCSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ '1'
219 DC*R         GOBACK    IFEQ 10
219 MCSR         GOBACK    IFEQ PRCREC
     CSR                   MOVE '1'       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of delete records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF2
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    READEWORKOPT                  79
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFW2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
219 AC*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR                   EXSR DELADD
219 DC*R         P         IFGE 10
219 MCSR         P         IFGE PRCREC
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         ENDFW2    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page of delete records
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB2
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
219 DC*R         DSPLYD    ADD  10        GOBACK  20
219 MCSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ '1'
     CSR         WKOPRT    SETGTWORKOPT
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    REDPEWORKOPT                  79
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR                   END
     CSR         ENDBK2    TAG
     CSR                   END
     C*
     C* IF WE HIT THE TOP REPOSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE '0'       NOMORE  1
     CSR         NOMORE    DOUEQ'1'
     CSR                   MOVE '0'       *IN21
219 ACSR         UXFLAG    IFEQ '0'
     CSR                   READCDSPSFL                   79
219 ACSR                   ELSE
219 ACSR                   READCDSPSFL1                  79
219 ACSR                   ENDIF
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
PCK ACSR                   SELEC
PCK ACSR         CLIENT    WHEQ PACKER
PCK ACSR         OPTION    LOKUPZOP2                     50
PCK ACSR                   OTHER
     CSR         OPTION    LOKUPZOPT                     50
PCK ACSR                   ENDSL
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
     CSR                   Z-ADDRECNO     Y       30
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ '0'
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
219 ACSR         UXFLAG    IFEQ '0'
     CSR         RECNO     IFLT 11
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   WRITEDSPSFL
     CSR                   END
219 ACSR                   ENDIF
219 AC*
219 AC*  Use extended description
219 AC*
219 ACSR         UXFLAG    IFEQ '1'
219 ACSR         RECNO     IFLT 6
219 ACSR                   ADD  1         RECNO
219 ACSR                   Z-ADDRECNO     Y
219 AC*
219 AC*  SAVE FILE AND UNIQUE KEYS
219 AC*
219 ACSR                   MOVE $POFKY    FKEY,Y
219 ACSR                   MOVE $POUKY    UKEY,Y
219 AC*
219 AC*  WRITE DISPLAY LINE TO SUBFILE
219 AC*
219 ACSR                   EXSR ZZFILL
219 ACSR                   WRITEDSPSFL1
219 ACSR                   END
219 ACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE '0'       *IN01
219 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFC
219 ACSR                   ELSE
219 ACSR                   WRITEDSPSFC1
219 ACSR                   ENDIF
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
413aDC*  POSITION CURSOR TO ITEM FIELD WHEN NO ERRORS EXIST
413aACSR         ERROR     IFEQ '1'
413aDC**                   MOVE '0'       *IN02
413aMC                     MOVE '0'       *IN02
     C                     WRITEPOSTNREC
413aACSR                   END
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
223 DC*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE '1'
     CSR         1         CHAINDSPSFL               79
     CSR         *IN79     IFEQ '0'
223 DC*R                   MOVE '1'       *IN20
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC
     C*
413aAC*  POSITION CURSOR TO ITEM FIELD WHEN NO ERRORS EXIST
413aACSR         ERROR     IFNE '1'
413aACSR                   MOVE '1'       *IN02
413aACSR                   WRITEPOSTNREC
413aACSR                   END
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
219 AC*
219 AC*  SFLDS1   Display subfile 1 , Extended description
219 AC*
219 ACSR         SFLDS1    BEGSR
219 AC*
219 AC*  WRITE OPTION AND COMMAND LINES TO DISPLAY
219 AC*
219 ACSR                   WRITEOPTREC
219 ACSR                   WRITECMDREC
219 AC*
219 AC*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
219 AC*
219 ACSR                   WRITEMORREC
219 AC*
219 AC*  WRITE POSITION TO FIELD TO DISPLAY
219 AC*
223 AC*  POSITION CURSOR TO ITEM FIELD WHEN NO ERRORS EXIST
500eACSR         ERROR     IFEQ '1'
500eMC                     MOVE '0'       *IN02
500eDC**                   MOVE '1'       *IN02
219 ACSR                   WRITEPOSTNREC
500eACSR                   END
219 AC*
219 AC*  GET ANY EXISTING VALUES FOR THE OPTIONS
219 AC*
219 ACSR                   EXSR SFLOP1
219 AC*
223 DC*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
219 AC*
219 ACSR         ERROR     IFNE '1'
219 ACSR         1         CHAINDSPSFL1              79
219 ACSR         *IN79     IFEQ '0'
223 DC*R                   MOVE '1'       *IN20
219 ACSR                   UPDATDSPSFL1
219 ACSR                   END
219 ACSR                   END
219 AC*
219 AC*  WRITE SUBFILE TO DISPLAY
219 AC*
219 ACSR                   MOVE '1'       *IN01
219 ACSR                   Z-ADD1         RECNO
219 ACSR                   WRITEDSPSFC1
500eAC*  POSITION CURSOR TO ITEM FIELD WHEN NO ERRORS EXIST
500eACSR         ERROR     IFNE '1'
500eACSR                   MOVE '1'       *IN02
500eACSR                   WRITEPOSTNREC
500eACSR                   END
     C*
219 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
219 DC*R         1         DO   10        X       30
219 MCSR         1         DO   PRCREC    X       30
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ '0'
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE '0'       *IN21
     CSR                   MOVE '0'       *IN20
     CSR                   END
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
219 AC*
219 AC*  SFLOP1   Initialize options for subfile 1, extended description
219 AC*
219 ACSR         SFLOP1    BEGSR
219 ACSR         1         DO   05        X       30
219 ACSR         X         CHAINDSPSFL1              79
219 ACSR         *IN79     IFEQ '0'
219 ACSR                   MOVE FKEY,X    WKOKYF
219 ACSR                   MOVE UKEY,X    WKOKYU
219 ACSR         WKOUNQ    CHAINWORKOPT              78
219 ACSR         *IN78     IFEQ '0'
219 ACSR                   MOVE WKOOPT    OPTION
219 ACSR                   MOVE WKOERR    *IN21
219 ACSR                   MOVE WKOERR    *IN20
219 ACSR                   ELSE
219 ACSR                   MOVE *BLANKS   OPTION
219 ACSR                   MOVE '0'       *IN21
219 ACSR                   MOVE '0'       *IN20
219 ACSR                   END
219 ACSR                   UPDATDSPSFL1
219 ACSR                   END
219 ACSR                   END
219 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   WRITEMSGCLR
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
413 AC*----------------------------------------------------------------
413 AC*   IT11001  Work with Tie/Highs not allowed.
413 AC*
413 ACSR         ZM1101    BEGSR
413 ACSR                   MOVE 'IT11001' #MSGID
413 ACSR                   MOVE '*DIAG  ' #MSGTP
413 ACSR                   MOVE *BLANKS   ERRMSG
413 ACSR                   MOVE ITITEM    ERRIT1
413 ACSR                   MOVE ITTYPE    ERRTYP
413 ACSR                   MOVE #BITEM    ERRIT2
413 ACSR                   MOVEAERRMSG    $MD,1
412 ACSR                   EXSR ZMPMSG
412 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
413 AC*  ZZBASE   Get corresponding base item for selected item
     C*
413 ACSR         ZZBASE    BEGSR
     C*
     CSR                   CALL 'GETBASE'
     CSR                   PARM ITWHSE    $GWHSE  30
     CSR                   PARM ITITEM    $GITEM 15
     CSR                   PARM ' '       #BITEM 15
     CSR                   PARM           #BITYP  1
     CSR                   PARM           #BDESC 30
     CSR                   PARM           #BPDSC 15
     CSR                   PARM           #BWHDP  5
     CSR                   PARM           #BSTYP  1
     CSR                   PARM           #BUM1   2
     CSR                   PARM           #BUM2   2
     CSR                   PARM           #BUMQ2  30
     CSR                   PARM           #BUM3   2
     CSR                   PARM           #BUMQ3  30
     CSR                   PARM ' '       #BCITM 15
     CSR                   PARM           #BCTYP  1
     CSR                   PARM           #BCDSC 30
     CSR                   PARM           #BCPDS 15
     CSR                   PARM           #BCWDP  5
     CSR                   PARM           #BCSTP  1
     CSR                   PARM           #BCUM1  2
     CSR                   PARM           #BCUM2  2
     CSR                   PARM           #BCUQ2  30
     CSR                   PARM           #BCUM3  2
     CSR                   PARM           #BCUQ3  30
     CSR                   PARM           #BRTN   8
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
500b C*
500b C*  TEST FOR CMD23 - More options
500b C*
500b CSR         *INKX     IFEQ '1'
500b CSR         VIEWO     IFEQ MAXVWO
500b CSR                   Z-ADD1         VIEWO
500b CSR                   ELSE
500b CSR                   ADD  1         VIEWO
500b CSR                   ENDIF
500b CSR         VIEWO     MULT 2         V       20
PCK ACSR                   SELEC
PCK ACSR         CLIENT    WHEQ PACKER
500b CSR                   MOVE OPTL2,V   OPTLN2
500b CSR                   SUB  1         V
500b CSR                   MOVE OPTL2,V   OPTLN1
PCK ACSR                   OTHER
500b CSR                   MOVE OPTLN,V   OPTLN2
500b CSR                   SUB  1         V
500b CSR                   MOVE OPTLN,V   OPTLN1
PCK ACSR                   ENDSL
500b CSR                   GOTO ENDCM1
500b CSR                   END
     C*
500b C*  Test for F24 - More keys
500b C*
500b CSR         *INKY     IFEQ *ON
500b CSR                   ADD  1         K
500b CSR         K         IFGT 2
500b CSR                   Z-ADD1         K
500b CSR                   ENDIF
500b CSR                   MOVE CMDLN,K   CMDLN1
500b CSR                   ENDIF
500b C*
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ '1'
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      IFEQ 4
     CSR         COL#      ANDGE38
413aDC**                   MOVE '1'       *IN01
413aMCSR                   MOVE '1'       *IN03
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    PTINP1
     CSR                   END
     CSR                   ELSE
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM9905
     CSR                   END
     CSR                   GOTO ENDCM1
     CSR                   END
     C*
     C*  Test for F9 - Display all warehouses
     C*
     CSR         *INKI     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*F9     '$RTNCD
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     CSR         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     C*R         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
219 ACSR         IDKEY     CHAINITEMDSC              79
219 ACSR         *IN79     IFEQ *ON
219 ACSR                   MOVE *BLANKS   IXDSC1
219 ACSR                   MOVE *BLANKS   IXDSC2
219 ACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           ITWHSE
     CSR                   KFLD           ITITEM
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           ITWHSE
     CSR                   KFLD           ITITEM
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           ITWHSE
     C*
     C*  Setup option and command display lines.
     C*
500b CSR                   Z-ADD1         VIEWO   10
500b CSR                   Z-ADD2         MAXVWO  10
500b CSR                   Z-ADD1         K       30
PCK ACSR                   SELEC
PCK ACSR         CLIENT    WHEQ PACKER
PCK ACSR                   MOVE OPTL2,1   OPTLN1
PCK ACSR                   MOVE OPTL2,2   OPTLN2
PCK ACSR                   OTHER
     CSR                   MOVE OPTLN,1   OPTLN1
212 ACSR                   MOVE OPTLN,2   OPTLN2
PCK ACSR                   ENDSL
     CSR                   MOVE CMDLN,1   CMDLN1
     C*
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Extra program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
411 ACSR                   Z-ADD0         $KWHSE
     C*
     C*   Get warehouse for user.
     C*
210 DC*R         USKEY     CHAINPIRUSER              79
210 DC*R         *IN79     IFEQ *OFF
210 DC*R                   Z-ADDUSWHSE    ITWHSE
210 DC*R                   ELSE
210 DC*R                   Z-ADD1         ITWHSE
210 DC*R                   ENDIF
210 AC*
210 ACSR                   CALL 'GETWHSE'
210 ACSR                   PARM           #USER
210 ACSR         ITWHSE    PARM 0         #WHSE   30
210 AC*
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   Z-ADDITWHSE    WHCODE
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDITWHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
413aDC**                   MOVE '1'       *IN01
413aMCSR                   MOVE '1'       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
413aDC**                   MOVE '1'       *IN01
413aMCSR                   MOVE '1'       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   Z-ADDITWHSE    $KWHSE
     CSR                   Z-ADDITWHSE    WHCODE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   END
     CSR                   END
     C*
223 ACSR                   MOVE '1'       *IN02
219 ACSR                   EXSR ZZXOPT
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
212 ACSR                   SELEC
PCK AC*
PCK AC*   Work with slots
PCK AC*
PCK AC           WKOOPT    WHEQ ' 7'
PCK AC                     MOVE ITITEM    $LITEM
PCK ACSR                   CALL @CWGHT
PCK ACSR                   PARM           $LPARM
212 AC*
212 AC*   Work with tie/highs
212 AC*
212 ACSR         WKOOPT    WHEQ ' 8'
413 ACSR         ITTYPE    IFEQ ' '
413 ACSR         ITTYPE    OREQ 'B'
510bACSR         ITTYPE    OREQ 'R'
212 ACSR                   MOVE '*WORKTIE'$PCMD
212 ACSR                   MOVE UXFLAG    $PXFLG
212 ACSR                   CALL @CHGPG
212 ACSR                   PARM           $PARMS
413 ACSR                   ELSE
413 ACSR                   MOVE *ON       ERROR
413 ACSR                   MOVE *ON       CANCEL
413 ACSR                   EXSR ZZBASE
413 ACSR                   EXSR ZM1101
413 ACSR                   ENDIF
PCK AC*
PCK AC*   Work with slots
PCK AC*
PCK AC           WKOOPT    WHEQ '10'
PCK AC                     MOVE ITITEM    $LITEM
PCK ACSR                   CALL @LSTPG
PCK ACSR                   PARM           $LPARM
212 MC*
212 MC*   Work with slots
212 MC*
212 MCSR         WKOOPT    WHEQ '12'
212 MCSR                   CALL 'IT130'
212 MCSR                   PARM           $PUKY
212 MCSR                   PARM           $PRTN
212 MC*
412 MC*
412 MC*   Linked Items
412 MC*
412 MCSR         WKOOPT    WHEQ '13'
412 MCSR                   CALL 'IT170CL'
412 MCSR                   PARM           ITWHSE
412 MCSR                   PARM           ITITEM
412 MCSR                   PARM           $PRTN
415 AC*
415 AC*   V? - Display option line for 'V' options
415 AC*
415 ACSR         WKOOPT    WHEQ 'V?'
PCK ACSR                   SELEC
PCK ACSR         CLIENT    WHEQ PACKER
PCK ACSR                   MOVE OPTL2,5   OPTLN1
PCK ACSR                   OTHER
500bMCSR                   MOVE OPTLN,5   OPTLN1
PCK ACSR                   ENDSL
     CSR                   MOVE *BLANKS   OPTLN2
415 AC*
415 AC*   V1 - Edit item quantities
415 AC*
415 ACSR         WKOOPT    WHEQ 'V1'
     CSR                   CALL 'IT830'
     CSR                   PARM '?'       $SCMD   8
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PITEM
415 AC*
415 AC*   V2 - Display open label records for item.
415 AC*
415 ACSR         WKOOPT    WHEQ 'V2'
     CSR                   CALL 'LB842CL'
     CSR                   PARM '?'       $SCMD   8
     CSR                   PARM $PWHSE    $SWHSE  30
     CSR                   PARM           $PITEM
500a C*
500a C*   91 - Display pending receiving transactions
500a C*
500a CSR         WKOOPT    WHEQ '91'
500a CSR                   CALL 'IT940CL'
500a CSR                   PARM           $PITEM
     C*
500b C*   92 - Display pending replenishment transactions
500b C*
500b CSR         WKOOPT    WHEQ '92'
500b CSR                   CALL 'IT945CL'
500b CSR                   PARM           $PITEM
     C*
500b C*   93 - Display all receipts
500b C*
500b CSR         WKOOPT    WHEQ '93'
500b CSR                   CALL 'IT951CL'
500b CSR                   PARM           $PWHSE
500b CSR                   PARM           $PITEM
     C*
212 ACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*      Verify warehouse entry.
     C*
     CSR         PTINP1    IFNE 0
     CSR                   Z-ADDPTINP1    WHCODE
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
413aDC**                   MOVE '1'       *IN01
413aMCSR                   MOVE '1'       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
413aDC**                   MOVE '1'       *IN01
413aMCSR                   MOVE '1'       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR                   Z-ADDPTINP1    ITWHSE
     CSR                   Z-ADDITWHSE    $KWHSE
     CSR                   MOVE *BLANKS   ITITEM
     CSR                   Z-ADDPTINP1    WHCODE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   Z-ADD0         PTINP1
     CSR                   MOVE *ON       REPOS
223 ACSR                   MOVE '1'       *IN02
219 ACSR                   EXSR ZZXOPT
     CSR                   END
     CSR                   END
     CSR                   END
     C*
     C*  See if user is trying to position to code
     C*
     CSR         PTINP2    IFNE *BLANKS
     CSR                   MOVE PTINP2    ITITEM
     CSR                   MOVE *BLANKS   PTINP2
     CSR                   MOVE *ON       REPOS
     CSR                   END
     CSR         ENDZPS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
219 AC*  ZZXOPT   Get use extended description option
     C*
219 ACSR         ZZXOPT    BEGSR
     C*
219 AC*   Get extended description option.
219 ACSR                   Z-ADD10        PRCREC  20
219 ACSR                   MOVE '0'       UXFLAG  1
219 ACSR                   MOVE '*ITEMMNT'OCODE   8
     C*
219 ACSR         OPKEY     CHAINOPTIONS              79
219 ACSR         *IN79     IFEQ *OFF
219 ACSR         OPXDSC    IFEQ 'Y'
219 ACSR                   MOVE '1'       UXFLAG  1
219 ACSR                   Z-ADD5         PRCREC
219 ACSR                   ENDIF
219 ACSR                   ENDIF
     C*
219 ACSR                   ENDSR
     C*
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
 2 3 4 5 6 7 8 91213V?V1V2919293
**  ZOP2 - Valid options
 2 3 4 5 6 7 8 9101213V?V1V2919293
**  OPTLN - Option display line
  2=Change  3=Copy  4=Delete  5=View  6=Print slots  8=Work with tie/highs
  9=View quantity  12=Work with slots  13=Linked items  91=Open Rcv Tran
  92=Open Replen Trans  93=Receipts

  V1=Edit item quantities  V2=View open label records for item
**  OPTL2 - Option display line
  2=Change  3=Copy  4=Delete  5=View  6=Print slots  7=UCI Maintenance
  8=Work with tie/high  9=View qty  10=Print UCI  12=Work with slots
  13=Linked items  91=Open Rcv Tran  92=Open Replen Trans  93=Receipts

  V1=Edit item quantities  V2=View open label records for item
**  CMDLN - Command display line
F3=Exit  F4=Prompt  F5=Refresh  F6=Create  F9=All warehouse  F24=More keys
F12=Cancel  F23=More options  F24=More keys
