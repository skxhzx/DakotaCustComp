     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  IT272     Replenish a slot - RF
     F*  24 July, 1997
     F*  Dave Sommerville
     F*  Hemant Kapadia
     F*
     F*  Notes
     F*
     F*  Revisions
     F*    07/03/98  RH   4.09
    AF*      - Revised to verify slot to zero if $ZERO = Y.
410 AF*    12/11/98  HNK  4.10
410 AF*      - Revised to start an Idle task, when repl. task is
     F*        ended. ZZTASK and ZZIDLE routines added.
411 AF*    06/18/99  RH   4.11
411 AF*      - Recompiled, ITEMLNK file changed.
     F*
413 AF*    02/14/00  HNK  4.13
     F*      - Revised to ignore Idle task in ZZCKU2 routine.
     F*        Only indirect task used to subtract overlapping task.
     F*
413aAF*    02/14/00  MLB  4.13a
     F*      - Revised routine ZZZERO to unlock SLOT2 if SLSTAT
     F*        *NE 'Z'.
413bAF*    02/23/00  MLB  4.13b
     F*      - Revised routine ZZCLSE to bypass processing when close
     F*        of tranaction was not successful.
     F*      - Revised routine ZZUPD1 to re-display SCREEN1 when close
     F*        of tranaction was not successful.
413cAF*    02/24/00  MLB  4.13c
     F*      - Revised routine ZZABRT to check available quantity does
     F*        not go negative when transaction is aborted.
     F*      - Revised routine SC1 to redisplay SCREEN1 when an error
     F*        occurs.
     F*      - Added new error msg routine ZM1320.
413dAF*    03/28/00  DAS  4.13d
     F*      - Added file PIRTRAN1.
     F*      - Revised ZZTASK to first look at PIRTRAN1 for a status
     F*        '2' record. This will save reading through every record
     F*        for the employee.
     F*
414 AF*    05/30/00  DAS  4.14
     F*      - Revised to delete crossdock slots when verified.
     F*
640aAF*    06/07/12  LMC  6.40a
     F*      - Enh: Added call to WRTTRAN1 for PIRTRAND.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT272FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FSLOT2   UF  E           K        DISK
     FPIRITEM IF  E           K        DISK
410 MFPIRTRAN UF  E           K        DISK                      A
     FLABEL   UF  E           K        DISK
     FITEMLNK IF  E           K        DISK
409 AFVSLOT1  UF  E           K        DISK
410 AFTASK    IF  E           K        DISK
410 AFPIRTRAN2IF  E           K        DISK
413dMF            PTREC                             KRENAMEPTREC2
413dDF*           PTREC                             KRENAMEPTREC1
410 AFPIRUSER IF  E           K        DISK
413dAFPIRTRAN1IF  E           K        DISK
413dAF            PTREC                             KRENAMEPTREC1
414 AFCROSSDK UF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1   3 60
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1 100 $LEN50
     I                                        1   30$PWHSE
     I                                        4  18 $PITEM
     I                                       19  30 $PTDSP
     I                                       31  42 $PFDSP
     I                                       43  490$PLBL#
     I                                       50  560$PTRN#
     I                                       57  630$PBAT#
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I                                       81  88 $LTYPE
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I                                       27  41 $LITEM
     I                                       42  53 $LDISP
     I*
     I                                       27  38 $LDSP1
     I                                       39  53 $LITM1
     I*
     I                                       22  26 $LRTE
     I                                       27  35 $LPO
     I                                       36  420$LTRN#
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'FRMTIT'              C         @FMTIT
     I              '*NONE'               C         @VEWPG
     I              'ADDSTDTRN'           C         @ADDTR
     I              'ADJTSKDET'           C         @ADJTD
     I              'ADJTRAN  '           C         @ADJTR
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                    P   1   50ERPO#
     I                                        6  20 ERITEM
     I*
     I                                    P   1   40ERQTY
     I                                    P   5   80ERNQTY
413cAI*
413cAI                                        1  12 ERFMSL
413cAI                                       13  24 ERTOSL
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*
     C*  Parameters
     C*
     C*    Input Parameters
     C*      None
     C*
     C*    Returned Parameters
     C*      None
     C*
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY100
     C                     PARM           $RTNCD  8
409 AC                     PARM           $ZERO   1
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C*
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXFMTSCREEN2                50
     CSR                   ENDIF
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR         REFRSH    IFEQ *ON
     CSR                   EXSR ZZFIL1
     CSR                   ENDIF
     CSR                   MOVE *OFF      REFRSH  1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     CSR         REFRSH    IFEQ *ON
     CSR                   EXSR ZZFIL2
     CSR                   ENDIF
     CSR                   MOVE *OFF      REFRSH
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   EXSR ZZABRT
413cAC*
413cAC*    Unable to abort transaction - re-display screen.
413cAC*
413cACSR                   SELEC
413cACSR         ERROR     WHEQ *ON
413cACSR                   EXSR SCR01I
413cACSR                   GOTO ENDSC1
413cAC*
413cACSR                   OTHER
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
413cACSR                   ENDSL
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *OFF      *IN20
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   EXSR ZZABRT
413cAC*
413cAC*    Unable to abort transaction - re-display screen.
413cAC*
413cACSR                   SELEC
413cACSR         ERROR     WHEQ *ON
413cACSR                   EXSR SCR01I
413cACSR                   GOTO ENDSC1
413cAC*
413cACSR                   OTHER
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
413cACSR                   ENDSL
     CSR                   ENDIF
     C*
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *OFF      REFRSH
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ*ON       ENDSC2
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0110  Number must be > 0
     C*
     CSR         ZM0110    BEGSR
     CSR                   MOVE 'PIR0110' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PIR0203  Value cannot be blank.
     C*
     CSR         ZM0203    BEGSR
     CSR                   MOVE 'PIR0203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
    DC*R                   MOVEADESC,1    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
413cAC*----------------------------------------------------------------
413cAC*   IT13208  Replenishment transaction cannot be cancelled.
413cAC*
413cACSR         ZM1320    BEGSR
413cACSR                   MOVE 'IT13208' #MSGID
413cACSR                   MOVE '*DIAG  ' #MSGTP
413cACSR                   MOVEAERRMSG    $MD,1
413cACSR                   EXSR ZMPMSG
413cACSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28001  Invalid slot entered.(FROM)
     C*
     CSR         ZM2801    BEGSR
     CSR                   MOVE 'IT28001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28002  Invalid slot entered.(TO)
     C*
     CSR         ZM2802    BEGSR
     CSR                   MOVE 'IT28002' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   IT28003 Qty cannot be > system assigned qty.
     C*
     CSR         ZM2803    BEGSR
     CSR                   MOVE 'IT28003' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT27001  Slot not a pick slot or not in fixed section.
     C*
     CSR         ZM7001    BEGSR
     CSR                   MOVE 'IT27001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT27002  Potential replenishment not found for this slot.
     C*
     CSR         ZM7002    BEGSR
     CSR                   MOVE 'IT27002' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
410 ACSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
410 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C* Slot can't be blank.
     C*
     CSR         W1SCAN    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVEADESC,2    ERRMSG
     CSR                   EXSR ZM0203
     CSR                   ENDIF
     C*
     C*
     C*  Verify slot.
     C*
     CSR         W1SCAN    IFNE *BLANKS
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   MOVE *BLANKS   $LITEM
     CSR                   MOVE W1SCAN    $LDISP
     CSR                   CALL 'SL900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         W1SCAN    IFNE W1TDIS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM2802
     CSR                   ENDIF
     C*
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ '1'
     CSR                   MOVE '1'       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   SELEC
     C*
     C*     Warehouse.
    DC*
    DC*R         ROW#      WHEQ 3
    DC*R                   MOVE *ON       *IN01
    DC*R                   MOVE '*LOOKUP '$LCMD
    DC*R                   Z-ADDW1WHSE    $LWHSE
    DC*R                   CALL 'WH900'
    DC*R                   PARM           $LPARM
    DC*R         $LRTN     IFEQ '*SELECT '
    DC*R                   Z-ADD$LWHSE    W1WHSE
    DC*R                   ENDIF
    DC*
    DC*     Warehouse department.
    DC*
    DC*R         ROW#      WHEQ 4
    DC*R                   MOVE *ON       *IN02
    DC*R                   MOVE '*LOOKUP '$LCMD
    DC*R                   Z-ADDW1WHSE    $LWHSE
    DC*R                   MOVE W1WHDP    $LWHDP
    DC*R                   CALL 'WD900'
    DC*R                   PARM           $LPARM
    DC*R         $LRTN     IFEQ '*SELECT '
    DC*R                   MOVE $LWHDP    W1WHDP
    DC*R                   ENDIF
    DC*
    DC*     Slot.
    DC*
    DC*R         ROW#      WHEQ 5
    DC*R                   MOVE *ON       *IN04
    DC*R                   MOVE '*GENERAL'$LCMD
    DC*R                   Z-ADDW1WHSE    $LWHSE
    DC*R                   MOVE W1WHDP    $LWHDP
    DC*R                   MOVE *BLANKS   $LITEM
    DC*R                   MOVE W1TDIS    $LDISP
    DC*R                   CALL 'SL900'
    DC*R                   PARM           $LPARM
    DC*R         $LRTN     IFEQ '*SELECT '
    DC*R                   MOVE $LDISP    W1TDIS
    DC*R                   ENDIF
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*      F20 - Go ahead with replenishment.
     C*
     CSR         *INKU     IFEQ *ON
     C*
     CSR                   ENDIF
     C*
     CSR                   ENDIF
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     C**                   CALL 'GETWHSE'
     C**                   PARM           #USER
     C**                   PARM 0         #WHSE   30
     C*
     CSR                   Z-ADD$PWHSE    W1WHSE
     CSR                   MOVELITWHDP    W1WHDP
     CSR                   MOVEL$PTDSP    W1TDIS
     CSR                   MOVELITITEM    W1ITEM
     C*
     C*  Get QUANTITY FROM LABEL FILE.
     C*
     CSR         $PLBL#    CHAINLABEL               N79
     C                     Z-ADDLBQPCK    W1QTY
     CSR                   MOVE *BLANKS   W1SCAN
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZIDLE   Create and Start an Idle task.
     C*
410 ACSR         ZZIDLE    BEGSR
410 ACSR                   CALL 'PIRTRN#'
410 ACSR                   PARM           PTTRN#
410 ACSR                   MOVE '2'       PTSTAT
410 ACSR                   MOVEL'IDLE  '  PTTASK
410 ACSR                   MOVEL'IDLE  '  T#TASK
410 ACSR         TKKEY     CHAINTASK                 77
410 ACSR                   MOVE TKCAT     PTCAT
410 ACSR                   MOVE TKSUB     PTSUB
410 ACSR                   SELEC
410 ACSR         TKTLVL    WHEQ 'S'
410 ACSR                   Z-ADDW1WHSE    PTWHSE
410 ACSR                   MOVE W1WHDP    PTWHDP
410 ACSR                   MOVE W1STYP    PTSTYP
410 ACSR         TKTLVL    WHEQ 'D'
410 ACSR                   Z-ADDW1WHSE    PTWHSE
410 ACSR                   MOVE W1WHDP    PTWHDP
410 ACSR                   MOVE *BLANKS   PTSTYP
410 ACSR                   OTHER
410 ACSR                   Z-ADDW1WHSE    PTWHSE
410 ACSR                   MOVE *BLANKS   PTWHDP
410 ACSR                   MOVE *BLANKS   PTSTYP
410 ACSR                   ENDSL
410 ACSR                   MOVE W1SHFT    PTSHFT
410 ACSR                   MOVE W1CREW    PTCREW
410 ACSR                   Z-ADDW1EMP#    PTEMP#
410 ACSR                   Z-ADD0         PTCUBE
410 ACSR                   Z-ADD0         PTSWGT
410 ACSR                   Z-ADD0         PTPCS
410 ACSR                   Z-ADD0         PTAISL
410 ACSR                   Z-ADD0         PTQTY1
410 ACSR                   Z-ADD0         PTQTY2
410 ACSR                   Z-ADD0         PTQTY3
410 ACSR                   MOVE '*CURCMD '$CVCMD
410 ACSR                   CALL @CVTDT
410 ACSR                   PARM           $CVTDT
410 ACSR                   Z-ADD$CVD8O    PTGDTE
410 ACSR                   TIME           PTGTIM
410 ACSR                   Z-ADD$CVD8O    PTSDTE
410 ACSR                   TIME           PTSTIM
410 ACSR                   Z-ADD0         PTEDTE
410 ACSR                   Z-ADD0         PTETIM
410 ACSR                   MOVE *BLANKS   PTETYP
410 ACSR                   Z-ADD0         PTCDTE
410 ACSR                   Z-ADD0         PTCTIM
410 ACSR                   Z-ADD0         PTDMIN
410 ACSR                   Z-ADD0         PTIMIN
410 ACSR                   MOVE *BLANKS   PTRTPO
410 ACSR                   WRITEPTREC                  79
410 ACSR         *IN79     IFEQ '1'
410 ACSR                   MOVE '1'       ERROR
410 ACSR                   EXSR ZM71
410 ACSR                   GOTO ENDIDL
410 ACSR                   ENDIF
640aAC                     EXSR ZZWRTT
     C*
410 ACSR         ENDIDL    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*R                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
410 ACSR                   MOVE *OFF      FOREVR  1
410 ACSR         *LIKE     DEFN PTSTIM    ZZSTIM
410 ACSR         *LIKE     DEFN PTETIM    ZZETIM
410 ACSR         *LIKE     DEFN PTSDTE    ZZSDTE
410 ACSR         *LIKE     DEFN PTEDTE    ZZEDTE
     CSR         *LIKE     DEFN ITITEM    SVITEM
     CSR         *LIKE     DEFN SLLOC     TOLOC
     CSR         *LIKE     DEFN SLRLVL    TORLVL
     CSR         *LIKE     DEFN SLHAND    TOHAND
     CSR         *LIKE     DEFN SLLOC     FMLOC
     CSR         *LIKE     DEFN SLRLVL    FMRLVL
     CSR         *LIKE     DEFN SLHAND    FMHAND
     CSR         *LIKE     DEFN SLPSEQ    FMPSEQ
     CSR         *LIKE     DEFN SLSTYP    TOSTYP
     CSR         *LIKE     DEFN ITUMQ2    RPLQTY
     CSR         *LIKE     DEFN LBQRMN    SVQRMN
     C*
     CSR         RLFKEY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     CSR                   KFLD           $PTDSP
     C*
     CSR         RLKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     CSR                   KFLD           $PTDSP
     CSR                   KFLD           $PFDSP
     C*
     C*  Define key for SLOT2 file. (From slot)
     C*
     CSR         SLFKEY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     CSR                   KFLD           $PFDSP
     C*
     C*  Define key for SLOT2 file. (To slot)
     C*
     CSR         SLTKEY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     CSR                   KFLD           W1TDIS
     C*
     C*  Define key for item tie/high definition file.
     C*
     CSR         IDKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PITEM
     CSR                   KFLD           SLSDEF
     C*
     C*  Define key for PIRITEM file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PITEM
     C*
     C*  Define key for PIRITEM file. (For link item)
     C*
     CSR         ILKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ILITM2
     C*
     C*  Define key for PIRTRAN file.
     C*
     CSR         PTKEY     KLIST
     CSR                   KFLD           $PTRN#
     C*
     C*  Define partial key for RPLFILE file.
     C*
     CSR         RLPKEY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     C*
     C*  Define key for LABEL file.
     C*
     CSR         LBKEY     KLIST
     CSR                   KFLD           LBLBL#
     C*
     C*  Define key for TASKDET file.
     C*
     CSR         KEYTD     KLIST
     CSR                   KFLD           PTTASK
     CSR                   KFLD           PTWHSE
     CSR                   KFLD           PTWHDP
     CSR                   KFLD           PTSTYP
     C*
     C*  Define key for ITEMDEF2 file.
     C*
     CSR         KEYID2    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PITEM
     CSR                   KFLD           SLSDEF
     C*
     C*  Convert today's date into century format.
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TODAY   80
     C*
     C*    - Get employee number, default dept and section.
     C*
410 ACSR         *LIKE     DEFN USEMP#    W1EMP#
410 ACSR         *LIKE     DEFN USSTYP    W1STYP
410 ACSR         *LIKE     DEFN USSHFT    W1SHFT
410 ACSR         *LIKE     DEFN USCREW    W1CREW
410 ACSR         USKEY     KLIST
410 ACSR                   KFLD           #USER
410 AC*
410 ACSR         USKEY     CHAINPIRUSER              79
410 ACSR         *IN79     IFEQ *OFF
410 ACSR                   Z-ADDUSEMP#    W1EMP#
410 ACSR                   MOVE USSTYP    W1STYP
410 ACSR                   MOVE USSHFT    W1SHFT
410 ACSR                   MOVE USCREW    W1CREW
410 ACSR                   ELSE
410 ACSR                   Z-ADD0         W1EMP#
410 ACSR                   MOVE *BLANKS   W1STYP
410 ACSR                   MOVE *BLANKS   W1SHFT
410 ACSR                   MOVE *BLANKS   W1CREW
410 ACSR                   ENDIF
     C*
410 ACSR         TKKEY     KLIST
410 ACSR                   KFLD           T#TASK  6
410 AC*
410 AC*  Define key for PIRTRAN2 file.
410 AC*
410 ACSR         *LIKE     DEFN PTSDTE    STDATE
410 ACSR         *LIKE     DEFN PTSTIM    STTIME
410 ACSR         PTKE22    KLIST
410 ACSR                   KFLD           W1EMP#
410 ACSR                   KFLD           STDATE
410 ACSR                   KFLD           STTIME
     C*
     C*  Define partial key for PIRTRAN2 file.
     C*
410 ACSR         PTKEY2    KLIST
410 ACSR                   KFLD           W1EMP#
410 ACSR                   KFLD           STDATE
413dAC*
413dAC*  Define key for PIRTRAN1 file.
413dAC*
413dACSR         *LIKE     DEFN PTSTAT    KYSTAT
413dACSR         PTKEY1    KLIST
413dACSR                   KFLD           W1EMP#
413dACSR                   KFLD           KYSTAT
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Select first screen to display.
     C*
     CSR                   MOVE *ON       REFRSH
     CSR                   MOVE *ON       *IN02
     CSR         ITKEY     CHAINPIRITEM              79
     CSR                   MOVELITITEM    W1ITEM
     CSR                   MOVELITWHDP    W1WHDP
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZBITM   Broken case item
     C*
     CSR         ZZBITM    BEGSR
     CSR         ITKEY     CHAINITEMLNK              79
     CSR         ILKEY     CHAINPIRITEM              79
     CSR                   MOVELILITM2    $IITEM
     CSR                   MOVELITDESC    $IDESC
     CSR                   MOVELITPDSC    $IPDSC
     CSR                   EXSR ZZGETI
     CSR         ENDBIT    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCKU2   Check for overlapping task and update the current
     C*           task just ended, by adjusting the time.
     C*
410 ACSR         ZZCKU2    BEGSR
     CSR         *LIKE     DEFN PTTRN#    SVTRN#
     CSR         *LIKE     DEFN PTDMIN    SVTLEN
     CSR                   Z-ADD0         SVTLEN
     CSR         PTKEY2    SETLLPIRTRAN2
     CSR         FOREVR    DOWEQFOREVR
     CSR                   READ PIRTRAN2                 79
     CSR         *IN79     IFEQ *ON
     CSR         PTSDTE    ORLT ZZSDTE
     CSR                   LEAVE
     CSR                   ENDIF
     C*   Skip the task that just ended.
     CSR         *IN79     IFEQ *OFF
     CSR         PTTRN#    ANDEQSVTRN#
     CSR                   ITER
     CSR                   ENDIF
     C*
     C*   Skip 'IDLE' task
     C*
413 ACSR         PTTASK    IFEQ 'IDLE'
413 ACSR                   ITER
413 ACSR                   ENDIF
413 AC*
413 ACSR                   MOVE PTTASK    T#TASK
413 ACSR         TKKEY     CHAINTASK                 79
413 ACSR         *IN79     IFEQ *ON
413 ACSR                   MOVE ' '       TKTYPE
413 ACSR                   ENDIF
     C*   Accumulate overlapping minutes.(Same start and end date)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  10:00:23   11:30:35  1/25/96
     C*Manual(PT) BREAK 1/25/96  10:30:00   10:45:00  1/25/96   (15)
     C*
     C*   Auto    CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*   Manual  BREAK 1/25/96  23:30:00    1:30:00  1/26/96   (120)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDEQZZSDTE
     CSR         PTEDTE    ANDEQZZEDTE
     CSR         PTSTIM    ANDGEZZSTIM
     CSR         PTETIM    ANDLEZZETIM
413 ACSR         TKTYPE    ANDEQ'I'
410 DC*R         PTETYP    ANDEQ'M'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     C*   Accumulate overlapping minutes(Diff start date/same end date)
     C*                                  (Past midnight)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*Manual(PT) BREAK 1/26/96   8:00:00    8:30:00  1/26/96   (30)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDGTZZSDTE
     CSR         PTEDTE    ANDEQZZEDTE
     CSR         PTETIM    ANDLEZZETIM
413 ACSR         TKTYPE    ANDEQ'I'
410 DC*R         PTETYP    ANDEQ'M'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     C*   Accumulate overlapping minutes.(Same start date/diff end date)
     C*                  Start     Start       End      End    Overlap
     C*           Task    date      time       time     date   Minutes
     C*Auto  (ZZ) CLEAN 1/25/96  14:50:23    9:30:23  1/26/96
     C*Manual(PT) BREAK 1/25/96  16:00:00   16:30:00  1/25/96   (30)
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PTSDTE    ANDEQZZSDTE
     CSR         PTEDTE    ANDLTZZEDTE
     CSR         PTSTIM    ANDGEZZSTIM
413 ACSR         TKTYPE    ANDEQ'I'
410 DC*R         PTETYP    ANDEQ'M'
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTETIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   ADD  TIMLEN    SVTLEN
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     C*   Update the task that just ended.
     C*
     CSR         SVTRN#    CHAINPIRTRAN              79
     CSR         *IN79     IFEQ *OFF
     CSR         PTDMIN    IFGT 0
     CSR         PTDMIN    SUB  SVTLEN    PTDMIN
     CSR                   ELSE
     CSR         PTIMIN    SUB  SVTLEN    PTIMIN
     CSR                   ENDIF
     CSR                   UPDATPTREC
640aAC                     EXSR ZZWRTT
     CSR                   ENDIF
410 ACSR         ENDCU2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCLSE   Close a transaction
     C*
     CSR         ZZCLSE    BEGSR
     C*
     CSR                   MOVE '*CLOSE  '$LCMD
     CSR                   MOVE '*INTER  '$LTYPE
     CSR                   Z-ADD0         $LWHSE
     CSR                   MOVE *BLANKS   $LRTE
     CSR                   MOVE *BLANKS   $LPO
     CSR                   Z-ADD$PTRN#    $LTRN#
     C*
     CSR                   CALL 'PT132'
     CSR                   PARM           $LPARM
413bAC*
413bAC*     Error occured - Error message sent back
413bAC*
413bACSR                   SELEC
413bACSR         $LRTN     WHEQ '*ERROR  '
413bACSR                   MOVE *ON       ERROR
413bACSR                   MOVEL$LERM     ERRMSG
413bACSR                   EXSR ZM0105
413bAC*
413bAC*     Error occured - Error message sent to program msgq
413bAC*
413bACSR         $LRTN     WHEQ '*PGMQ   '
413bACSR                   MOVE *ON       ERROR
413bACSR                   MOVE $LMSG     #MSGK
413bACSR                   EXSR ZMQMSG
413bAC*
413bAC*    Close was successful.
413bAC*
413bACSR         $LRTN     WHEQ '*OK     '
     C*
     C*   Calculate the time in minutes it took to complete this task.
     C*   PTCTIM is used for end time instead of PTETIM, because close
     C*   time and End time are the same in this case.
     C*
     CSR         *LIKE     DEFN PTSTIM    STRTIM
     CSR         *LIKE     DEFN PTETIM    FINTIM
     CSR         PTKEY     CHAINPIRTRAN              79
     CSR                   Z-ADDPTSTIM    STRTIM
     CSR                   Z-ADDPTCTIM    FINTIM
     CSR                   EXSR ZZTIME
     CSR                   Z-ADDTIMLEN    PTDMIN
     CSR                   UPDATPTREC
640aAC                     EXSR ZZWRTT
     C*
     C*        There is a posibility that a manual task might have
     C*        been added before the current task was ended. Hence
     C*        adjust the current task just ended, if there is
     C*        any overlapping manual task.
     C*
410 ACSR                   Z-ADDPTTRN#    SVTRN#
     C*  Past overnight. (PTEDTE > PTSDTE)
410 ACSR         PTEDTE    IFGT PTSDTE
410 ACSR                   Z-ADDPTEDTE    STDATE
410 ACSR                   ELSE
410 ACSR                   Z-ADDPTSDTE    STDATE
410 ACSR                   ENDIF
410 ACSR                   Z-ADDPTSDTE    ZZSDTE
410 ACSR                   Z-ADDPTEDTE    ZZEDTE
410 ACSR                   Z-ADDPTSTIM    ZZSTIM
410 ACSR                   Z-ADDPTETIM    ZZETIM
410 ACSR                   EXSR ZZCKU2
     C*
410 AC*   Start an 'IDLE' task, if no open task.
410 ACSR                   Z-ADD0         CURTRN  70
410 ACSR                   MOVE *BLANKS   CURTSK  6
410 ACSR                   MOVE *BLANKS   CURTYP  1
410 ACSR                   MOVE *OFF      CURENT  1
410 ACSR                   EXSR ZZTASK
410 ACSR         CURENT    IFEQ *OFF
410 ACSR                   MOVE 'IDLE  '  W1TASK  6
410 ACSR                   EXSR ZZIDLE
410 ACSR                   ENDIF
413bACSR                   ENDSL
     C*
     CSR         ENDCLS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGETI   Get item description and pack description.
     C*
     CSR         ZZGETI    BEGSR
     C*
     CSR                   MOVE *BLANKS   $ISTR
     CSR                   CALL @FMTIT
     CSR                   PARM           $IITEM 15
     CSR                   PARM           $IDESC 30
     CSR                   PARM           $IPDSC 15
     CSR                   PARM           $ISTR  70
     CSR                   MOVEL$ISTR     SVITEM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTASK  Get current task.
     C*
410 ACSR         ZZTASK    BEGSR
410 ACSR                   Z-ADD*HIVAL    STDATE
410 ACSR                   Z-ADD*HIVAL    STTIME
     C*
413dACSR                   MOVE '2'       KYSTAT
413dACSR         PTKEY1    SETLLPIRTRAN1
413dACSR         PTKEY1    READEPIRTRAN1                 79
413dACSR         *IN79     IFEQ *ON
413dACSR                   MOVE *OFF      FOUND
413dACSR                   GOTO ENDTSK
413dACSR                   ENDIF
     C*
410 ACSR         PTKE22    SETLLPIRTRAN2
410 ACSR         FOREVR    DOWEQFOREVR
410 ACSR                   READ PIRTRAN2                 79
410 ACSR         *IN79     IFEQ *ON
410 ACSR         PTEMP#    ORNE W1EMP#
410 ACSR                   MOVE *OFF      FOUND   1
410 ACSR                   LEAVE
410 ACSR                   ENDIF
410 ACSR         PTSTAT    IFNE '2'
410 ACSR                   ITER
410 ACSR                   ENDIF
410 AC*   Found an active transaction
410 ACSR                   MOVE *ON       CURENT
410 ACSR                   Z-ADDPTTRN#    CURTRN
410 ACSR                   MOVE PTTASK    T#TASK
410 ACSR         TKKEY     CHAINTASK                 79
410 ACSR         *IN79     IFEQ *OFF
410 ACSR                   MOVE TKCODE    CURTSK
410 ACSR                   MOVE TKTYPE    CURTYP
410 ACSR                   ENDIF
410 ACSR                   LEAVE
410 ACSR                   ENDDO
410 ACSR         ENDTSK    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTIME   Update for screen 1.
     C*
     CSR         ZZTIME    BEGSR
     C*
     C*      Calculate length of time in minutes for output.
     C*
     CSR                   Z-ADDSTRTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPBEG  40
     CSR                   ADD  DSMM      TMPBEG
     C*
     CSR                   Z-ADDFINTIM    DSHMS
     C*   Round up minute, if the seconds is >= 30
     CSR         DSSS      IFGE 30
     CSR                   ADD  1         DSMM
     CSR                   ENDIF
     C*
     C*   If the ending time is < starting time, than
     C*   we have gone past the midnight.
     C*
     CSR         FINTIM    IFLT STRTIM
     CSR                   ADD  24        DSHH
     CSR                   ENDIF
     CSR         DSHH      MULT 60        TMPEND  40
     CSR                   ADD  DSMM      TMPEND
     C*
     CSR         *LIKE     DEFN PTDMIN    TIMLEN
     CSR         TMPEND    SUB  TMPBEG    TIMLEN
     CSR         TIMLEN    IFLT 0
     CSR                   Z-ADD0         TIMLEN
     CSR                   ENDIF
     C*
     CSR         ENDTIM    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZABRT   Abort a transaction
     C*
     CSR         ZZABRT    BEGSR
     C**         PTKEY     CHAINPIRTRAN             N79
     C**         RLTYPE    IFEQ 'B'
     C**                   MOVE 'REPLBK'  @PTASK
     C**                   ELSE
     CSR                   MOVE 'REPL  '  @PTASK
     C**                   ENDIF
413cAC*
413cACSR                   MOVE *OFF      ERROR
413cAC*
413cAC*  Update slot qty (Decrease RCV qty) (To Slot)
413cAC*
413cACSR         SLTKEY    CHAINSLOT2                79
413cACSR                   SUB  W1QTY     SLRCV1
413cAC*
413cAC*  Get available quantity in pick slot.
413cAC*
413cACSR                   CALL 'SLOTQTY'
413cACSR                   PARM           SLSTK1
413cACSR                   PARM           SLSTK2
413cACSR                   PARM           SLSTK3
413cAC*
413cACSR                   PARM           SLALC1
413cACSR                   PARM           SLALC2
413cACSR                   PARM           SLALC3
413cAC*
413cACSR                   PARM           SLTFR1
413cACSR                   PARM           SLTFR2
413cACSR                   PARM           SLTFR3
413cAC*
413cACSR                   PARM           SLPCK1
413cACSR                   PARM           SLPCK2
413cACSR                   PARM           SLPCK3
413cAC*
413cACSR                   PARM           SLRCV1
413cACSR                   PARM           SLRCV2
413cACSR                   PARM           SLRCV3
413cAC*
413cACSR                   PARM           STOCK1  50
413cACSR                   PARM           STOCK2  30
413cACSR                   PARM           STOCK3  30
413cAC*
413cACSR                   PARM           AVAIL1  50
413cACSR                   PARM           AVAIL2  30
413cACSR                   PARM           AVAIL3  30
413cAC*
413cAC*    Test available qty to make sure it won't go negative
413cAC*    when we abort this transaction.
413cAC*
413cACSR                   SELEC
413cACSR         AVAIL1    WHLT 0
413cACSR                   UNLCKSLOT2
413cACSR                   MOVE *ON       ERROR
413cACSR                   MOVE *ON       *IN23
413cACSR                   MOVE *ON       *IN03
413cACSR                   MOVE *BLANKS   ERRMSG
413cACSR                   MOVE $PFDSP    ERFMSL
413cACSR                   MOVE W1TDIS    ERTOSL
413cACSR                   EXSR ZM1320
413cAC*
413cAC*    Ok to abort transaction.
413cAC*
413cACSR                   OTHER
413cAC*
413cACSR                   UPDATSLREC
413cAC*
     CSR         ITCUBE    MULT W1QTY     @PCUBE
     CSR         ITSWGT    MULT W1QTY     @PSWGT
     CSR                   CALL @ADJTR
     CSR                   PARM '*ABORT  '@PCMD   8
     CSR                   PARM           #JOB
     CSR                   PARM $PTRN#    @PTRN#  70
     CSR                   PARM           @PTASK  6
     CSR                   PARM W1WHSE    @PWHSE  30
     CSR                   PARM W1WHDP    @PWHDP  5
     CSR                   PARM ITSTYP    @PSTYP  1
     CSR                   PARM           @PCUBE  93
     CSR                   PARM           @PSWGT  92
     CSR                   PARM W1QTY     @PPCS   50
     CSR                   PARM 0         @PAISL  50
     CSR                   PARM 0         @PQTY1  50
     CSR                   PARM 0         @PQTY2  50
     CSR                   PARM 0         @PQTY3  50
     CSR                   PARM '0'       @PRTE   5
     CSR                   PARM ' '       @PPO    9
     CSR                   PARM 'L'       @PGRP1  1
     CSR                   PARM ' '       @PGRP2  1
     CSR                   PARM ' '       @PRTN   8
     CSR                   PARM ' '       @PMSG   4
     C*
     C*  Update slot qty (Decrease TFR qty)
     CSR         SLFKEY    CHAINSLOT2                79
     CSR                   SUB  W1QTY     SLTFR1
     CSR                   UPDATSLREC
     C*  Update slot qty (Decrease RCV qty)
413cDC*R         SLTKEY    CHAINSLOT2                79
     C**         RLTYPE    IFEQ 'B'
     C**                   SUB  RPLQTY    SLRCV1
     C**                   ELSE
413cDC*R                   SUB  W1QTY     SLRCV1
     C**                   ENDIF
413cDC*R                   UPDATSLREC
     C*  Delete label record.
     CSR         LBKEY     CHAINLABEL                79
     CSR         *IN79     IFEQ *OFF
     CSR                   DELETLBREC
     CSR                   ENDIF
410 AC*    Start an 'IDLE' task.
410 ACSR                   EXSR ZZIDLE
413cACSR                   ENDSL
     CSR         ENDABR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update for screen 1.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR ZZCLSE
413bAC*
413bACSR                   SELEC
413bACSR         ERROR     WHEQ *OFF
413bAC*
409 ACSR         $ZERO     IFEQ 'Y'
409 ACSR                   EXSR ZZZERO
409 ACSR                   ENDIF
     C**                   EXSR SCR02I
413bAC*
413bAC*    Errors occured during close - re-display screen with error.
413bAC*
413bACSR         ERROR     WHEQ *ON
413bACSR                   EXSR SCR01I
413bACSR                   ENDSL
     CSR         ENDUP1    ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update for screen 2.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     C*
     C**                   EXSR SCR01I
     C*
     CSR         ENDUP2    ENDSR
     C*
640aAC*----------------------------------------------------------------*********
640aAC*
640aAC*  ZZWRTT     Execute new WRTTRAN1 program to add/update PIRTRANDn
640aAC*
640aAC           ZZWRTT    BEGSR
640aAC                     MOVEL'*ONETRAN'WPCMD  10
640aAC                     Z-ADD0         WPWAIT  20
640aAC                     MOVELPTWHSE    WPWHSE  30
640aAC                     MOVELPTTRN#    WPTRN#  70
640aAC                     Z-ADD0         WPFRDT  80
640aAC                     Z-ADD0         WPTODT  80
640aAC                     Z-ADD0         WPEMP#  50
640aAC                     CALL 'WRTTRAN1'
640aAC                     PARM           WPCMD
640aAC                     PARM           WPWAIT
640aAC                     PARM           WPWHSE
640aAC                     PARM           WPTRN#
640aAC                     PARM           WPFRDT
640aAC                     PARM           WPTODT
640aAC                     PARM           WPEMP#
640aAC                     ENDSR
409 AC*----------------------------------------------------------------
409 AC*
409 AC*  ZZZERO   Verify zero slots.
409 AC*
409 ACSR         ZZZERO    BEGSR
409 AC*
409 ACSR         SLFKEY    CHAINSLOT2                79
409 AC*
413aDC*          *IN79     CABEQ*ON       ENDZRO
413aACSR                   SELEC
413aACSR         *IN79     WHEQ *ON
413aAC*
413aDC*R         SLSTAT    IFEQ 'Z'
413aAC*
413aAC*    Slot at 'Z'ero status - verify slot.
413aAC*
413aMCSR         SLSTAT    WHEQ 'Z'
414 ACSR                   SELEC
414 ACSR         SLSTYP    WHEQ 'X'
414 ACSR                   DELETSLREC
414 ACSR         SLFKEY    SETLLCROSSDK
414 ACSR         FOREVR    DOUNEFOREVR
414 ACSR         SLFKEY    READECDREC                  7879
414 ACSR         *IN79     IFEQ *ON
414 ACSR                   LEAVE
414 ACSR                   ENDIF
414 ACSR                   DELETCDREC
414 ACSR                   ENDDO
414 DC**         SLRSRV    IFEQ 'V'
414 MCSR         SLRSRV    WHEQ 'V'
409 AC                     DELETSLREC
409 ACSR         SLFKEY    CHAINVSLOT1               78
409 AC                     DELETVSREC
414 DC**                   ELSE
414 MCSR                   OTHER
409 ACSR                   MOVE 'V '      SLSTAT
409 ACSR                   MOVE *BLANKS   SLITEM
409 ACSR                   Z-ADDTODAY     SLSDTE
409 ACSR                   TIME           SLSTIM
409 AC*
409 AC*   Initialize dates, picking priority and quantities.
409 AC*
409 ACSR                   Z-ADD0         SLENTD
409 ACSR                   Z-ADD0         SLEXPD
409 ACSR                   Z-ADD0         SLPRTY
409 ACSR                   Z-ADD0         SLSTK1
409 ACSR                   Z-ADD0         SLSTK2
409 ACSR                   Z-ADD0         SLSTK3
409 ACSR                   Z-ADD0         SLRCV1
409 ACSR                   Z-ADD0         SLRCV2
409 ACSR                   Z-ADD0         SLRCV3
409 ACSR                   Z-ADD0         SLALC1
409 ACSR                   Z-ADD0         SLALC2
409 ACSR                   Z-ADD0         SLALC3
409 ACSR                   Z-ADD0         SLTFR1
409 ACSR                   Z-ADD0         SLTFR2
409 ACSR                   Z-ADD0         SLTFR3
409 ACSR                   Z-ADD0         SLPCK1
409 ACSR                   Z-ADD0         SLPCK2
409 ACSR                   Z-ADD0         SLPCK3
409 ACSR                   UPDATSLREC
414 DC**                   ENDIF
414 MCSR                   ENDSL
413aAC*
413aAC*    Release record lock if slot status is not 'Z'ero.
413aAC*
413aACSR                   OTHER
413aACSR                   UNLCKSLOT2
413aDC*R                   ENDIF
413aACSR                   ENDSL
409 ACSR         ENDZRO    ENDSR
409 AC*
     O*----------------------------------------------------------------     ****
     O*
     O*  COMPILE TIME TABLES
**
Dept
Slot
Quantity
