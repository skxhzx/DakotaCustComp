500AAF*----------------------------------------------------------------
500aAF*  Multilingual Verision
500aAF*  Every screen and message has a corresponding Spanish version.
500aAF*  Any changes must be made to both languages.
500aAF*  If necessary, contact appropriate person to do translation.
     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  IT231     RF Item Lookup - Display
     F*  21 April, 1997
     F*  Roxanne Harrison
     F*
     F*  Notes
     F*       Created using IT130
     F*       8 X 20 Screens for hand held scanners
     F*       Screen uses only Optrec & Sfl, no room for other records.
     F*
     F*  Revisions
     F*
402 AF*    07/23/97  HNK  4.02
     F*      - Changed to call SL730 instead of SL630 to avoid
     F*        recursive call problem.
     F*
413 AF*    11/26/99  DAS  4.13
     F*      - Revised to display slots for base item for item
     F*        types 'A', 'C', and 'S'.
     F*      - Added display field to screen to identify that the
     F*        slots are for the base item.
     F*      - Added table BMSG.
     F*
415 AF*    05/20/01  DAS  4.15
     F*      - Created second set of screens for 16-Line displays.
     F*      - Didn't create extra message record because it was
     F*        originally set up to display on line 24.
     F*      - Added call to program to get screen size being used.
     F*      - Revised to handle recursive call. (see note below)
     F*      - Added $WHDP and $DISP to parameter list.
     F*      - Remove WOBASE from screen in order to make room for
     F*        an extra slot display line.
     F*      - Change screen to use 1-char option field. Added DS
     F*        to map 1-char option to standard 2-char option field.
     F*      - Added quantity to list display.
     F*
416aAF*    05/15/02  MLB  4.16a
     F*      - Revised program to pass flag to SL730 to not allow
     F*        transfers/adjustments to be active when called from
     F*        IT262 - Will Call transfers.
416bAF*    10/02/02  MLB  4.16b
     F*      - Fix: Moved write to DSPSFL,DSPS16 from *INZSR to
     F*        ZZINZ2.
416cAF*    10/07/02  RH   4.16c
     F*      - Fix: Increase W1QTY from 4 to 5 characters.
417aAF*    08/11/04  RH   4.17a
     F*      - Fix: Revised to call GETSLOTITM, if the item was an
     F*        alias item for a SSB item, GETBASE would return the SSB
     F*        item which is not a slot item.
     F*
500 AF*    01/21/05  MLB  5.00
     F*      - Enh: Revised program to complete support for 16 line
     F*        subfile. Revised program to be called from LT105.
     F*        When called from LT105, F10=Specific will active. If
     F*        F10 is pressed, *SSR will be returned.
     F*      - Added new fields to subfile: Pick, exp date, ent date
     F*        and pick priority.
     F*
500aAF*    05/25/06  DAS  5.00a
     F*      - Added Multilingual logic.
530aAF*    07/15/10  RH   5.30a
     F*      - FIX: 16 line was not updating
740AAF*    06/08/20  DAS  7.40a
     F*      - Enh: Removed 1 display line from 16-line screens and
     F*        added MORREC16 line.
     F*      - Changed DDS to IT23101.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        Position cursor
     F*  21 - 29   Field input error (Reverse display)
500 AF*  60        F10=Specific active. Called from LT105.
     F*  79        Chain indicator
     F*  90        Protect input fields for delete display
     F*  97        Always ON (Used for SFLEND keyword)
     F*  98        Error on screen (Sound buzzer)
     F*  99        Universal record indicator (Very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
740ADF*T231FM CF  E                    WORKSTN
740AMFIT23101 CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
500aAF                                        RECNO KSFILE DSPSFLSP
415 AF                                        RECNO KSFILE D16SFL
500aAF                                        RECNO KSFILE D16SFLSP
     F                                        MSGK  KSFILE MSGREC
500 AF                                        MSGK  KSFILE M16REC
     FWORKOPT UF  E           K        DISK                      A
     FSLOT3   IF  E           K        DISK
     F            SLREC                             KRENAMERECORD
     FPIRITEM IF  E           K        DISK
     FWAREHS  IF  E           K        DISK
     FWHDEPT  IF  E           K        DISK
     FDESIG   IF  E           K        DISK
     F*
     FSLOT2   IF  E           K        DISK
     F            SLREC                             KRENAMERECORDU
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
415 DE**                  FKEY       10 50
415 DE**                  UKEY       10 50
415 ME                    FKEY       14 50
415 ME                    UKEY       14 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    ZOPT   20  20  2
     E                    OPTLN   1   1 75
500 DE*                   CMDLN   1   1 79
500 ME                    CMDLN   1   2 79
     E                    BMSG    1   1 20
500aAE                    BMSGSP  1   1 20
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$WHSE
     I                                        4  18 $ITEM
416aAI                                       47  47 $LALWC
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I I            0                         1   30SLWHSE
     I                                        4  18 SLITEM
     I                                       19  20 SLSTAT
     I                                       21  21 SLPICK
     I I            0                        22  220SLPRTY
     I I            0                        23  300SLEXPD
     I I            0                        31  380SLENTD
     I                                       39  43 SLWHDP
     I                                       44  44 SLSTYP
     I                                       45  47 SLAISL
     I I            0                        48  520SLPSEQ
     I I            0                        53  540SLRLVL
     I                                       55  56 SLHAND
     I*
     I            DS
     I                                        1  50 DSUKEY
     I I            0                         1   30UKWHSE
     I                                        4   8 UKWHDP
     I                                        9  20 UKDISP
     I                                       21  35 UKITEM
415 AI*----------------------------------------------------------------
415 AI*  Redefinition data structure
415 AI*
415 AI            DS
415 AI                                        1   2 OPTION
415 AI                                        2   2 OPT1
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
417aAI              'GETSLOTITM'          C         @GETSI
     I              '*NONE'               C         @CHGPG
402 AI              'SL730'               C         @VEWPG
402 DI*             'SL630'               C         @VEWPG
     I              '*NONE'               C         @DELPG
     I              '*NONE'               C         @PRTPG
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  26 $PWHDP
     I                                       27  38 $PDISP
     I                                       39  53 $PITEM
416aAI                                       54  54 $PALWC
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I I            0                        33  380$CVD6O
     I I            0                        39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
500aAI              'PIRMSGFSP '          C         #MSGSP
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY 50
     C                     PARM           $RTNCD  8
     C*
     C*  Define keys
     C*
     C*     WORKOPT  (Unique key)
     C*
     C           WKOUNQ    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           WKOKYF
     C                     KFLD           WKOKYU
     C*
     C*     WORKOPT  (Partial key)
     C*
     C           WKOPRT    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     C           *LIKE     DEFN WKOKYF    $WKOF
     C           *LIKE     DEFN WKOKYU    $WKOU
     C           DELTOP    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           $WKOF
     C                     KFLD           $WKOU
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
500 DC*                    MOVE *BLANKS   $RTNCD
     C                     EXSR ZZINZ2
500 AC                     MOVE *BLANKS   $RTNCD
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
213 DC*                    SETON                     LR
213 AC                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with title
     C*
500aACSR                   SELEC
500aACSR         E$LNG     WHEQ 'SP'
500aACSR                   WRITETITLESP
500aACSR                   OTHER
     CSR                   WRITETITLE
500aACSR                   ENDSL
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXSR SFLDSP
220  C*R                   READ POSTNREC                 50
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXSR DELDSP
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
415 ACSR                   READ D16SFCSP                 50
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
500aACSR                   READ D16SFC                   50
500aDC*                    OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   READ DSPSFCSP                 50
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   READ DSPSFC                   50
415 ACSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR
     CSR                   MOVE '1'       *IN90
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   WRITECLR0306
     CSR                   WRITEDELREC
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   WRITECMDDEL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 wrap-up
     C*
     CSR         SCR02E    BEGSR
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE '0'       *IN90
     CSR                   WRITECLR0306
     CSR         CANCEL    IFEQ *OFF
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   EXSR OPTNS
     CSR                   ELSE
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE FRSTKY    $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
416bDC*                    Z-ADD1         RECNO
416bDC*R                   SELEC
416bDC*R         #LLINE    WHEQ '16'
416bDC*                    WRITED16SFL                 79
416bDC*R                   OTHER
416bDC*                    WRITEDSPSFL                 79
416bDC*R                   ENDSL
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ'0'
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR F3 - EXIT
     C*
     CSR         *INKC     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR F12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR F5 - REFRESH
     C*
     CSR         *INKE     IFEQ '1'
     CSR                   EXSR CLRSCH
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500 DC*                    Z-ADD14        MAXVAL  30
740ADC*                    Z-ADD12        MAXVAL  30
740AMC                     Z-ADD11        MAXVAL  30
415 ACSR                   OTHER
500 DC*                    Z-ADD6         MAXVAL  30
500 MC                     Z-ADD4         MAXVAL  30
415 ACSR                   ENDSL
220  C*R         1         DO   10        X
415 DC**         1         DO   5         X
415 MCSR         1         DO   MAXVAL    X       30
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         X         CHAIND16SFLSP             79
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR         X         CHAIND16SFL               79
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         X         CHAINDSPSFLSP             79
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR         X         CHAINDSPSFL               79
415 ACSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '  '      OPTION
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATD16SFLSP
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   UPDATD16SFL
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATDSPSFLSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   UPDATDSPSFL
415 ACSR                   ENDSL
     CSR                   END
     CSR                   END
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       CMD01E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR F6 - ADD RECORD
     C*
     CSR         *INKF     IFEQ '1'
     CSR                   MOVE #PROG     $PPRG
     CSR                   Z-ADDITWHSE    UKWHSE
     CSR                   MOVE ITWHDP    UKWHDP
     CSR                   MOVE *BLANKS   UKDISP
     CSR                   MOVE ITITEM    UKITEM
     CSR                   MOVE DSUKEY    $PUKY
     CSR                   MOVE '*ADD    '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR         $PRTN     IFNE '*EXIT   '
     CSR         $PRTN     ANDNE'*CANCEL '
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   GOTO CMD01E
     CSR                   END
     C*
500 MC*  TEST FOR F10 - User chose to continue to Specific slot replen.
     C*
     CSR         *INKJ     IFEQ '1'
500 AC*
500 AC                     MOVE '*SSR    '$RTNCD
500 AC                     MOVE 'EOJ'     NXTSCR
500 AC*
500 DC*R                   Z-ADD0         ROW#
500 DC*R                   MOVE ROWIN     ROW
500 DC*R                   Z-ADD0         COL#
500 DC*R                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
     C**                   SUB  10        ROW#
500 DC*R                   SUB  5         ROW#
500 DC*R         ROW#      IFLT 1
500 DC*R         ROW#      ORGT DSPLYD
500 DC*R                   MOVE '1'       ERROR
500 DC*R                   MOVE *BLANKS   ERRMSG
500 DC*R                   EXSR ZM0106
500 DC*R                   GOTO CMD01E
500 DC*R                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
500 DC*R                   MOVE '*POSTN2U'$POCMD
500 DC*R                   MOVE UKEY,ROW# $POUKY
500 DC*R                   EXSR FGTWAY
500 DC*R         CLERR     CABEQ'1'       CMD01E
500 DC*R                   MOVE '*REPOS  'PAGCMD
500 DC*R                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR F17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ '1'
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR F18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ '1'
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   MOVE '1'       CANCEL
     CSR                   EXSR SCR02E
     CSR                   GOTO CMD02E
     CSR                   END
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELADD   Add record to subfile for delete display
     C*
     CSR         DELADD    BEGSR
     CSR         RECNO     IFLT 11
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  GET RECORD INFO
     C*
     CSR                   MOVE '*GET    '$POCMD
     CSR                   MOVE WKOKYU    $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       DELADE
     C*
     C*  SAVE KEY TO RECORD OF FIRST SCREEN LINE
     C*
     CSR         RECNO     IFEQ 1
     CSR                   MOVE WKOKYF    $WKOF
     CSR                   MOVE WKOKYU    $WKOU
     CSR                   END
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   MOVE WKOOPT    OPTION
500aACSR                   SELEC
500aACSR         E$LNG     WHEQ 'SP'
500aACSR                   WRITEDSPSFLSP
500aACSR                   OTHER
     CSR                   WRITEDSPSFL
500aACSR                   ENDSL
     CSR                   END
     CSR         DELADE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELDSP   Display subfile of records marked for deletion
     C*
     CSR         DELDSP    BEGSR
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
500aACSR                   SELEC
500aACSR         E$LNG     WHEQ 'SP'
500aACSR                   WRITEDSPSFCSP
500aACSR                   OTHER
     CSR                   WRITEDSPSFC
500aACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ENT01E
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R         OTAKEN    IFEQ '0'
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   GOTO ENT01E
     C*R                   END
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  Save first delete key.
     C*
     CSR         *LIKE     DEFN $PUKY     FRSTKY
     CSR                   MOVE $PUKY     FRSTKY
     C*
     C*  Delete the records that have been selected
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       STOP
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     C*
     CSR         WKOOPT    IFEQ ' 4'
     C*
     C*  Call delete program
     C*
     CSR                   EXSR INZPAR
     CSR                   MOVE '*DELETE '$PCMD
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   CALL @DELPG
     CSR                   PARM           $PARMS
     C*
     C*     Error occured - Error message sent back
     C*
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     C*
     C*     Error occured - Error message sent to program msgq
     C*
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     C*
     C*     Delete canceled
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         CANCEL    IFEQ '0'
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE '1'       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   END
     C*
     CSR                   END
     CSR                   END
     CSR                   EXSR SCR02E
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are DIFFERENT.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE '0'       OTAKEN  1
     C*
     C*     DO ALL DELETES FIRST (OPTION 4)
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       STOP
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     DOWEQ'0'
     CSR         WKOOPT    ANDNE' 4'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR                   END
     CSR         *IN79     IFEQ '0'
     CSR         WKOOPT    ANDEQ' 4'
     CSR                   MOVE '1'       OTAKEN
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   EXSR SCR02I
     CSR                   GOTO OPTNSE
     CSR                   END
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       CANCEL  1
     CSR                   MOVE '0'       STOP    1
     CSR         STOP      DOUEQ'1'
     CSR         CANCEL    OREQ '1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE '1'       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE '1'       REFRSH
     CSR         ERROR     IFEQ '0'
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE '0'       REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ '1'
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE '0'       REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS2   Execute individual options
     C*
     CSR         OPTNS2    BEGSR
     CSR                   EXSR INZPAR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     CSR                   SELEC
     C*
     C*   Change
     C*
     CSR         WKOOPT    WHEQ ' 2'
     CSR                   MOVE '*CHANGE '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     C*
     C*   View
     C*
     CSR         WKOOPT    WHEQ ' 5'
     CSR                   MOVE '*VIEW   '$PCMD
416aACSR                   MOVE $LALWC    $PALWC
     CSR                   CALL @VEWPG
     CSR                   PARM           $PARMS
     C*
     C*   Print
     C*
     CSR         WKOOPT    WHEQ ' 6'
     CSR                   MOVE '*PRINT  '$PCMD
     CSR                   CALL @PRTPG
     CSR                   PARM           $PARMS
     C*
     C*   View slot quantities.
     C*
     CSR         WKOOPT    WHEQ ' 9'
     CSR                   CALL 'SL810'
     CSR                   PARM           ITWHSE
     CSR                   PARM           ITWHDP
     CSR                   PARM           $PDISP
     C*
     CSR                   OTHER
     CSR                   EXSR ZZOPT
     CSR                   ENDSL
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE '1'       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE '1'       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         DELTOP    SETLLWORKOPT
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 8 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN  7
     CSR                   GOTO ENDFWD
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 8 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
     C**         P         IFGE 10
     C**         P         IFGE 8
415 DC**         P         IFGE 5
500 DC*          P         IFGE 6
500 MC           P         IFGE 4
415 ACSR         #LLINE    ANDNE'16'
500 DC*          P         ORGE 14
740ADC*          P         ORGE 12
740AMC           P         ORGE 11
415 ACSR         #LLINE    ANDEQ'16'
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFWD    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     C**         DSPLYD    ADD  10        GOBACK  20
     C**         DSPLYD    ADD  8         GOBACK  20
415 ACSR                   SELEC
415 ACSR         #LLINE    WHNE '16'
415 DC**         DSPLYD    ADD  5         GOBACK  20
500 DC*          DSPLYD    ADD  6         GOBACK  20
500 MC           DSPLYD    ADD  4         GOBACK  20
415 ACSR                   OTHER
500 DC*          DSPLYD    ADD  14        GOBACK  20
740ADC*          DSPLYD    ADD  12        GOBACK  20
740AMC           DSPLYD    ADD  11        GOBACK  20
415 ACSR                   ENDSL
     CSR         BOT       IFEQ '1'
     C**         GOBACK    IFEQ 10
     C**         GOBACK    IFEQ 8
415 DC**         GOBACK    IFEQ 5
500 DC*          GOBACK    IFEQ 6
500 MC           GOBACK    IFEQ 4
415 ACSR         #LLINE    ANDNE'16'
500 DC*          GOBACK    OREQ 14
740ADC*          GOBACK    OREQ 12
740AMC           GOBACK    OREQ 11
415 ACSR         #LLINE    ANDEQ'16'
     CSR                   MOVE '1'       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of delete records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF2
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    READEWORKOPT                  79
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFW2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR                   EXSR DELADD
     C**         P         IFGE 10
     CSR         P         IFGE 5
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         ENDFW2    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page of delete records
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB2
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     C*R         DSPLYD    ADD  10        GOBACK  20
     CSR         DSPLYD    ADD  5         GOBACK  20
     CSR         BOT       IFEQ '1'
     CSR         WKOPRT    SETGTWORKOPT
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR         WKOPRT    REDPEWORKOPT                  79
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR                   END
     CSR         ENDBK2    TAG
     CSR                   END
     C*
     C* IF WE HIT THE TOP REPOSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE '0'       NOMORE  1
     CSR         NOMORE    DOUEQ'1'
     CSR                   MOVE '0'       *IN21
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   READCD16SFLSP                 79
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   READCD16SFL                   79
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   READCDSPSFLSP                 79
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   READCDSPSFL                   79
415 ACSR                   ENDSL
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    LOKUPZOPT                     50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
     CSR                   Z-ADDRECNO     Y       30
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ '0'
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
415 DC**         RECNO     IFLT 11
415 MCSR         RECNO     IFLT 7
415 ACSR         #LLINE    ANDNE'16'
740ADC**         RECNO     ORLT 15
740AMCSR         RECNO     ORLT 14
415 ACSR         #LLINE    ANDEQ'16'
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITED16SFLSP
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   WRITED16SFL
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITEDSPSFLSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   WRITEDSPSFL
415 ACSR                   ENDSL
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE '0'       *IN01
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITED16SFCSP
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   WRITED16SFC
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITEDSPSFCSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   WRITEDSPSFC
415 ACSR                   ENDSL
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEC16REC
500 AC                     OTHER
500 MC                     WRITECMDREC
500 AC                     ENDSL
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
220  C*R                   WRITEMORREC
740AACSR         #LLINE    IFEQ '16'
740AACSR                   WRITEMORREC16
740AACSR                   ENDIF
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
220  C*R                   WRITEPOSTNREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE '1'
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         1         CHAIND16SFLSP             79
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR         1         CHAIND16SFL               79
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         1         CHAINDSPSFLSP             79
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR         1         CHAINDSPSFL               79
415 ACSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '1'       *IN20
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATD16SFLSP
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   UPDATD16SFL
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATDSPSFLSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   UPDATDSPSFL
415 ACSR                   ENDSL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITED16SFCSP
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR                   WRITED16SFC
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITEDSPSFCSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   WRITEDSPSFC
415 ACSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
415 ACSR         #LLINE    IFEQ '16'
500 DC*                    Z-ADD14        MAXVAL  30
740ADC*                    Z-ADD12        MAXVAL  30
740AMC                     Z-ADD11        MAXVAL  30
415 ACSR                   ELSE
500 DC*                    Z-ADD6         MAXVAL  30
500 MC                     Z-ADD4         MAXVAL  30
415 ACSR                   ENDIF
     C**         1         DO   10        X       30
415 DC**         1         DO   5         X       30
415 MCSR         1         DO   MAXVAL    X       30
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         X         CHAIND16SFLSP             79
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
415 ACSR         X         CHAIND16SFL               79
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR         X         CHAINDSPSFLSP             79
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR         X         CHAINDSPSFL               79
415 ACSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ '0'
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE '0'       *IN21
     CSR                   MOVE '0'       *IN20
     CSR                   END
415 ACSR                   SELEC
415 ACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATD16SFLSP
500aACSR         #LLINE    WHEQ '16'
530aMCSR         E$LNG     ANDEQ'EN'
530aDC***        E$LNG     ANDEQ'SP'
415 ACSR                   UPDATD16SFL
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   UPDATDSPSFLSP
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
     CSR                   UPDATDSPSFL
415 ACSR                   ENDSL
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEM16CTL
500 AC                     OTHER
     CSR                   WRITEMSGCTL
500 AC                     ENDSL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEM16CLR
500 AC                     OTHER
     CSR                   WRITEMSGCLR
500 AC                     ENDSL
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEM16CTL
500 AC                     OTHER
     CSR                   WRITEMSGCTL
500 AC                     ENDSL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
500aACSR                   SELEC
500aACSR         E$LNG     WHEQ 'SP'
500aACSR                   MOVE #MSGSP    $MSGF
500aACSR                   OTHER
     CSR                   MOVE #MSGF     $MSGF  10
500aACSR                   ENDSL
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEM16REC
500 AC                     OTHER
     CSR                   WRITEMSGREC
500 AC                     ENDSL
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC                     WRITEM16REC
500 AC                     OTHER
     CSR                   WRITEMSGREC
500 AC                     ENDSL
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
500 AC                     SELEC
500 AC           #LLINE    WHEQ '16'
500 AC*                    WRITECLRSCR
500 AC                     OTHER
     C*R                   WRITECLRSCR
500 AC                     ENDSL
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
500 ACSR                   SELEC
500 ACSR         E$LNG     WHEQ 'SP'
500 ACSR                   MOVE #MSGSP    $MSGF
500 ACSR                   OTHER
     CSR                   MOVE #MSGF     $MSGF  10
500 ACSR                   ENDSL
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     C*R         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     CSR         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
413 ACSR         #OTYPE    IFEQ ' '
413 ACSR         #OTYPE    OREQ 'B'
     CSR         PARTKY    READERECORD                   79
413 ACSR                   ELSE
413 ACSR         PARTKB    READERECORD                   79
413 ACSR                   ENDIF
     CSR         *IN79     CABEQ*ON       ENDGTN
     CSR         SLSTAT    IFEQ 'Z '
     CSR         SLRSRV    ANDEQ'N'
     CSR                   GOTO TRY1
     CSR                   ENDIF
     C*
     CSR         ENDGTN    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
413 ACSR         #OTYPE    IFEQ ' '
413 ACSR         #OTYPE    OREQ 'B'
     CSR         PARTKY    REDPERECORD                   79
413 ACSR                   ELSE
413 ACSR         PARTKB    REDPERECORD                   79
413 ACSR                   ENDIF
     CSR         *IN79     CABEQ*ON       ENDGTP
     CSR         SLSTAT    IFEQ 'Z '
     CSR         SLRSRV    ANDEQ'N'
     CSR                   GOTO TRY2
     CSR                   ENDIF
     C*
     CSR         ENDGTP    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
415 AC*
415 AC*    Create a quantity string to print.
415 AC*
     CSR                   CALL 'SLOTQTY'
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     C*
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     C*
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     C*
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     C*
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     C*
     CSR                   PARM           STOCK1  50
     CSR                   PARM           STOCK2  30
     CSR                   PARM           STOCK3  30
     C*
     CSR                   PARM           AVAIL1  50
     CSR                   PARM           AVAIL2  30
     CSR                   PARM           AVAIL3  30
     C*
     CSR                   MOVE '*QTY2STR'$PCMD
     CSR                   Z-ADDAVAIL1    $PQTY1
     CSR                   Z-ADDAVAIL2    $PQTY2
     CSR                   Z-ADDAVAIL3    $PQTY3
     CSR                   MOVE *BLANKS   $PQSTR
     C*
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $PCMD   8
     CSR                   PARM           $PPRG  10
     CSR                   PARM           $PQTY1  70
     CSR                   PARM           $PQTY2  70
     CSR                   PARM           $PQTY3  70
     CSR                   PARM           $PUM1   2
     CSR                   PARM           $PUM2   2
     CSR                   PARM           $PUM3   2
     CSR                   PARM           $PQSTR 10
     CSR                   PARM           $PUSTR 17
     CSR                   PARM           $PRTN   8
     CSR                   PARM           $PERM
     C*
     CSR                   MOVEL$PQSTR    W1QTY
500 AC*
500 AC*   Expiration date
500 AC*
500 AC           SLEXPD    IFEQ 0
500 AC                     Z-ADD0         W1EXPD
500 AC                     ELSE
500 AC                     MOVE '*CMDMDY '$CVCMD
500 AC                     MOVE SLEXPD    $CVD8I
500 AC                     CALL @CVTDT
500 AC                     PARM           $CVTDT
500 AC                     Z-ADD$CVD6O    W1EXPD
500 AC                     ENDIF
500 AC*
500 AC*   Entered date
500 AC*
500 AC           SLENTD    IFEQ 0
500 AC                     Z-ADD0         W1ENTD
500 AC                     ELSE
500 AC                     MOVE '*CMDMDY '$CVCMD
500 AC                     MOVE SLENTD    $CVD8I
500 AC                     CALL @CVTDT
500 AC                     PARM           $CVTDT
500 AC                     Z-ADD$CVD6O    W1ENTD
500 AC                     ENDIF
500 AC*
500 AC*   Change priority from negative to positive.
500 AC*
500 AC                     Z-SUBSLPRTY    W1PRTY
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           UKWHSE
     CSR                   KFLD           UKWHDP
     CSR                   KFLD           UKDISP
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLITEM
     CSR                   KFLD           SLSTAT
     CSR                   KFLD           SLPICK
     CSR                   KFLD           SLPRTY
     CSR                   KFLD           SLEXPD
     CSR                   KFLD           SLENTD
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLSTYP
     CSR                   KFLD           SLAISL
     CSR                   KFLD           SLPSEQ
     CSR                   KFLD           SLRLVL
     CSR                   KFLD           SLHAND
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           $WHSE
     CSR                   KFLD           $ITEM
     C*
413 AC*  Define partial key for main file (if needed) using Base item.
     C*
     CSR         PARTKB    KLIST
     CSR                   KFLD           $WHSE
417aMCSR                   KFLD           #SITEM
417aDC**                   KFLD           #BITEM
     C*
     C*  Define key for item file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           $WHSE
     CSR                   KFLD           $ITEM
     C*
     C*  Define key for warehouse department.
     C*
     CSR         WDKEY     KLIST
     CSR                   KFLD           $WHSE
     CSR                   KFLD           ITWHDP
     C*
     C*  Setup option and command display lines.
     C*
     CSR                   MOVE OPTLN,1   OPTLN1
     CSR                   MOVE CMDLN,1   CMDLN1 79
     C*
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Initailization for each time program is called.
     C*
     CSR         ZZINZ2    BEGSR
500aAC*
500aAC*   Get employee options.
500aAC*
500aACSR                   CALL 'GETUSER'
500aACSR                   PARM #USER     E$CODE 10
500aACSR                   PARM           E$WHSE  30
500aACSR                   PARM           E$EMP#  50
500aACSR                   PARM           E$FNAM 15
500aACSR                   PARM           E$INIT  1
500aACSR                   PARM           E$LNAM 20
500aACSR                   PARM           E$WHDP  5
500aACSR                   PARM           E$STYP  1
500aACSR                   PARM           E$SHFT  6
500aACSR                   PARM           E$CREW  6
500aACSR                   PARM           E$NHRS  31
500aACSR                   PARM           E$RTN   8
500aACSR                   PARM           E$BPU   1
500aACSR                   PARM           E$LNG   2
500aACSR         E$RTN     IFNE '*OK'
500aACSR                   MOVE 'EN'      E$LNG
500aACSR                   ENDIF
415 AC*
415 AC*   Get screen size being used.
415 AC*
415 ACSR                   CALL 'PIRRFSCR'
415 ACSR                   PARM '*GET'    #LCMD   8
415 ACSR                   PARM           #LLINE  2
415 ACSR                   PARM           #LCOL   3
416bAC*
416bAC*  Initialize subfile (DSPSFL) record
416bAC*
416bACSR                   Z-ADD1         RECNO
416bACSR                   SELEC
416bACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITED16SFLSP               79
500aACSR         #LLINE    WHEQ '16'
500aACSR         E$LNG     ANDEQ'EN'
416bACSR                   WRITED16SFL                 79
500aDC**                   OTHER
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'SP'
500aACSR                   WRITEDSPSFLSP               79
500aACSR         #LLINE    WHNE '16'
500aACSR         E$LNG     ANDEQ'EN'
416bACSR                   WRITEDSPSFL                 79
416bACSR                   ENDSL
500 AC*
500 AC*  Initialize subfile (DSPSFL) record
500 AC*
500 AC           $RTNCD    IFEQ 'LT105   '
500 AC                     MOVE *ON       *IN60
500 AC                     MOVE *BLANKS   $RTNCD
500 AC                     MOVE CMDLN,2   CMDLN1
500 AC                     ELSE
500 AC                     MOVE *OFF      *IN60
500 AC                     ENDIF
     C*
415 DC**                   MOVE *BLANKS   WOBASE
415 ACSR                   MOVE *BLANKS   WOBASE 20
     C*
     C*   Get item description.
     C*
     CSR                   MOVE *BLANKS   W1ITEM 15
     CSR         $ITEM     CAT  '-':1     W1ITEM
     CSR         ITKEY     CHAINPIRITEM              79
     CSR                   SELEC
     CSR         *IN79     WHEQ '0'
     CSR         W1ITEM    CAT  ITDESC:1  W1ITEM
     C*
     CSR                   MOVE *BLANKS   WOWHSE 35
     CSR         $WHSE     CHAINWAREHS               79
     CSR         *IN79     IFEQ *OFF
213 ACSR                   MOVE *BLANKS   $CSTR
     CSR                   MOVE WHCODE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*LEFT   '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVEL$CSTR     WOWHSE
     CSR         WOWHSE    CAT  '-':1     WOWHSE
     CSR         WOWHSE    CAT  WHDESC:1  WOWHSE
     CSR                   ENDIF
     C*
     CSR         WDKEY     CHAINWHDEPT               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WDCODE
     CSR                   MOVE *BLANKS   WDDESC
     CSR                   ENDIF
     C*
     CSR         ITDESG    CHAINDESIG                79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   DSCODE
     CSR                   MOVE *BLANKS   DSDESC
     CSR                   ENDIF
413 AC*
413 AC*     Save information about selected item (Item that was sent in)
413 AC*
413 ACSR                   MOVE ITTYPE    #OTYPE  1
413 ACSR                   MOVE ITITEM    #OITEM 15
413 ACSR                   MOVE ITDESC    #ODESC 30
413 ACSR                   MOVE ITPDSC    #OPDSC 15
413 AC*
413 AC*      Initialize base information.
413 AC*
413 ACSR                   MOVE ITITEM    #BITEM
417aACSR                   MOVE ITITEM    #SITEM
413 ACSR                   MOVE ITTYPE    #BITYP
413 ACSR                   MOVE ITDESC    #BDESC
413 ACSR                   MOVE ITPDSC    #BPDSC
413 AC*
413 AC*     If selected item is a Contract, Alias or SSB . . .
413 AC*       Then get corresponding Base item.
413 AC*
413 ACSR         ITTYPE    IFEQ 'C'
413 ACSR         ITTYPE    OREQ 'A'
413 ACSR         ITTYPE    OREQ 'S'
500aACSR                   SELEC
500aACSR         E$LNG     WHEQ 'SP'
500aACSR                   MOVELBMSGSP,1  WOBASE
500aACSR                   OTHER
413 ACSR                   MOVELBMSG,1    WOBASE
500aACSR                   ENDSL
413 ACSR                   CALL 'GETBASE'
413 ACSR                   PARM ITWHSE    $GWHSE  30
413 ACSR                   PARM ITITEM    $GITEM 15
413 ACSR                   PARM ' '       #BITEM 15
413 ACSR                   PARM           #BITYP  1
413 ACSR                   PARM           #BDESC 30
413 ACSR                   PARM           #BPDSC 15
413 ACSR                   PARM           #BWHDP  5
413 ACSR                   PARM           #BSTYP  1
413 ACSR                   PARM           #BUM1   2
413 ACSR                   PARM           #BUM2   2
413 ACSR                   PARM           #BUMQ2  30
413 ACSR                   PARM           #BUM3   2
413 ACSR                   PARM           #BUMQ3  30
413 ACSR                   PARM ' '       #BCITM 15
413 ACSR                   PARM           #BCTYP  1
413 ACSR                   PARM           #BCDSC 30
413 ACSR                   PARM           #BCPDS 15
413 ACSR                   PARM           #BCWDP  5
413 ACSR                   PARM           #BCSTP  1
413 ACSR                   PARM           #BCUM1  2
413 ACSR                   PARM           #BCUM2  2
413 ACSR                   PARM           #BCUQ2  30
413 ACSR                   PARM           #BCUM3  2
413 ACSR                   PARM           #BCUQ3  30
413 ACSR                   PARM           #BRTN   8
413 ACSR                   ENDIF
417aAC*   Get slot item.
417aACSR                   CALL @GETSI
417aACSR                   PARM ITWHSE    $GWHSE  30
417aACSR                   PARM ITITEM    $GITEM 15
417aACSR                   PARM ' '       #SITEM 15
417aACSR                   PARM           #SITYP  1
417aACSR                   PARM           #SDESC 30
417aACSR                   PARM           #SPDSC 15
417aACSR                   PARM           #SRTN  10
417aACSR                   PARM           #SMSG  60
     C*
     CSR                   ENDSL
     C*
     C**                   MOVE $PRTKY    DSKEY
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYI   Initialize keys for files being used.
     C*           Note: You must clear individual field when using
     C*                 partial keys or one of the fields is numeric.
     C*
     CSR         ZZKEYI    BEGSR
     C*
     C*   Initialize file key (DSFKEY)
     C*
     CSR                   CLEARSLWHSE
     CSR                   CLEARSLITEM
     CSR                   CLEARSLSTAT
     CSR                   CLEARSLPICK
     CSR                   CLEARSLPRTY
     CSR                   CLEARSLEXPD
     CSR                   CLEARSLENTD
     CSR                   CLEARSLWHDP
     CSR                   CLEARSLSTYP
     CSR                   CLEARSLAISL
     CSR                   CLEARSLPSEQ
     CSR                   CLEARSLRLVL
     CSR                   CLEARSLHAND
     C*
     C*   Initialize unique key (DSUKEY)
     C*
     CSR                   CLEARUKWHDP
     CSR                   CLEARUKDISP
     CSR                   CLEARUKITEM
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   Z-ADDSLWHSE    UKWHSE
     CSR                   MOVE SLWHDP    UKWHDP
     CSR                   MOVE SLDISP    UKDISP
     CSR                   MOVE SLITEM    UKITEM
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*  See if user is trying to position to a certain spot
     C*
     C*R         PTINP1    IFNE 0
     C*R                   Z-ADDPTINP1    ODDLIN
     C*R                   Z-ADD0         PTINP1
     C*R                   MOVE *ON       REPOS
     C*R                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
413 ACSR         #OTYPE    IFEQ ' '
413 ACSR         #OTYPE    OREQ 'B'
     CSR         PARTKY    SETLLRECORD
413 ACSR                   ELSE
413 ACSR         PARTKB    SETLLRECORD
413 ACSR                   ENDIF
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
413 ACSR         #OTYPE    IFEQ ' '
413 ACSR         #OTYPE    OREQ 'B'
     CSR         PARTKY    SETGTRECORD
413 ACSR                   ELSE
413 ACSR         PARTKB    SETGTRECORD
413 ACSR                   ENDIF
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
 5
**  OPTLN - Option display line
 5=View
**  CMDLN - Command display line
F3=Exit  F12=Cancel
F3=Exit F10=Specific F12=Cancel
**
* Base Item Slots *
** BMSGSP
* Slots de producto de base *
