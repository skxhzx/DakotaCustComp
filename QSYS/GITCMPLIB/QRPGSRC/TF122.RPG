     F*----------------------------------------------------------------
     F*   Copyright (C) 1993 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  TF122     Transfer order maint - Change
     F*  29 February, 1996
     F*  Hemant Kapadia
     F*
     F*  Revisions
     F*
     F*    03/27/96  HNK  2.12
     F*      - Error check added in ZZCHK1 subroutine.
     F*
     F*    03/03/97  RH   2.19
     F*      - Move #PROG to $LPRG to send error message from WH900.
     F*
520 AF*    01/26/09  CWM  5.20
     F*      - Enh: Added support for new extended stop number.
     F*        Retrieve stop # in subroutine ZZFGTS and pgm GETSTOP
     F*
650aAF*    06/17/13  RBD  6.50a
     F*      - Enh: Added parms to GETSTOP.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FTF122FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FTORDH1  UF  E           K        DISK                      A
     F            TOHREC                            KRENAMERECORD
     FWAREHS  IF  E           K        DISK
212 AFTORDD   IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1   7 20
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  280$PTNUM
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I*
     I                                       19  20 $LHRSN
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                    P   1   40ERTNUM
     I                                        5  24 ERDESC
212 AI*
212 AI                                    P   1   20ERWHSE
212 AI                                    P   3   60ERQORD
212 AI                                    P   7  100ERQAVL
212 AI                                       11  25 ERITEM
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new batch.
     C*              *EDIT    - Edit batch.
     C*              *DELETE  - Delete batch.
     C*              *PRINT   - Print batch edit listing.
     C*              *POST    - Post batch.
     C*              *RELEASE - Release order.
     C*              *AUTHORZ - Authorize order.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains key for everything by *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new batch number for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     MOVE '0'       *IN90
     C                     MOVE '0'       *IN91
     C                     MOVE '0'       ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ '1'
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
520 AC*
520 AC           W1HSTP    IFNE 0
520 AC                     EXSR ZZFGTS
520 AC                     ENDIF
520 AC*
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXFMTSCREEN2                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR         $PCMD     OREQ '*AUTHORZ'
     CSR                   MOVE '1'       *IN90
     CSR                   ENDIF
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
     CSR                   MOVE '1'       *IN91
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR                   END
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     CSR                   EXSR ZZGET2
     CSR                   EXSR ZZFIL2
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ '1'
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ '1'
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ '1'
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR         $PCMD     OREQ '*AUTHORZ'
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ'1'       ENDSC1
     CSR                   EXSR ZZUPD1
     CSR         ERROR     CABEQ'1'       ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ '1'
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ '1'
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR02I
     CSR                   END
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ '1'
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC2
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ'1'       ENDSC2
     CSR                   EXSR ZZUPD2
     CSR         ERROR     CABEQ'1'       ENDSC2
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
212 AC                     MOVE #PROG     $PPRG
212 AC                     MOVE #PROG     $PPRG1 10
219 AC                     MOVE #PROG     $LPRG
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   PIR0201  Code must be entered for create.
     C*
     CSR         ZM01      BEGSR
     CSR                   MOVE 'PIR0201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC,1    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0202  Code already exists.
     C*
     CSR         ZM02      BEGSR
     CSR                   MOVE 'PIR0202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC,1    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0203  Requested by cannot be blank
     C*
     CSR         ZM03      BEGSR
     CSR                   MOVE 'PIR0203' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC,2    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PIR1001  Invalid option entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     TF12201  Cannot change or release order.
     C*
     CSR         ZM2201    BEGSR
     CSR                   MOVE 'TF12201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     TF12202  Cannot change or release order.
     C*
     CSR         ZM2202    BEGSR
     CSR                   MOVE 'TF12202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
212 AC*----------------------------------------------------------------
212 AC*   TF12203
212 AC*
212 ACSR         ZM2203    BEGSR
212 ACSR                   MOVE 'TF12203' #MSGID
212 ACSR                   MOVE '*DIAG  ' #MSGTP
212 ACSR                   MOVEAERRMSG    $MD,1
212 ACSR                   EXSR ZMPMSG
212 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Slot record does not exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Slot record is locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE '0'       ERROR
     C*
     C*  When adding ....
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   ENDIF
     C*
     C*  Verify from warehouse code.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1HFWH    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Requested by field cannot be blank.
     C*
     CSR         W1HRQB    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   EXSR ZM03
     CSR                   ENDIF
     C*
     C*  Verify transfer reason code.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   MOVE W1HRSN    $LHRSN
     CSR                   CALL 'TF900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Picking warehouse and requesting warehouse cannot be the same
     C*
     CSR         W1HFWH    IFEQ $PWHSE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM2202
     CSR                   ENDIF
212 AC*
212 ACSR                   SELEC
212 AC*
212 AC*   Quantity being transfered cannot be > available quantity.
212 AC*
212 ACSR         $PCMD     WHEQ '*AUTHORZ'
212 ACSR         TDKEY     SETLLTORDD                79
212 ACSR                   MOVE *IN79     EOF     1
212 ACSR         EOF       DOWEQ*OFF
212 ACSR         TDKEY     READETORDD                    79
212 ACSR                   MOVE *IN79     EOF
212 ACSR         *IN79     IFEQ *ON
212 ACSR                   LEAVE
212 ACSR                   ENDIF
212 ACSR                   MOVE '*AVAIL  '$PCMD1  8
212 ACSR                   MOVE '*BATCH  '$PTYPE  8
212 ACSR                   Z-ADDW1HFWH    $PWHS1  30
212 ACSR                   MOVE TODITM    $PITEM 15
212 ACSR                   Z-ADDTODQO1    $PQTY1  70
212 ACSR                   Z-ADDTODQO2    $PQTY2  70
212 ACSR                   Z-ADDTODQO3    $PQTY3  70
212 ACSR                   CALL 'ADJQTY'
212 ACSR                   PARM           $PCMD1
212 ACSR                   PARM           $PPRG1 10
212 ACSR                   PARM           $PTYPE
212 ACSR                   PARM           $PWHS1
212 ACSR                   PARM           $PITEM
212 ACSR                   PARM           $PQTY1
212 ACSR                   PARM           $PQTY2
212 ACSR                   PARM           $PQTY3
212 ACSR                   PARM           $PRTQ1  70
212 ACSR                   PARM           $PRTQ2  70
212 ACSR                   PARM           $PRTQ3  70
212 ACSR                   PARM           $PRTN   8
212 ACSR                   PARM           $PERM
212 AC*
212 ACSR         TODQO1    IFGT $PRTQ1
212 ACSR                   MOVE *ON       ERROR
212 ACSR                   MOVE *BLANKS   ERRMSG
212 ACSR                   Z-ADDW1HFWH    ERWHSE
212 ACSR                   Z-ADDTODQO1    ERQORD
212 ACSR                   Z-ADD$PRTQ1    ERQAVL
212 ACSR                   MOVE TODITM    ERITEM
212 ACSR                   EXSR ZM2203
212 ACSR                   ENDIF
212 AC*
212 ACSR         TODQO2    IFGT $PRTQ2
212 ACSR         TODQO1    ANDEQ$PRTQ1
212 ACSR                   MOVE *ON       ERROR
212 ACSR                   MOVE *BLANKS   ERRMSG
212 ACSR                   Z-ADDW1HFWH    ERWHSE
212 ACSR                   Z-ADDTODQO2    ERQORD
212 ACSR                   Z-ADD$PRTQ2    ERQAVL
212 ACSR                   MOVE TODITM    ERITEM
212 ACSR                   EXSR ZM2203
212 ACSR                   ENDIF
212 AC*
212 ACSR         TODQO3    IFGT $PRTQ3
212 ACSR         TODQO2    ANDEQ$PRTQ2
212 ACSR         TODQO1    ANDEQ$PRTQ1
212 ACSR                   MOVE *ON       ERROR
212 ACSR                   MOVE *BLANKS   ERRMSG
212 ACSR                   Z-ADDW1HFWH    ERWHSE
212 ACSR                   Z-ADDTODQO3    ERQORD
212 ACSR                   Z-ADD$PRTQ3    ERQAVL
212 ACSR                   MOVE TODITM    ERITEM
212 ACSR                   EXSR ZM2203
212 ACSR                   ENDIF
212 ACSR                   ENDDO
212 ACSR                   ENDSL
212 AC*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE '0'       ERROR
     C*
     C*  Verify Y,N option
     C*
     CSR         W2YSNO    IFNE 'Y'
     CSR         W2YSNO    ANDNE'N'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,3    ERRMSG
     CSR                   EXSR ZM1001
     CSR                   ENDIF
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     CSR                   SELEC
     C*
     C*     Warehouse
     C*
     CSR         ROW#      WHEQ 9
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADD0         $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    W1HFWH
     CSR                   ENDIF
     C*
     C*     REASON CODE
     C*
     CSR         ROW#      WHEQ 11
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   MOVE *BLANKS   $LHRSN
     CSR                   CALL 'TF900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LHRSN    W1HRSN
     CSR                   ENDIF
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM9905
     CSR                   GOTO ENDCM1
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     CSR                   Z-ADD0         W1HFWH
     CSR                   MOVE *BLANKS   W1HFWD
     CSR                   MOVE *BLANKS   W1HRQB
     CSR                   MOVE *BLANKS   W1HRSN
     CSR                   Z-ADD0         W1HCO#
     CSR                   Z-ADD0         W1HCC#
     CSR                   MOVE *BLANKS   W1HCPO
     CSR                   MOVE *BLANKS   W1HCNM
     CSR                   MOVE *BLANKS   W1HCA1
     CSR                   MOVE *BLANKS   W1HCA2
     CSR                   MOVE *BLANKS   W1HCCT
     CSR                   MOVE *BLANKS   W1HCST
     CSR                   MOVE *BLANKS   W1HCZP
     CSR                   MOVE *BLANKS   W1HRTE
     CSR                   Z-ADD0         W1HSTP
     CSR                   MOVE *BLANKS   W1HTRK
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT2   Get default values for add.
     C*
     CSR         ZZDFT2    BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     CSR                   Z-ADDTOHFWH    W1HFWH
     CSR         TOHFWH    CHAINWAREHS               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE WHDESC    W1HFWD
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W1HFWD
     CSR                   ENDIF
     CSR                   Z-ADDTOHNUM    W1TNUM
     CSR                   MOVE TOHRQB    W1HRQB
     CSR                   MOVE TOHRSN    W1HRSN
     CSR                   Z-ADDTOHCO#    W1HCO#
     CSR                   Z-ADDTOHCC#    W1HCC#
     CSR                   MOVE TOHCPO    W1HCPO
     CSR                   MOVE TOHCNM    W1HCNM
     CSR                   MOVE TOHCA1    W1HCA1
     CSR                   MOVE TOHCA2    W1HCA2
     CSR                   MOVE TOHCCT    W1HCCT
     CSR                   MOVE TOHCST    W1HCST
     CSR                   MOVE TOHCZP    W1HCZP
     CSR                   MOVE TOHRTE    W1HRTE
     CSR                   Z-ADDTOHSTP    W1HSTP
     CSR                   MOVE TOHTRK    W1HTRK
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
520 AC*  ZZFGTS   Get Host Stop Number
520 AC*
520 AC           ZZFGTS    BEGSR
520 AC*
520 AC*    Get Stop From RTESTP
520 AC*
520 AC                     Z-ADD*ZEROS    $PORD
520 AC                     Z-ADDW1HSTP    $PDSTP
520 AC*
520 AC*    Get Stop From RTESTP
520 AC*
520 AC                     CALL 'GETSTOP'
520 AC                     PARM '*pltStp '$PCMD   8
520 AC                     PARM $PWHSE    $PWHS   30
520 AC                     PARM $PRTID    $PRTID  5
520 AC                     PARM           $PORD   70
520 AC                     PARM           $PDSTP  20
520 AC                     PARM           $PSTP   50
650aAC                     PARM           $PDROP  3
650aAC                     PARM           $PEXTD 30
650aAC                     PARM           $PSD    9
520 AC*
520 AC                     Z-ADD*ZEROS    DSPSTP  30
520 AC*
520 AC           $PSTP     IFNE *ZEROS
520 AC                     MOVE $PSTP     DSPSTP
520 AC                     ENDIF
520 AC*
520 AC                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     CSR                   Z-ADDTOHNUM    W2TNUM
     CSR                   MOVE *BLANKS   W2YSNO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     C*   Get record from main file.
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR         FILEKY    CHAINRECORD              N7978
     CSR                   ELSE
     CSR         FILEKY    CHAINRECORD               7978
     CSR                   ENDIF
     C*
     C*  Record locked.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT1
     CSR                   END
     C*
     C*  Record not found.
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM73
     CSR                   GOTO ENDGT1
     CSR                   END
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET2   Get record(s) for screen 1.
     C*
     CSR         ZZGET2    BEGSR
     C*
     C*   Get record from main file.
     C*
     CSR         FILEKY    CHAINRECORD               7978
     C*
     C*  Record locked.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT2
     CSR                   END
     C*
     C*  Record not found.
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM73
     CSR                   GOTO ENDGT2
     CSR                   END
     CSR         ENDGT2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PTNUM
212 AC*
212 AC*  Define key for TORDD file.
212 AC*
212 ACSR         TDKEY     KLIST
212 ACSR                   KFLD           $PTNUM
212 AC*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Get warehouse description.
     C*
     CSR         $PWHSE    CHAINWAREHS               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   END
     C*
     C*   Select first screen to display.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   Z-ADD0         W1TNUM
213  CSR                   CALL 'PIRTRF#'
     CSR                   PARM           W1TNUM
     CSR                   Z-ADDW1TNUM    $PTNUM
     CSR                   END
     C*
     C*   Cannot edit this order
     C*
     CSR         $PCMD     IFEQ '*RELEASE'
     CSR         $PCMD     OREQ '*CHANGE '
     CSR         FILEKY    CHAINRECORD               79
     CSR         *IN79     IFEQ *OFF
     CSR         TOHSTS    ANDNE'1'
     CSR         TOHSTS    ANDNE'2'
     CSR         TOHSTS    ANDNE'3'
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   Z-ADDTOHNUM    ERTNUM
     CSR                   MOVE *BLANKS   ERDESC
     CSR                   SELEC
     CSR         TOHSTS    WHEQ '4'
     CSR                   MOVELDESC,4    ERDESC
     CSR         TOHSTS    WHEQ '5'
     CSR                   MOVELDESC,5    ERDESC
     CSR         TOHSTS    WHEQ '6'
     CSR                   MOVELDESC,6    ERDESC
     CSR         TOHSTS    WHEQ '9'
     CSR                   MOVELDESC,7    ERDESC
     CSR                   ENDSL
     CSR                   EXSR ZM2201
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   GOTO ENDIN2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         $PCMD     IFEQ '*RELEASE'
     CSR                   EXSR SCR02I
     CSR                   ELSE
     CSR                   EXSR SCR01I
     CSR                   ENDIF
     CSR         ENDIN2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update record.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE '0'       ERROR
     C*
     C*  Move screen fields to record fields
     C*
     CSR                   Z-ADD$PWHSE    TOHTWH
     CSR                   Z-ADD$PTNUM    TOHNUM
     CSR                   Z-ADDW1HFWH    TOHFWH
     CSR                   MOVE W1HRQB    TOHRQB
     CSR                   Z-ADD0         TOHNDD
     CSR                   MOVE *BLANKS   TOHAUB
     CSR                   Z-ADD0         TOHAUD
     CSR                   Z-ADD0         TOHAUT
     CSR                   MOVE W1HRSN    TOHRSN
     CSR                   Z-ADDW1HCO#    TOHCO#
     CSR                   Z-ADDW1HCC#    TOHCC#
     CSR                   MOVE W1HCPO    TOHCPO
     CSR                   MOVE W1HCNM    TOHCNM
     CSR                   MOVE W1HCA1    TOHCA1
     CSR                   MOVE W1HCA2    TOHCA2
     CSR                   MOVE W1HCCT    TOHCCT
     CSR                   MOVE W1HCST    TOHCST
     CSR                   MOVE W1HCZP    TOHCZP
     CSR                   MOVE W1HRTE    TOHRTE
     CSR                   Z-ADDW1HSTP    TOHSTP
     CSR                   MOVE W1HTRK    TOHTRK
     CSR                   MOVE *BLANKS   TOHMSC
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     C*   Current date
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TOHRQD
     CSR                   Z-ADD$CVD8O    TOHSDT
     C*   Current time
     CSR                   TIME           TOHRQT
     CSR                   TIME           TOHSTM
     CSR                   MOVE '1'       TOHSTS
     CSR                   ENDIF
     C*
     CSR         $PCMD     IFEQ '*CHANGE '
     CSR         TOHSTS    ANDEQ'3'
     C*   Current date
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TOHSDT
     C*   Current time
     CSR                   TIME           TOHSTM
     CSR                   MOVE '2'       TOHSTS
     CSR                   ENDIF
     C*
     CSR         $PCMD     IFEQ '*AUTHORZ'
     CSR         TOHSTS    ANDEQ'2'
     C*   Current date
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    TOHSDT
     C*   Current time
     CSR                   TIME           TOHSTM
     CSR                   MOVE '3'       TOHSTS
     CSR                   ENDIF
     C*
     C*   Add record
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   WRITERECORD                 79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM71
     CSR                   GOTO ENDUP1
     CSR                   END
     CSR                   ELSE
     C*
     C*   -OR- Update record (it was read and locked in ZZGET2)
     C*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP1
     CSR                   END
     CSR                   END
     C*
     C*   Move key values to parameters
     C*
     CSR                   Z-ADDTOHNUM    $PTNUM
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update record.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE '0'       ERROR
     C*
     C*  Move screen fields to record fields
     C*
     CSR         W2YSNO    IFEQ 'Y'
     CSR                   MOVE '2'       TOHSTS
     C*
     C*   -OR- Update record (it was read and locked in ZZGET2)
     C*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUP2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*   Move key values to parameters
     C*
     CSR                   Z-ADDTOHNUM    $PTNUM
     CSR         ENDUP2    ENDSR
     C*
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
**
Transfer number
Requested By
Rlease order
being processed
being picked
being received
closed
