415 AF* *************************************************************
415 AF* ****                                                     ****
415 AF* **** THIS PROGRAM HAS BEEN REPLACED BY SL630.            ****
415 AF* ****                                                     ****
415 AF* **** WITH THE ABILITY TO DO AN ADJUSTMENT FROM THE SLOT  ****
415 AF* **** INFO SCREEN (SL630), THERE IS NO REASON TO HAVE THE ****
415 AF* **** RF ADJUSTMENT PROGRAM (IT220) GET THE USER ID AND   ****
415 AF* **** PASS IT TO THIS PROGRAM AND THEN ONTO IT222.        ****
415 AF* ****                                                     ****
415 AF* *************************************************************
     F*----------------------------------------------------------------
     F*   Copyright (C) 1993 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  IT221    Inv. adjustments item slot info - View  RF Mini screen
     F*  15 April, 1997
     F*  Roxanne Harrison
     F*  Dave Sommerville
     F*
     F*  Notes:
     F*       Created using sl630
     F*       8 X 20 Screens for hand held scanners
     F*  Revisions:
     F*
413 AF*    09/26/99  DAS 4.13
     F*      - Revised ZZFIL1 to get SSB item if one exists.
     F*      - Revised screen1 to display 'SSB' for an SSB item.
     A*    11/25/99  DAS  4.13
     A*     - Took out department fields. Now just have long string to
     A*       contain whse and dept.
     A*     - Moved lines up to make room for SSB line.
     A*     - Created line to display SSB item if one exists.
     F*
415 AF*    06/18/01  DAS 4.15
     F*      - Program replace by SL630.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 10   Position cursor indicators
     F*  21 - 30   Reverse display indicators
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FIT221FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FWAREHS  IF  E           K        DISK
     FSLOT2   IF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     FSLOTDEF IF  E           K        DISK
     FSLOTSTATIF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  26 $PWHDP
     I                                       27  38 $PDISP
     I                                       39  53 $PITEM
     I                                       54  63 $PUSER
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$AERM       DS
     I                                        1  60 XAERM
     I                                        1   4 $AMSG
     I$CERM       DS
     I                                        1  60 XCERM
     I                                        1   4 $CMSG
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'FRMTWH'              C         @FMTWH
     I              'FRMTIT'              C         @FMTIT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  20 $LCODE
     I*
     I                                       19  20 $LSTAT
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*                                      27  41 $LITEM
     I*                                      42  53 $LDISP
     I*                                      54  58 $LDESG
     I*                                      59  60 $LST
     I*                                      61  62 $LSDEF
     I*                                      63  64 $LACTV
     I*
     I                                       27  38 $LDISP
     I                                       39  48 $LUSER
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I*
     I                                        1  12 ERDISP
     I*
     I                                       13  17 ERSDPT
     I                                       18  18 ERSTYP
     I                                       19  23 ERSDSG
     I*
     I                                       24  28 ERIDPT
     I                                       29  29 ERITYP
     I                                       30  34 ERIDSG
     I*
     I                                        1  12 ERSLOT
     I                                       13  42 ERSTAT
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new batch.
     C*              *EDIT    - Edit batch.
     C*              *DELETE  - Delete batch.
     C*              *PRINT   - Print batch edit listing.
     C*              *POST    - Post batch.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains key for everything by *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new batch number for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     10
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     30
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR                   MOVE *ON       *IN90
     CSR                   ENDIF
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR                   END
     CSR                   MOVE *OFF      OVRRID  1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   END
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     C*R                   MOVE W1DISP    $PDISP
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Slot record is locked.
     C*
     CSR         ZM7974    BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM04     Slot record does not exist.
     C*
     CSR         ZM04      BEGSR
     CSR                   MOVE 'IT13204' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE W1DISP    ERDISP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM71  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM72  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR                   SELEC
     C*
     C*  When adding ....
     C*
     CSR         $PCMD     WHEQ '*ADD    '
     C*
     CSR                   ENDSL                           !End *ADD
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     C*      F9 - View slot quantities.
     C*
     CSR         *INKI     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD$PWHSE    WHSE    30
     CSR                   CALL 'SL635'
     CSR                   PARM           WHSE
     CSR                   PARM           $PWHDP
     CSR                   PARM           W1DISP
     CSR                   ENDIF
     C*
     C*
     C*      F10 - Call adjustment program.
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD$PWHSE    $LWHSE
     CSR                   MOVE $PWHDP    $LWHDP
     CSR                   MOVE $PDISP    $LDISP
     CSR                   MOVE $PUSER    $LUSER
     CSR                   MOVE '*CHANGE '$LCMD
     CSR                   CALL 'IT222'
     CSR                   PARM           $LPARM
     CSR                   EXSR SCR01I
     CSR                   ENDIF
     C*
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL0   Fill screen 1  heading fields.
     C*
     CSR         ZZFIL0    BEGSR
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     C*
     C*   Get warehouse description.
     C*
     CSR                   MOVE *BLANKS   W1WHSE  4
     CSR         $PWHSE    CHAINWAREHS               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WHDESC 30
     CSR                   ENDIF
     CSR                   MOVEL$PWHSE    $CWHSE  30
     CSR                   MOVELWHDESC    $CDESC 30
     CSR                   MOVE *BLANKS   $CSTR  40
     CSR                   CALL @FMTWH
     CSR                   PARM           $CWHSE
     CSR                   PARM           $CDESC
     CSR                   PARM           $CSTR
     CSR                   MOVEL$CSTR     W1WHSE
     C*
     C*   Get SLOT record.
     C*
     CSR                   Z-ADD$PWHSE    SLWHSE
     CSR         SLKEY     CHAINSLOT2                79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   SLWHDP
     CSR                   MOVE *BLANKS   SLSTYP
     CSR                   MOVE *BLANKS   SLPICK
     CSR                   MOVE *BLANKS   SLRSRV
     CSR                   MOVE *BLANKS   SLSTAT
     CSR                   MOVE *BLANKS   SLSDEF
     CSR                   MOVE *BLANKS   SLDESG
     CSR                   MOVE *BLANKS   SLACTV
     CSR                   MOVE *BLANKS   SLBLD
     CSR                   MOVE *ZEROS    SLSDTE
     CSR                   MOVE *ZEROS    SLSTIM
     CSR                   MOVE *ZEROS    SLENTD
     CSR                   MOVE *ZEROS    SLEXPD
     CSR                   MOVE *ZEROS    W1QTY
     CSR                   ELSE
     C*
     C*    Create a quantity string to print.
     C*
     CSR                   CALL 'SLOTQTY'
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     C*
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     C*
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     C*
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     C*
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     C*
     CSR                   PARM           STOCK1  50
     CSR                   PARM           STOCK2  30
     CSR                   PARM           STOCK3  30
     C*
     CSR                   PARM           AVAIL1  50
     CSR                   PARM           AVAIL2  30
     CSR                   PARM           AVAIL3  30
     C*
     CSR                   MOVE '*QTY2STR'$PCMD
     CSR                   Z-ADDAVAIL1    $PQTY1
     CSR                   Z-ADDAVAIL2    $PQTY2
     CSR                   Z-ADDAVAIL3    $PQTY3
     CSR                   MOVE *BLANKS   $PQSTR
     C*
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $PCMD   8
     CSR                   PARM           $PPRG  10
     CSR                   PARM           $PQTY1  70
     CSR                   PARM           $PQTY2  70
     CSR                   PARM           $PQTY3  70
     CSR                   PARM           $PUM1   2
     CSR                   PARM           $PUM2   2
     CSR                   PARM           $PUM3   2
     CSR                   PARM           $PQSTR 10
     CSR                   PARM           $PUSTR 17
     CSR                   PARM           $PRTN   8
     CSR                   PARM           $PERM
     C*
     CSR                   MOVE $PQSTR    W1QTY
     CSR                   ENDIF
     C*
     C*   Slot display/department/section
     CSR                   MOVE *BLANKS   TEMP   20
     CSR         SLDISP    CAT  '/':0     TEMP
     CSR         TEMP      CAT  SLWHDP:0  TEMP
     CSR         TEMP      CAT  '/':0     TEMP
     CSR         TEMP      CAT  SLSTYP:0  TEMP
     CSR                   MOVE TEMP      W1SDSP
     C*   Slot definition
     CSR         SDKEY     CHAINSLOTDEF              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   SDDESC
     CSR                   ENDIF
     CSR                   MOVE SDDESC    W1SDES 30
     CSR                   MOVE SLSDEF    W1SDEF
     C*   Slot status
     CSR         SLSTAT    CHAINSLOTSTAT             79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   SSDESC
     CSR                   ENDIF
     CSR                   MOVE SSDESC    W1SLDS 30
     CSR                   MOVE SLSTAT    W1SLST
     C*   Item description and pack description.
     CSR                   MOVE *BLANKS   W1ITEM
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   ITDESC
     CSR                   MOVE *BLANKS   ITPDSC
     CSR                   ENDIF
     CSR                   MOVELSLITEM    $IITEM
     CSR                   MOVELITDESC    $IDESC
     CSR                   MOVELITPDSC    $IPDSC
     CSR                   MOVE *BLANKS   $ISTR
     CSR                   CALL @FMTIT
     CSR                   PARM           $IITEM 15
     CSR                   PARM           $IDESC 30
     CSR                   PARM           $IPDSC 15
     CSR                   PARM           $ISTR  70
     CSR                   MOVEL$ISTR     W1ITEM
413 AC*
413 AC*   Get SSB item, if one exists
413 AC*
413 ACSR                   MOVE *OFF      SSBFLG  1
413 ACSR                   MOVE *BLANKS   WOSSB
413 ACSR         ITTYPE    IFEQ ' '
413 ACSR                   CALL 'GETSSB'
413 ACSR                   PARM ITWHSE    $GWHSE  30
413 ACSR                   PARM ITITEM    $GITEM 15
413 ACSR                   PARM ' '       #BITEM 15
413 ACSR                   PARM           #BDESC 30
413 ACSR                   PARM           #BPDSC 15
413 ACSR                   PARM           #BWHDP  5
413 ACSR                   PARM           #BSTYP  1
413 ACSR                   PARM           #BUM    2
413 ACSR                   PARM           #BUM2   2
413 ACSR                   PARM           #BUMQ2  30
413 ACSR                   PARM           #BUM3   2
413 ACSR                   PARM           #BUMQ3  30
413 ACSR                   PARM           #BRTN   8
413 AC*
413 ACSR         #BRTN     IFEQ '*FOUND  '
413 ACSR                   MOVE *ON       SSBFLG
413 ACSR                   MOVEL'SSB'     WOSSB
413 ACSR                   ENDIF
413 AC*
413 ACSR                   ENDIF
     C*
     C*   Initialize entry fields
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     C*   Get record from main file.
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     CSR                   MOVE $PDISP    W1DISP 12
     C*  Define key for main file.
     C*
     C*  Define key for slot file.
     C*
     C*
     CSR         SLKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PWHDP
     CSR                   KFLD           $PDISP
     C*
     C*    Define  key for SLOTDEF file.
     C*
     CSR         SDKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           SLSDEF
     C*
     C*  Define key for item file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           SLITEM
     C*
     CSR         IDKEY     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           SLITEM
     CSR                   KFLD           SLSDEF
     C*
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*
     CSR                   MOVE $PDISP    W1DISP
     C*
     C*   Select first screen to display.
     C*
     CSR                   MOVE *OFF      LOCK    1
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD    Update record.
     C*
     CSR         ZZUPD     BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR         ENDUPD    ENDSR
     O*----------------------------------------------------------------     ****
     O*
     O*  COMPILE TIME TABLES
     O*
