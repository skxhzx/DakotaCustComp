     F*----------------------------------------------------------------
     F*   Copyright (C) 2004 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   245 W. Roosevelt Rd.  Bldg 8, Suite 51
     F*   West Chicago, IL  60185
     F*   (630) 562-0375
     F*----------------------------------------------------------------
     F*
     F*  OR605     Truck build - Traffic cop
     F*  12 June 1997
     F*  Dave Sommerville
     F*
     F*----------------------------------------------------------------
     F*  Revisions
     F*
400 AF*    06/12/97   DAS  4.00
     F*      - Major revisons for truck build process. This program was
     F*        based on OR505. Old revisions were removed to clean up
     F*        program.
     F*      - Initial revisions have not be marked with the version.
     F*      - RTEHED3 has replaced ORDH2.
     F*      - A new route id field is used to uniquely identify routes.
     F*      - *** Transfers will not work correctly becuase the    ***
     F*        *** program will need to create route records.       ***
     F*
223 AF*    07/02/97   HNK  2.23
     F*      - Validate truck number.
     F*      - $PMSG parameter added.
     F*
402 AF*    07/18/97   DAS  4.02
     F*      - Removed skip around loading sheet.
     F*      - Changed loading sheet to call truck summary program.
     F*      - Revised warehouse parameter on pallet summary call.
     F*
404 AF*    08/26/97   HNL  4.04
     F*      - Changed to call OR660CL with '*DETAIL'.
     F*
404 AF*    08/27/97   DAS  4.04
     F*      - Change *POSPICK and *POSPCK1 to *WCPICK and *WCPICK1.
     F*      - Implemented *ALL to do everything at one time.
     F*
404 AF*    09/05/97   DAS  4.04
     F*      - Revised to skip summary reports for Will Call route.
     F*
409 AF*    05/22/98   RH   4.09
     F*      - Changed to call OR660CL 2nd time with '*SUMMARY'.
     F*
413 AF*    01/06/00   HNK  4.13
     F*      - Use reports override for device and form to print
     F*        the PS311 report.
413aAF*    03/22/00   MLB  4.13a
     F*      - Added call to OR625 - Assign pallet sections to items.
414aAF*    04/06/00   MLB  4.14a
     F*      - Added file OPTIONS to program to retrieve *GENPICK
     F*        defaults.
     F*      - Revised routine PICK to not call pgm OR640 when processing
     F*        Host pick Will Call orders.
     F*      - Added call to pgm PT647 - Host pick Will Call Auto
     F*        Close Transactions.
     F*      - Added call to pgm OR670 - Print Host pick Will Call Item
     F*        Exceptions.
414bAF*    04/06/00   MLB  4.14b
     F*      - Revised routine UPDCTL to not create new batch control
     F*        number when $PCMD2 is *REBUILD or *PCKPRNT.
     F*      - Revised routine UPDRTE to update batch number in RTEHED
     F*        only during allocate/build step.
     F*      - Revised mainline code to load batch number from RTEHED
     F*        when $PCMD is NOT equal to *RESTART.
     F*      - Revised routine PICK to set JOBOK to *DONE and update
     F*        file BATCTL with 9=Finished status.
414cAF*    07/14/00   HNK  4.14c
     F*      - Revised to print catch weight report OR665CL.
414dAF*    10/26/00   DAS  4.14d
     F*      - Moved retreival of OPTIONS to outside of select stmt.
     F*
415 AF*    04/30/01   DAS  4.15
     F*      - Added logic to track length of time for each process.
     F*
415aAF*    05/03/01   DAS  4.15a
     F*      - Line to OPEN OPTIONS file was not deleted
     F*        correctly in 414d change.
     F*
415bAF*    05/31/01   MLB  4.15b
     F*      - Changed pgm to call OR770 instead of OR670.
     F*
416 AF*    02/11/02  MLB  4.16
     F*      - Added call to OR626 to accumulate compartment totals.
416aAF*    04/03/02  MLB  4.16a
     F*      - Added call to DK130 to assign dock doors to route.  .
416bAF*    07/19/02  MLB  4.16b
     F*      - Fix: Added order type to test for assigning dock doors.
417 AF*    08/20/03  DAS  4.17
     F*      - Enh: Added DEV/FORM parms to OR660CL call.
     F*----------------------------------------------------------------
     F*  Client Custom Revisions:
     F*
CBI AF*    08/05/03  HNK  CBI
     F*      - Call OR662CL to print truck pallet report for Produce
     F*        items only.  this report will be directed to A1A's
     F*        warehouse printer.
     F*
CBIaAF*    08/08/03  HNK  CBIa
     F*      - Disable printing OR660 detail report. Ref-Email 8.7.03
     F*      - Print 2 copies of summary instead.
     F*
CBIbAF*    09/03/03  HNK  CBIb
     F*      - print OR660 Summary for Willcall 'BREAKERS' truck.
     F*
CBIcAF*    10/16/03  HNK  CBIc
     F*      - Enable printing OR660 detail report. Ref-Email 10.16.03
     F*      - Print 3 copies of summary instead of 2.
     F*
CBIdAF*    10/17/03  HNK  CBId
     F*      - Disable printing OR660 detail report. Ref-Email 10.17.03
     F*      - Print OR663 Driver's Pallet detail report instead.
     F*      - Disable third copy of Summary report. Ref-Email 10.16.03
CBIeAF*    10/29/03  RH   CBIe
     F*      - Disable printing OR663 detail report, will print at
     F*        close in PT640 and PT645.
CBIfAF*    11/14/03  HNK  CBIf
     F*      - Print OR660 summary report and PS311 for Will Call order
     F*        with truck code of 'ADD-ONS'
     F*    11/17/03 HNK
     F*      - Print OR662 as well.
CBIgAF*    11/18/03  RH   CBIg
     F*      - Disable printing 2nd copy OR660 Summary.. 11-17-03 email
CBIhAF*    11/24/03  RH   CBIh
     F*      - Change to print list at allocate/build for PRD at A1A
CBIiAF*    12/17/03  RH   CBIi
     F*      - Use PRNTLOG file to only print list for PRD once at A1A
CBIjAF*    12/19/03  HNK  CBIj
     F*      - print OR660 detail report on LP10 for truck codes
     F*        'MEAT-INSP', 'PRE-PICK' and 'CONTAINER'
     F*      - Changed to use LP31 on 03-18-04. Per Tammy.
CBIkAF*    01/07/04  MLB  CBIk
     F*      - Add call to CK370CL. Print Ship Check List for all
     F*        'flagged' customers.
     F*      - Changed to use LP10 on 03-18-04. Per Tammy.
CBIlAF*    02/24/03  MLB  CBIl
     F*      - Add call to CHKIUSE to clear inuse flag in route
     F*        header after alloc/build, pick/print are complete
     F*        for regular routes. Added to support processing
     F*        of routes from Batch.
CBImAF*    07/19/04  HNK  CBIm
     F*      - Temporarily change reports to print on LP10 instead of
     F*        LP31.
CBInAF*    07/19/04  DAS  CBIn
     F*      - Added call to DFPICK.
CBIoAF*    07/22/04  HNK  CBIo
     F*      - Change it back to LP31
CBIpAF*    08/19/04  RH   CBIp
     F*      - Add call to OR664CL to print Truck Pallet Detail
     F*        for Compartment X only.
CBIqAF*    10/05/04  RH   CBIq
     F*      - Do not print any reports if truck code is "WILL-CALL"
     F*        "SUD-SVC" or "DAMAGES" per 9-28-04 email.
CBIrAF*    01/16/06  RH   CBIr
     F*      - Change printer for PLST40CB from LP02 to LP11
     F*      - Comment out call to PLST40CB for PRD.
     F*
     F*
     F*----------------------------------------------------------------
     F*
     F*  Notes
     F*
     F*    - The screen for this program must be compiled with
     F*      defer write equal to *NO.
     F*
     F*----------------------------------------------------------------
     F*
     F*  Transfer notes
     F*
     F*    - Currently all transfer and POS orders are picked.  The
     F*      program is not set up to handle one route out of many
     F*      like it does for customer orders.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FOR605FM CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FBATCTL  UF  E           K        DISK                      A
     FRTEHED  UF  E           K        DISK
     FRTEHED3 IF  E           K        DISK
     F            RHREC                             KRENAMERHREC3
     FTORDH3  UF  E           K        DISK
223 AFTRUCKH  IF  E           K        DISK
     FTORDD   IF  E           K        DISK
414aAFOPTIONS IF  E           K        DISK                           UC
CBIhAFOPTIONZ IF  E           K        DISK                           UC
413 AFREPORTS IF  E           K        DISK
CBIi FPRNTLOG UF  E           K        DISK                      A
     FORDH    UF  E           K        DISK                      A
     FORDD    O   E           K        DISK                      A
415 AFRTETRCK O   E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    TCOD    1   7  8   TDSC   51
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
415 AI              'CLCDUR'              C         @CLCDR
     I*
CBIj I*  Constants
CBIjAI              'CONTAINER'           C         @CNTNR
CBIjAI              'PRE-PICK'            C         @PRPCK
CBIjAI              'MEAT-INSP'           C         @MTINS
CBIqAI              'WILL-CALL'           C         @WLCLL
CBIqAI              'SUD-SVC'             C         @SDSVC
CBIqAI              'DAMAGES'             C         @DMGES
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
415 AI                                      133 140 $CVDR1
415 AI                                      141 1450$CVVL1
415 AI                                      146 153 $CVDR2
415 AI                                      154 1580$CVVL2
415 AI                                      159 166 $CVDR3
415 AI                                      167 1710$CVVL3
415 AI                                      172 179 $CVDR4
415 AI                                      180 1840$CVVL4
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I            DS
     I                                    P   1   20$EC
414aAI*----------------------------------------------------------------
414aAI*  *GENPICK -  General picking options.
414aAI*----------------------------------------------------------------
414aAI*
414aAI* Fields
414aAI*
414aAI*    OPERPT  -  Print exception (short) error report (Y,N).
414aAI*    OPELBL  -  Print exception (short) labels (Y,N)
414aAI*    OPRFWC  -  Using RF will call (Y,N).
414aAI*    OPNRSC  -  Number of pallet sections (1-9).
414aAI*    OPHPWC  -  Host pick Will Call (Y/N).
414aAI*
414aAI* Data structure
414aAI*
414aAIOPDATA      DS
414aAI                                        1   1 OPERPT
414aAI                                        2   2 OPELBL
414aAI                                        3   3 OPRFWC
414aAI                                        4   40OPNRSC
414aAI                                        5   5 OPHPWC
414aAI                                      117 117 OPTEND
CBIh I*----------------------------------------------------------------
CBIh I*  *PICKLBL  -  Picking label options
CBIh I*----------------------------------------------------------------
CBIh I*
CBIh I* Fields
CBIh I*
CBIh I*    OPCLVL  -  Qty level for combined labels.
CBIh I*    OPCWRB  -  Print combined label warning before.
CBIh I*    OPCWRA  -  Print combined label warning after.
CBIh I*    OPUWRB  -  Print unit of measure warning before.
CBIh I*    OPUWRA  -  Print unit of measure warning after.
CBIh I*    OPTEXT  -  Text for last line of label.
CBIh I*    OPERR   -  Error label ratio.
CBIh I*    OPCWGT  -  Catch weight label ratio.
CBIh I*    OPLPGM  -  Picking label program.
CBIh I*    OPPDEV  -  Printer device.
CBIh I*    OPPFRM  -  Printer form.
CBIh I*
CBIh I* Data structure
CBIh I*
CBIh IOPZDTA      DS
CBIh I                                        1   30OPCLVL
CBIh I                                        4   4 OPCWRA
CBIh I                                        5   5 OPCWRB
CBIh I                                        6   6 OPUWRA
CBIh I                                        7   7 OPUWRB
CBIh I                                        8  50 OPTEXT
CBIh I                                       51  520OPERR
CBIh I                                       53  540OPCWGT
CBIh I                                       55  64 OPLPGM
CBIh I                                       65  74 OPPDEV
CBIh I                                       75  84 OPPFRM
CBIh I                                      117 117 OPPEND
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *PICK    - Pick new orders.
     C*              *RESTART - Restart abnormally ended batch.
     C*      $PCMD2  *ALOCBLD - Allocate and build
     C*              *PCKPRNT - Pick and print
     C*              *REBUILD - Rebuild
     C*              *ALL     - Do all phases without pausing after build.
     C*      $PTYPE  *PICK    - Pick normal customer orders (all routes)
     C*              *PICK1   - Pick normal customer orders (one route)
     C*              *TFRPICK - Pick transfer orders (all routes)
     C*              *TFRPCK1 - Pick transfer orders (one route)
404 DC*              *POSPICK - Pick POS orders (all routes)
404 DC*              *POSPCK1 - Pick POS orders (one route)
404 MC*              *WCPICK  - Pick will call orders (all routes)
404 MC*              *WCPICK1 - Pick will call orders (one route)
     C*      $PJTYP  0 - Batch
     C*              1 - Interactive
     C*      $PWHS   Warehouse
     C*      $PBAT   Batch number for *RESTART.
     C*      $PSTAT  Status for *RESTART.
     C*      $PRTID  Route for *RESTART.
     C*      $PORD   Order number for *RESTART.
     C*      $PRWHS  Receiving warehouse for *TFRPICK.
     C*      $PTRTE  Route for *TFRPICK.
     C*
     C*    Returned Parameters
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*      $PMSG   - Message ID.
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PCMD   8
     C                     PARM           $PCMD2  8
     C                     PARM           $PTYPE  8
     C                     PARM           $PJTYP  1
     C                     PARM           $PWHS  155
     C                     PARM           $PBAT   70
     C                     PARM           $PSTAT  1
     C                     PARM           $PRTID  5
     C                     PARM           $PORD   70
     C                     PARM           $PRWHS  30
     C                     PARM           $PTRTE  5
     C                     PARM           $PRTN   8
223 AC                     PARM           $PMSG   4
223 AC                     PARM           $PPRG  10
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C*
     C* Get out if a valid command wasn't sent to us.
     C*
     C           $PCMD     IFNE '*PICK   '
     C           $PCMD     ANDNE'*RESTART'
     C                     MOVE '*ERROR  '$PRTN
     C                     GOTO ENDPGM
     C                     END
223 AC*
223 AC* Get out if invalid truck number
223 AC*
223 AC           KEYRH     CHAINRTEHED              N79
223 AC           *IN79     IFEQ *ON
223 AC                     MOVE *BLANKS   RHTRUK
414bAC                     MOVE *ZEROS    RHPBAT
223 AC                     ENDIF
414bAC           $PCMD     IFNE '*RESTART'
414bAC                     Z-ADDRHPBAT    $PBAT
414bAC                     ENDIF
223 AC           KEYTH     CHAINTRUCKH               79
223 AC           *IN79     IFEQ *ON
CBIlAC           $PJTYP    IFEQ *ON
223 AC                     EXSR ZM2001
CBIlAC                     ENDIF
223 AC                     MOVE '*PGMQ   '$PRTN
223 AC                     GOTO ENDPGM
223 AC                     ENDIF
     C*
     C* Go and pick the orders.
     C*
     C                     EXSR PICK
     C                     MOVE $RETRN    $PRTN
     C*
     C* If error occured during picking display error screen.
     C*
     C           $RETRN    IFEQ '*ERROR  '
     C           $PJTYP    ANDEQ*ON
     C                     MOVE $MSGID    #MSGK
     C                     EXSR ZMQMSG
     C                     EXSR ZMDMSG
     C                     MOVE *ON       *IN98
     C                     EXFMTSCREEN2
     C                     ENDIF
     C*
     C* End of the picking process.
     C*
     C           ENDPGM    TAG
CBIlAC*
CBIlAC* If errors occured during alloc/build or pick/print
CBIlAC*  then clear inuse flag.
CBIlAC           $PRTN     IFEQ '*ERROR  '
CBIlAC           $PRTN     OREQ '*PGMQ   '
CBIlAC           $OTYPE    IFEQ ' '
CBIlAC                     EXSR ZZIUSE
CBIlAC                     ENDIF
CBIlAC                     ENDIF
     C                     MOVE *ON       *INLR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     CSR                   Z-ADD$PWHS     $PWHSE  30
     CSR                   MOVE *ON       FOREVR  1
     C*
     C*   Get screen heading and open display file if this program
     C*   is being run interactively.
     C*
     CSR         $PJTYP    IFEQ *ON
     C*
     CSR                   Z-ADD1         T       20
     CSR                   MOVE *BLANKS   $PSTR  60
     CSR                   Z-ADD50        $PLEN   30
     CSR         $PTYPE    LOKUPTCOD,T                   50
     CSR         T         IFEQ 0
     CSR                   MOVE TDSC,1    $PSTR
     CSR                   ELSE
     CSR                   MOVE TDSC,T    $PSTR
     CSR                   ENDIF
     CSR                   CALL 'CENTER'
     CSR                   PARM           $PSTR
     CSR                   PARM           $PLEN
     CSR                   MOVEL$PSTR     W1HED
     C*
     CSR                   OPEN OR605FM
     CSR                   ENDIF
     C*
     C*   Initialize order type.
     C*
     CSR                   SELEC
     CSR         $PTYPE    WHEQ '*PICK   '
     CSR         $PTYPE    OREQ '*PICK1  '
     CSR                   MOVE ' '       $OTYPE  1
     CSR         $PTYPE    WHEQ '*TFRPICK'
     CSR         $PTYPE    OREQ '*TFRPCK1'
     CSR                   MOVE 'T'       $OTYPE
404 DC*          $PTYPE    WHEQ '*POSPICK'
404 DC*          $PTYPE    OREQ '*POSPCK1'
404 DC*                    MOVE 'P'       $OTYPE
404 MCSR         $PTYPE    WHEQ '*WCPICK '
404 MCSR         $PTYPE    OREQ '*WCPICK1'
404 MCSR                   MOVE 'W'       $OTYPE
415aDC**                   OPEN OPTIONS
414dDC**
414dDC**   Get general picking options from options file.
414dDC**
414dDC**                   MOVE '*GENPICK'KYCODE
414dDC**         KEYOP     CHAINOPTIONS              79
414dDC**         *IN79     IFEQ *ON
414dDC**                   MOVE 'Y'       OPERPT
414dDC**                   MOVE 'N'       OPELBL
414dDC**                   MOVE '1'       OPNRSC
414dDC**                   MOVE 'N'       OPHPWC
414dDC**                   ENDIF
     CSR                   ENDSL
414dAC*
414dAC*    Get general picking options from options file.
414dAC*
414dACSR                   OPEN OPTIONS
414dACSR                   MOVE '*GENPICK'KYCODE
414dACSR         KEYOP     CHAINOPTIONS              79
414dACSR         *IN79     IFEQ *ON
414dACSR                   MOVE 'Y'       OPERPT
414dACSR                   MOVE 'N'       OPELBL
414dACSR                   MOVE '1'       OPNRSC
414dACSR                   MOVE 'N'       OPHPWC
414dACSR                   ENDIF
     C*
     C*   Are we working with all routes or one route?
     C*
     CSR                   SELEC
     CSR         $PTYPE    WHEQ '*PICK   '
     CSR         $PTYPE    OREQ '*TFRPICK'
404 DC*          $PTYPE    OREQ '*POSPICK'
404 MCSR         $PTYPE    OREQ '*WCPICK '
     CSR                   MOVE *ON       ALLRTE  1
     CSR         $PTYPE    WHEQ '*PICK1  '
     CSR         $PTYPE    OREQ '*TFRPCK1'
404 DC*          $PTYPE    OREQ '*POSPCK1'
404 MCSR         $PTYPE    OREQ '*WCPICK1'
     CSR                   MOVE *OFF      ALLRTE  1
     CSR                   ENDSL
     C*
     C*   Initialize special keys
     C*
     CSR                   Z-ADD0         ENTER   50
     CSR                   Z-ADD2         COMAND  50
     CSR                   Z-ADD01122     ROLLUP  50
     CSR                   Z-ADD01123     ROLLDN  50
     CSR                   Z-ADD01124     CLEAR   50
     CSR                   Z-ADD01125     HELP    50
     C*
     C*   Initialize message handling
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZMIMSG
     CSR                   ENDIF
     C*
     C*  Initialize variables
     C*
     CSR                   MOVE *BLANKS   $RETRN  8
414bACSR                   MOVE *BLANKS   JOBOK   8
     CSR                   MOVE *OFF      ERROR   1
     C*
     C*   Define key for route header file by stat/route (RTEHED3)
     C*
     CSR         *LIKE     DEFN RHSTAT    KYSTAT
     CSR         KEYRH3    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           KYSTAT
     CSR                   KFLD           $OTYPE
     CSR                   KFLD           $PRTID
     C*
     C*   Define key for route header file by stat/type (RTEHED3)
     C*
     CSR         KEYRTP    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           KYSTAT
     CSR                   KFLD           $OTYPE
     C*
     C*   Define key for route header file (RTEHED)
     C*
     CSR         KEYRH     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PRTID
223 AC*
223 AC*   Define key for truck header file (TRUCKH)
223 AC*
223 ACSR         KEYTH     KLIST
223 ACSR                   KFLD           $PWHSE
223 ACSR                   KFLD           RHTRUK
     C*
     C*  Define partial key for transfer header file.
     C*
     CSR         KEYTOH    KLIST
     CSR                   KFLD           $PWHSE
     C*
     C*  Define partial key for transfer detail file.
     C*
     CSR         KEYTOD    KLIST
     CSR                   KFLD           TOHNUM
414aAC*
414aAC*  Define partial key for OPTIONS file.
414aAC*
414aACSR         *LIKE     DEFN OPCODE    KYCODE
414aACSR         KEYOP     KLIST
414aACSR                   KFLD           $PWHSE
414aACSR                   KFLD           KYCODE
CBIhAC*
CBIhAC*  Define partial key for OPTIONZ file.
CBIhAC*
CBIhACSR         KEYOPZ    KLIST
CBIhACSR                   KFLD           KYCODE
CBIhACSR                   KFLD           $PWHSE
CBIhACSR                   KFLD           RHTRUK
CBIhACSR                   KFLD           KYZONE
     C*
     C*  Define key for ORDH file.
     C*
     CSR         KEYOH     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           $PORD
413 AC*
413 ACSR         RPKEY     KLIST
413 ACSR                   KFLD           WKPRTF 10
CBIiAC*   Key for PRNTLOG
CBIiACSR         KEYPRT    KLIST
CBIiACSR                   KFLD           RHRTID
CBIiACSR                   KFLD           KYPRTF  8
     C*
     C*   Fool the compiler.
     C*
     CSR                   MOVE *BLANKS   DUMMY   1
     CSR         DUMMY     IFNE *BLANKS
     CSR         KEYOH     CHAINORDH                 79
     CSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CPYORD  Copy authorized orders to picking order files.
     C*
     CSR         CPYORD    BEGSR
     C*
     CSR         KEYTOH    SETLLTORDH3
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYTOH    READETORDH3                   79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*      Only select authorized records for the receiving warehouse.
     C*
     CSR         TOHSTS    IFNE '3'
     CSR         TOHTWH    ORNE $PRWHS
     CSR                   ITER
     CSR                   ENDIF
     C*
     C*      Add record to picking header file.
     C*
     CSR                   CLEAROHREC
     CSR                   Z-ADDTOHFWH    OHWHSE
     CSR                   CALL 'PIRORD#'
     CSR                   PARM OHWHSE    $OWHSE  30
     CSR         OHORD     PARM 0         $OORD   70
     CSR                   MOVE 'T'       OHORIG
     CSR                   MOVE 'T'       OHTYPE
     CSR                   Z-ADDTOHNUM    OHCORD
     CSR                   MOVE $PTRTE    OHRTE
     CSR                   Z-ADDTOHSTP    OHSTOP
     CSR                   MOVE 'O'       OHSTAT
     CSR                   WRITEOHREC
     C*
     C*      Copy detail records to picking detail file.
     C*
     CSR         KEYTOD    SETLLTORDD
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYTOD    READETORDD                    78
     CSR         *IN78     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*         Add record to picking detail file.
     C*
     CSR                   CLEARODREC
     CSR                   Z-ADDOHWHSE    ODWHSE
     CSR                   Z-ADDOHORD     ODORD
     CSR                   Z-ADDTODSEQ    ODSEQ
     CSR                   MOVE TODITM    ODITEM
     CSR                   Z-ADDTODQO1    ODQOR1
     CSR                   Z-ADDTODQO2    ODQOR2
     CSR                   Z-ADDTODQO3    ODQOR3
     CSR                   MOVE 'O'       ODSTAT
     CSR                   WRITEODREC
     CSR                   ENDDO
     C*
     C*      Update status of transfer order.
     C*
     CSR                   MOVE '4'       TOHSTS
     CSR                   UPDATTOHREC
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PICK    Pick new customer orders.
     C*
     CSR         PICK      BEGSR
     C*
     CSR                   MOVE *OFF      BFLAG   1
     CSR                   MOVE *BLANKS   $RETRN
     C*
     C*     Phase 0 - Copy authorized transfer orders to picking files.
     C*               This needs to be done before anything else.
     C*
     CSR         PHASE0    TAG
     CSR         $PCMD2    IFEQ '*ALOCBLD'
404 ACSR         $PCMD2    OREQ '*ALL    '
     CSR                   MOVE '0'       STAT    1
     CSR                   EXSR UPDCTL
     CSR         $PTYPE    IFEQ '*TFRPICK'
     CSR         $PJTYP    IFEQ *ON
     CSR                   MOVE *BLANKS   W1RTE
     CSR                   WRITESCREEN1
     CSR                   EXSR ZM20
     CSR                   ENDIF
     CSR                   EXSR CPYORD
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*   Process orders one route at a time.
     C*
     CSR         $PCMD2    IFEQ '*ALOCBLD'
404 ACSR         $PCMD2    OREQ '*ALL    '
     CSR                   MOVE '1'       KYSTAT
     CSR                   ENDIF
     CSR         $PCMD2    IFEQ '*REBUILD'
     CSR         $PCMD2    OREQ '*PCKPRNT'
     CSR                   MOVE '3'       KYSTAT
     CSR                   ENDIF
     CSR         $PCMD     IFEQ '*PICK   '
     CSR         ALLRTE    IFEQ *ON
     CSR         KEYRTP    SETLLRTEHED3
     CSR                   ELSE
     CSR         KEYRH3    SETLLRTEHED3
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   MOVE *OFF      EOFRH2  1
     C*
     CSR         EOFRH2    DOUEQ*ON
     CSR         $RETRN    OREQ '*ERROR  '
     CSR         $RETRN    OREQ '*ENDBLD '
     CSR         $RETRN    OREQ '*DONE   '
     C*
     CSR         $PCMD     IFEQ '*PICK   '
     CSR         ALLRTE    IFEQ *ON
     CSR         KEYRTP    READERTEHED3                  79
     CSR                   ELSE
     CSR         KEYRH3    READERTEHED3                  79
     CSR                   ENDIF
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     CSR                   MOVE RHRTID    $PRTID
     CSR                   ENDIF
     C*
     C*      Display informational screen.
     C*
     CSR                   MOVE RHRTE     W1RTE
     CSR         $PJTYP    IFEQ *ON
     CSR                   WRITESCREEN1
     CSR                   ENDIF
     C*
     C*      If we are picking new orders then start at phase 1.
     C*
     CSR         $PCMD     IFEQ '*PICK   '
     CSR         $PCMD2    CABEQ'*ALL    'PHASE1
     CSR         $PCMD2    CABEQ'*ALOCBLD'PHASE1
     CSR         $PCMD2    CABEQ'*REBUILD'PHASE2
     CSR         $PCMD2    CABEQ'*PCKPRNT'PHASE3
     CSR                   ENDIF
     C*
     C*      Otherwise, skip to the phase where the restarted batch
     C*      left off.
     C*
     CSR         $PSTAT    CABEQ'1'       PHASE1
     CSR         $PSTAT    CABEQ'2'       PHASE2
     CSR         $PSTAT    CABEQ'3'       PHASE3
     CSR         $PSTAT    CABEQ'4'       PHASE4
     CSR         $PSTAT    CABEQ'5'       PHASE5
     CSR         $PSTAT    CABEQ'6'       PHASE6
     C*
     C*     Phase 1 - Allocate items from slots.
     C*
     CSR         PHASE1    TAG
415 ACSR         $PCMD2    IFEQ '*ALOCBLD'
415 ACSR                   MOVEL$PCMD2    $TPGM  10 P
415 ACSR                   EXSR ZZSTRT
415 ACSR                   ENDIF
415 ACSR                   MOVEL'OR610'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
     CSR                   MOVE '1'       STAT    1
     CSR                   EXSR UPDCTL
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZM21
     CSR                   ENDIF
     CSR                   CALL 'OR610'
     CSR                   PARM           $PCMD
     CSR                   PARM           #PROG
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           RHTRUK
     CSR                   PARM           $OTYPE
     CSR                   PARM           RHRTID
     CSR                   PARM           RHRTE
     CSR                   PARM           $PORD
     CSR                   PARM           $RETRN  8
     CSR                   PARM           $MSGID  4
415 ACSR                   MOVEL'OR610'   $TPGM     P
415 ACSR                   EXSR ZZEND
     CSR         $RETRN    CABEQ'*ERROR  'ENDDO1
     C*
     C*     Phase 2 - Build pallets.
     C*
     CSR         PHASE2    TAG
415 ACSR                   MOVEL'OR620'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
     CSR                   MOVE '2'       STAT
     CSR                   EXSR UPDCTL
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZM22
     CSR                   ENDIF
     CSR                   CALL 'OR620CL'
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           RHTRUK
     CSR                   PARM           $OTYPE
     CSR                   PARM           RHRTID
     CSR                   PARM           $RETRN
415 ACSR                   MOVEL'OR620'   $TPGM     P
415 ACSR                   EXSR ZZEND
415 ACSR         $PCMD2    IFEQ '*ALOCBLD'
415 ACSR                   MOVEL$PCMD2    $TPGM     P
415 ACSR                   EXSR ZZEND
415 ACSR                   ENDIF
416 AC*
416 AC*    Accumulate totals by compartment.
416 ACSR         $PCMD2    IFEQ '*ALOCBLD'
416 ACSR         $PCMD2    OREQ '*REBUILD'
416 ACSR         $PCMD2    OREQ '*ALL    '
416 ACSR                   MOVEL'OR626'   $TPGM     P
416 ACSR                   EXSR ZZSTRT
416 ACSR                   CALL 'OR626'
416 ACSR                   PARM           $PCMD2
416 ACSR                   PARM           $PBAT
416 ACSR                   PARM           $PWHSE
416 ACSR                   PARM           $OTYPE
416 ACSR                   PARM           RHRTID
416 ACSR                   PARM           RHTRUK
416 ACSR                   MOVEL'OR626'   $TPGM     P
416 ACSR                   EXSR ZZEND
416 ACSR                   ENDIF
416aAC*
416aAC*    Assign dock doors to built route.
416aACSR         $PCMD2    IFEQ '*ALOCBLD'
416bACSR         $OTYPE    ANDEQ' '
416aACSR         $PCMD2    OREQ '*REBUILD'
416bACSR         $OTYPE    ANDEQ' '
416aACSR         $PCMD2    OREQ '*ALL    '
416bACSR         $OTYPE    ANDEQ' '
416aACSR                   MOVEL'DK130'   $TPGM     P
416aACSR                   EXSR ZZSTRT
416aACSR                   CALL 'DK130'
416aACSR                   PARM           $PCMD2
416aACSR                   PARM           $PBAT
416aACSR                   PARM           $PWHSE
416aACSR                   PARM           $OTYPE
416aACSR                   PARM           RHRTID
416aACSR                   PARM           RHTRUK
416aACSR                   MOVEL'DK130'   $TPGM     P
416aACSR                   EXSR ZZEND
416aACSR                   ENDIF
     C*
     C*       Mark route as 'built'.
     C*
     CSR                   MOVE '3'       RSTAT   1
     CSR                   EXSR UPDRTE
CBIh CSR         $PCMD2    IFEQ '*ALOCBLD'                     B1
CBIiAC*    Check if already printed for route id.
CBIhACSR                   MOVEL'PLST40PC'KYPRTF
CBIiACSR         KEYPRT    CHAINPRNTLOG              77
CBIiACSR         *IN77     IFEQ *ON                            B2
CBIhAC*
CBIhAC*    Get PICKLBL options from OPTIONZ'file.
CBIhACSR                   OPEN OPTIONZ
CBIhAC*
CBIhACSR                   MOVEL'*PICKLBL'KYCODE
CBIhACSR                   MOVEL'PRD'     KYZONE  6
CBIhACSR         KEYOPZ    CHAINOPTIONZ              79
CBIhACSR         *IN79     IFEQ *ON                            B3
CBIhACSR                   Z-ADD1         OPCLVL
CBIhACSR                   MOVE 'N'       OPCWRA
CBIhACSR                   MOVE 'N'       OPCWRB
CBIhACSR                   MOVE 'N'       OPUWRA
CBIhACSR                   MOVE 'N'       OPUWRB
CBIhACSR                   MOVE *BLANKS   OPTEXT
CBIhACSR                   Z-ADD0         OPERR
CBIhACSR                   Z-ADD0         OPCWGT
CBIhACSR                   MOVEL'PLBL40'  OPLPGM
CBIhACSR                   MOVEL*BLANKS   OPPDEV
CBIhACSR                   MOVEL'LP02'    OPPDEV
CBIhACSR                   MOVEL'*STD'    OPPFRM
CBIhACSR                   ENDIF                               E3
CBIhACSR                   MOVEL*BLANKS   OPPDEV
CBIrDC**                   MOVEL'LP02'    OPPDEV
CBIrMCSR                   MOVEL'LP11'    OPPDEV
CBIqACSR         RHTRUK    IFNE @WLCLL
CBIqACSR         RHTRUK    ANDNE@SDSVC
CBIqACSR         RHTRUK    ANDNE@DMGES
CBIrDC***                  CALL 'PLST40CB'
CBIrDC*                    PARM           $PCMD
CBIrDC*                    PARM           $PWHSE
CBIrDC*                    PARM           RHRTID
CBIrDC*                    PARM 'P'       COMP    1
CBIrDC*                    PARM 'PRD   '  ZONE    6
CBIrDC*                    PARM 1         PGEN    10
CBIrDC*                    PARM 'PRD   '  PSZON   6
CBIrDC*                    PARM           RHTRUK
CBIhDC**                   PARM           $OTYPE
CBIrDC*                    PARM           RHRTE
CBIrDC*                    PARM           OPZDTA
CBIrDC*                    PARM           $TRN    70
CBIqACSR                   ENDIF
CBIhACSR                   MOVEL'PLST40CB'$TPGM     P
CBIiACSR                   MOVE '*CURCMD '$CVCMD
CBIiACSR                   CALL @CVTDT
CBIiACSR                   PARM           $CVTDT
CBIiACSR                   Z-ADD$CVD8O    PRDATE
CBIiACSR                   TIME           PRTIME
CBIhACSR                   MOVELRHRTID    PRRTID
CBIhACSR                   MOVELKYPRTF    PRPRTF
CBIhACSR                   Z-ADD1         PRPCTR
CBIhACSR                   WRITEPRREC
CBIiACSR                   ELSE                               EL2
CBIhACSR                   UNLCKPRNTLOG
CBIiACSR                   ENDIF                              E2
CBIhACSR                   ENDIF                              E1
     CSR         $PCMD2    IFEQ '*ALOCBLD'
     CSR         $PCMD2    OREQ '*REBUILD'
     CSR                   MOVE '*ENDBLD '$RETRN
     CSR                   GOTO ENDDO1
     CSR                   ENDIF
     C*
     C*     Phase 3 - Pick stock from slots.
     C*
     CSR         PHASE3    TAG
415 ACSR         $PCMD2    IFEQ '*PCKPRNT'
415 ACSR                   MOVEL$PCMD2    $TPGM  10 P
415 ACSR                   EXSR ZZSTRT
415 ACSR                   ENDIF
415 ACSR                   MOVEL'OR630'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
     CSR                   MOVE '3'       STAT
     CSR                   EXSR UPDCTL
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZM23
     CSR                   ENDIF
     CSR                   CALL 'OR630'
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $OTYPE
     CSR                   PARM           RHRTE
     CSR                   PARM           RHRTID
     CSR                   PARM           RHTRUK
CHYnACSR                   CALL 'DFPICK'
CHYnACSR                   PARM           $PWHSE
CHYnACSR                   PARM           RHRTID
415 ACSR                   MOVEL'OR630'   $TPGM     P
415 ACSR                   EXSR ZZEND
413aAC*
413aAC*       Assign pallet sections to items.
413aAC*
413aACSR         $PTYPE    IFEQ '*PICK   '
413aACSR         $PTYPE    OREQ '*PICK1  '
413aACSR         $PTYPE    OREQ '*WCPICK '
413aACSR         $PTYPE    OREQ '*WCPICK1'
415 ACSR                   MOVEL'OR625'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
413aACSR                   CALL 'OR625'
413aACSR                   PARM           $PBAT
413aACSR                   PARM           $PWHSE
413aACSR                   PARM           $OTYPE
413aACSR                   PARM           RHRTID
413aACSR                   PARM           RHTRUK
415 ACSR                   MOVEL'OR625'   $TPGM     P
415 ACSR                   EXSR ZZEND
413aACSR                   ENDIF
     C*
     C*       Mark route as 'Printed' even though it hasn't been printed.
     C*         If something goes wrong during printing, it is easy to
     C*         reprint.
     C*
     CSR                   MOVE '4'       RSTAT   1
     CSR                   EXSR UPDRTE
     C*
     C*     Phase 4 - Print labels.
     C*
     CSR         PHASE4    TAG
     CSR                   MOVE '4'       STAT
     CSR                   EXSR UPDCTL
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZM24
     CSR                   ENDIF
     CSR                   MOVE $PWHSE    $WHSEA  3
414aACSR         OPHPWC    IFEQ 'N'
414aACSR         OPHPWC    OREQ 'Y'
414aACSR         $OTYPE    ANDNE'W'
415 ACSR                   MOVEL'OR640'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
     CSR                   CALL 'OR640'
     CSR                   PARM '*PRINT  '$XCMD   8
     CSR                   PARM           $WHSEA
     CSR                   PARM           RHRTID
     CSR                   PARM           RHRTE
     CSR                   PARM           RHTRUK
     CSR                   PARM '*ALL  '  $XSZON  6
415 ACSR                   MOVEL'OR640'   $TPGM     P
415 ACSR                   EXSR ZZEND
414aACSR                   ENDIF
402 MC*********************
402 MC*
402 MC*     Phase 5 - Print loading sheet (Truck Summary).
402 MC*
402 MCSR         PHASE5    TAG
404 MCSR         $PTYPE    IFNE '*WCPICK '
404 MCSR         $PTYPE    ANDNE'*WCPICK1'
415 ACSR                   MOVEL'PS310'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
402 MCSR                   MOVE '5'       STAT
402 MCSR                   EXSR UPDCTL
402 MCSR         $PJTYP    IFEQ *ON
402 MCSR                   EXSR ZM25
402 MCSR                   ENDIF
402 MCSR                   MOVE $PWHSE    $WHSEA
413 MCSR                   MOVE *BLANKS   $DEV
413 MCSR                   MOVE *BLANKS   $FORM
413 ACSR                   MOVEL'PS311PR 'WKPRTF
413 ACSR         RPKEY     CHAINREPORTS              79
413 ACSR         *IN79     IFEQ *OFF
413 ACSR                   MOVE RPDEV     $DEV
413 ACSR                   MOVE RPFORM    $FORM
413 ACSR                   ELSE
413 ACSR                   MOVEL'*JOB    '$DEV
413 ACSR                   MOVEL'*STD    '$FORM
413 ACSR                   ENDIF
402 MCSR                   CALL 'PS310CL'
402 MCSR                   PARM           $WHSEA
402 MCSR                   PARM           RHRTID
402 MCSR                   PARM           $RETRN
413 ACSR                   PARM           $DEV   10
413 ACSR                   PARM           $FORM  10
413 DC**                   PARM '*JOB'    $DEV   10
413 DC**                   PARM '*STD'    $FORM  10
415 ACSR                   MOVEL'PS310'   $TPGM     P
415 ACSR                   EXSR ZZEND
404 MCSR                   ENDIF
402 MC*
402 MC*     Phase 6 - Print pallet summary
402 MC*
402 MCSR         PHASE6    TAG
     C*
CBIbACSR         $PTYPE    IFEQ '*WCPICK '
CBIbACSR         RHTRUK    ANDEQ'BREAKERS'
CBIbACSR         $PTYPE    OREQ '*WCPICK1'
CBIbACSR         RHTRUK    ANDEQ'BREAKERS'
CBIbACSR                   CALL 'OR660CL'
CBIbACSR                   PARM           $PCMD
CBIbACSR                   PARM '*SUMMARY'RTYPE   8
CBIbACSR                   PARM           $WHSEA
CBIbACSR                   PARM           RHRTID
CBIbACSR                   PARM           $RETRN
CBIbACSR                   PARM '*JOB    '$DEV   10
CBIbACSR                   PARM '*STD    '$FORM  10
CBIbACSR                   ENDIF
     C*   Container truck
CBIjACSR         $PTYPE    IFEQ '*WCPICK '
CBIjACSR         RHTRUK    ANDEQ@CNTNR
     C*
CBIjACSR         $PTYPE    OREQ '*WCPICK1'
CBIjACSR         RHTRUK    ANDEQ@CNTNR
     C*   Pre-Pick truck
CBIjACSR         $PTYPE    OREQ '*WCPICK '
CBIjACSR         RHTRUK    ANDEQ@PRPCK
     C*
CBIjACSR         $PTYPE    OREQ '*WCPICK1'
CBIjACSR         RHTRUK    ANDEQ@PRPCK
     C*   Meat-insp truck
CBIjACSR         $PTYPE    OREQ '*WCPICK '
CBIjACSR         RHTRUK    ANDEQ@MTINS
     C*
CBIjACSR         $PTYPE    OREQ '*WCPICK1'
CBIjACSR         RHTRUK    ANDEQ@MTINS
     C*
CBIjACSR                   CALL 'OR660CL'
CBIjACSR                   PARM           $PCMD
CBIjACSR                   PARM '*DETAIL 'RTYPE   8
CBIjACSR                   PARM           $WHSEA
CBIjACSR                   PARM           RHRTID
CBIjACSR                   PARM           $RETRN
CBIoMCSR                   PARM 'LP31    '$DEV   10
CBIjACSR                   PARM '*STD    '$FORM  10
CBIjACSR                   ENDIF
     C* Print OR660 Summary, PS311 for 'ADD-ONS truck.
CBIfACSR         $PTYPE    IFEQ '*WCPICK '
CBIfACSR         RHTRUK    ANDEQ'ADD-ONS '
CBIfACSR         $PTYPE    OREQ '*WCPICK1'
CBIfACSR         RHTRUK    ANDEQ'ADD-ONS '
CBIfACSR                   CALL 'OR660CL'
CBIfACSR                   PARM           $PCMD
CBIfACSR                   PARM '*SUMMARY'RTYPE   8
CBIfACSR                   PARM           $WHSEA
CBIfACSR                   PARM           RHRTID
CBIfACSR                   PARM           $RETRN
CBIfACSR                   PARM '*JOB    '$DEV   10
CBIfACSR                   PARM '*STD    '$FORM  10
     C*
CBIfACSR                   MOVE $PWHSE    $WHSEA
CBIfACSR                   MOVE *BLANKS   $DEV
CBIfACSR                   MOVE *BLANKS   $FORM
CBIfACSR                   MOVEL'PS311PR 'WKPRTF
CBIfACSR         RPKEY     CHAINREPORTS              79
CBIfACSR         *IN79     IFEQ *OFF
CBIfACSR                   MOVE RPDEV     $DEV
CBIfACSR                   MOVE RPFORM    $FORM
CBIfACSR                   ELSE
CBIfACSR                   MOVEL'*JOB    '$DEV
CBIfACSR                   MOVEL'*STD    '$FORM
CBIfACSR                   ENDIF
CBIfMCSR                   CALL 'PS310CL'
CBIfMCSR                   PARM           $WHSEA
CBIfMCSR                   PARM           RHRTID
CBIfMCSR                   PARM           $RETRN
CBIfACSR                   PARM           $DEV   10
CBIfACSR                   PARM           $FORM  10
CBIfAC*  Print truck pallet report for Produce items only
CBIfACSR                   CALL 'OR662CL'
CBIfACSR                   PARM           $PCMD
CBIfACSR                   PARM '*DETAIL 'RTYPE   8
CBIfACSR                   PARM           $WHSEA
CBIfACSR                   PARM           RHRTID
CBIfACSR                   PARM           $RETRN
     C*
CBIfACSR                   ENDIF
     C*
404 MCSR         $PTYPE    IFNE '*WCPICK '
404 MCSR         $PTYPE    ANDNE'*WCPICK1'
415 ACSR                   MOVEL'OR660'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
402 MCSR                   MOVE '6'       STAT
402 MCSR                   EXSR UPDCTL
402 MCSR         $PJTYP    IFEQ *ON
402 MCSR                   EXSR ZM26
402 MCSR                   ENDIF
402 MCSR                   MOVE $PWHSE    $WHSEA
     C*  Print one copy of Detail report
CBId C**                   CALL 'OR660CL'
CBId C**                   PARM           $PCMD
404 DC**                   PARM '*SUMMARY'RTYPE   8
CBId C**                   PARM '*DETAIL 'RTYPE   8
CBId C**                   PARM           $WHSEA
CBId C**                   PARM           RHRTID
CBId C**                   PARM           $RETRN
CBId C**                   PARM           $DEV   10
CBId C**                   PARM           $FORM  10
     C*  Print one copy of Driver's Detail report(Custom CBI)
CBIe C*  Disable Driver's Detail report(Custom CBI)below.
CBId C*                    CALL 'OR663CL'
CBId C*                    PARM           $PCMD
CBId C*                    PARM '*DETAIL 'RTYPE   8
CBId C*                    PARM           $WHSEA
CBId C*                    PARM           RHRTID
CBId C*                    PARM           $RETRN
CBId C*                    PARM           $DEV   10
CBId C*                    PARM           $FORM  10
     C*  Print First copy of Summary report
409 ACSR                   CALL 'OR660CL'
409 ACSR                   PARM           $PCMD
409 ACSR                   PARM '*SUMMARY'RTYPE   8
409 ACSR                   PARM           $WHSEA
409 ACSR                   PARM           RHRTID
409 ACSR                   PARM           $RETRN
417 ACSR                   PARM           $DEV   10
417 ACSR                   PARM           $FORM  10
     C*  Print Second copy of Summary report
CBIgDC*R                   CALL 'OR660CL'
CBIgDC*R                   PARM           $PCMD
CBIgDC*R                   PARM '*SUMMARY'RTYPE   8
CDIgDC*R                   PARM           $WHSEA
CBIgDC*R                   PARM           RHRTID
CBIgDC*R                   PARM           $RETRN
CBIgDC*R                   PARM           $DEV   10
CBIgDC*R                   PARM           $FORM  10
     C*  Print Third copy of Summary report
CBId C**                   CALL 'OR660CL'
CBId C**                   PARM           $PCMD
CBId C**                   PARM '*SUMMARY'RTYPE   8
CBId C**                   PARM           $WHSEA
CBId C**                   PARM           RHRTID
CBId C**                   PARM           $RETRN
CBId C**                   PARM           $DEV   10
CBId C**                   PARM           $FORM  10
     C*
414cACSR                   CALL 'OR665CL'
414cACSR                   PARM           $PCMD
414cACSR                   PARM '*DETAIL 'RTYPE   8
414cACSR                   PARM           $WHSEA
414cACSR                   PARM           RHRTID
414cACSR                   PARM           $RETRN
CBI AC*  Print truck pallet report for Produce items only
CBI ACSR                   CALL 'OR662CL'
CBI ACSR                   PARM           $PCMD
CBI ACSR                   PARM '*DETAIL 'RTYPE   8
CBI ACSR                   PARM           $WHSEA
CBI ACSR                   PARM           RHRTID
CBI ACSR                   PARM           $RETRN
CBIpAC*  Print truck pallet detail report for Compartment X only
CBIpACSR                   CALL 'OR664CL'
CBIpACSR                   PARM           $PCMD
CBIpACSR                   PARM '*DETAIL 'RTYPE   8
CBIpACSR                   PARM           $WHSEA
CBIpACSR                   PARM           RHRTID
CBIpACSR                   PARM           $RETRN
CBIpAC*  Print truck pallet detail report for Comp X only 2nd copy
CBIpACSR                   CALL 'OR664CL'
CBIpACSR                   PARM           $PCMD
CBIpACSR                   PARM '*DETAIL 'RTYPE   8
CBIpACSR                   PARM           $WHSEA
CBIpACSR                   PARM           RHRTID
CBIpACSR                   PARM           $RETRN
     C*
415 ACSR                   MOVEL'OR660'   $TPGM     P
415 ACSR                   EXSR ZZEND
404 MCSR                   ENDIF
414aAC*
414aAC*     Phase 7 - Print Host pick Will Call Item Exceptions
414aAC*
414aACSR         PHASE7    TAG
414aACSR         $OTYPE    IFEQ 'W'
414aACSR         OPHPWC    ANDEQ'Y'
415 ACSR                   MOVEL'OR647'   $TPGM     P
415 ACSR                   EXSR ZZSTRT
414aACSR                   MOVE $PWHSE    $WHSEA
414aAC*     Host pick Will Call Auto Close transactions.
414aACSR                   CALL 'PT647'
414aACSR                   PARM *BLANKS   $PCMD
414aACSR                   PARM           $WHSEA
414aACSR                   PARM           RHRTID
414aACSR                   PARM           $RETRN
415bAD**                   CALL 'OR670'
CBIqACSR         RHTRUK    IFNE @WLCLL
CBIqACSR         RHTRUK    ANDNE@SDSVC
CBIqACSR         RHTRUK    ANDNE@DMGES
415bMCSR                   CALL 'OR770'
414aACSR                   PARM *BLANKS   $PCMD
414aACSR                   PARM '*DETAIL 'RTYPE   8
414aACSR                   PARM           $WHSEA
414aACSR                   PARM           RHRTID
414aACSR                   PARM           $RETRN
CBIqACSR                   ENDIF
     C*
415 ACSR                   MOVEL'OR647'   $TPGM     P
415 ACSR                   EXSR ZZEND
414aACSR                   ENDIF
415 ACSR         $PCMD2    IFEQ '*PCKPRNT'
415 ACSR                   MOVEL$PCMD2    $TPGM  10 P
415 ACSR                   EXSR ZZEND
415 ACSR                   ENDIF
CBIkAC*
CBIkAC*    Print Manager Ship List for Flagged Customers.
CBIkAC*
CBIkACSR         $PCMD2    IFEQ '*PCKPRNT'
CBIkACSR         $PCMD2    OREQ '*ALL    '
CBIqACSR         RHTRUK    IFNE @WLCLL
CBIqACSR         RHTRUK    ANDNE@SDSVC
CBIqACSR         RHTRUK    ANDNE@DMGES
CBIkACSR                   MOVEL'CK370'   $TPGM     P
CBIkACSR                   EXSR ZZSTRT
CBIkAC*
CBIkACSR                   CALL 'CK370CL'
CBIkACSR                   PARM           $WHSEA
CBIkACSR                   PARM           RHRTID
CBIkACSR                   PARM '*ALL   ' $CORD#  7
CBIkACSR                   PARM 'Y'       $CJOBQ  1
CBIkACSR                   PARM 'LP10    '$CDEV  10
CBIkACSR                   PARM '*STD    '$CFORM 10
CBIkAC*
CBIkACSR                   MOVEL'CK370'   $TPGM     P
CBIkACSR                   EXSR ZZEND
CBIqACSR                   ENDIF
CBIkACSR                   ENDIF
     C*
414bAC*    All processing completed successfully, set job status.
414bAC*
414bACSR                   MOVE '*DONE   'JOBOK
414bAC*
     C*
     CSR         SKIP1     TAG
     C*
     CSR                   MOVE '*PICK   '$PCMD
     C*
     CSR         ENDDO1    TAG
     CSR                   ENDDO
     C*
     C*  Mark batch as finished if no error occured.
     C*
     CSR         $RETRN    IFNE '*ERROR  '
     CSR         BFLAG     ANDEQ*ON
414bDC*R         $RETRN    IFEQ '*DONE   '
414bMCSR         JOBOK     IFEQ '*DONE   '
     CSR                   MOVE '9'       STAT
     CSR                   ENDIF
     CSR                   EXSR UPDCTL
     CSR                   ENDIF
     C*
     CSR         ENDPST    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  UPDCTL  Update batch control record. Lock it if necessary.
     C*
     CSR         UPDCTL    BEGSR
     C*
     C*   If this is for phase1 and a new batch ...
     C*
     CSR         STAT      IFEQ '0'
     CSR         $PCMD     ANDEQ'*PICK   '
     CSR         BFLAG     ANDEQ*OFF
     CSR         $PCMD2    OREQ '*REBUILD'
     CSR         BFLAG     ANDEQ*OFF
414bACSR         STAT      ANDEQ'0'
     CSR         $PCMD2    OREQ '*PCKPRNT'
     CSR         BFLAG     ANDEQ*OFF
414bACSR         STAT      ANDEQ'0'
     C*
     C*     - Get new batch number.
     C*
     CSR                   CALL 'PIRBAT#'
     CSR                   PARM           $PBAT
     C*
     C*     - Create batch control record.
     C*
     CSR                   Z-ADD$PBAT     BTBAT#
     CSR                   Z-ADD$PWHSE    BTWHSE
     CSR                   MOVE $PTYPE    BTTYPE
     CSR                   MOVE STAT      BTSTAT
     CSR                   MOVE $PRTID    BTRTE
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    BTSTRD
     CSR                   TIME           BTSTRT
     CSR                   MOVE #USER     BTSTRB
     CSR                   WRITEBTREC
     CSR                   ELSE
     C*
     C*   Otherwise, update control record with current phase.
     C*     - If finished then mark with time stamp.
     C*
     CSR         $PBAT     CHAINBTREC                79
     CSR                   MOVE STAT      BTSTAT
     CSR                   MOVE RHRTID    BTRTE
     CSR         STAT      IFEQ '9'
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    BTENDD
     CSR                   TIME           BTENDT
     CSR                   END
     CSR                   UPDATBTREC
     CSR                   END
     C*
     C*   Grab control record to let others know a batch is being
     C*   processed unless, of course, we are finished.
     C*
     CSR         STAT      IFNE '9'
     CSR         $PBAT     CHAINBTREC                79
     CSR                   END
     CSR                   MOVE *ON       BFLAG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  UPDRTE  Update route header record.
     C*
     CSR         UPDRTE    BEGSR
     C*
     C*   Get route header and update.
     C*
     CSR         KEYRH     CHAINRTEHED               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE RSTAT     RHSTAT
414bDC*R                   Z-ADD$PBAT     RHPBAT
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    RHSTSD
     CSR                   TIME           RHSTST
     CSR                   SELEC
     CSR         RSTAT     WHEQ '3'
414bACSR                   Z-ADD$PBAT     RHPBAT
     CSR                   Z-ADDRHSTSD    RHBLDD
     CSR                   Z-ADDRHSTST    RHBLDT
CBIlAC*    Clear Inuse flag for route.
CBIlACSR         $OTYPE    IFEQ ' '
CBIlACSR                   MOVE *ZEROS    RHSHPD
CBIlACSR                   ENDIF
     CSR         RSTAT     WHEQ '4'
     CSR                   Z-ADDRHSTSD    RHPRTD
     CSR                   Z-ADDRHSTST    RHPRTT
CBIlAC*    Clear Inuse flag for route.
CBIlACSR         $OTYPE    IFEQ ' '
CBIlACSR                   MOVE *ZEROS    RHSHPD
CBIlACSR                   ENDIF
     CSR                   ENDSL
     CSR                   UPDATRHREC
     CSR                   ENDIF
     C*
     CSR                   ENDSR
415 AC*----------------------------------------------------------------
415 AC*
415 AC*  ZZEND   End timer
415 AC*
415 ACSR         ZZEND     BEGSR
     CSR         $OTYPE    CABNE' '       ENDZZE
     C*
     CSR                   Z-ADD$PWHSE    RTTWHS
     CSR                   MOVE RHRTID    RTTRID
     C*
     CSR                   SELEC
     CSR         $TPGM     WHEQ '*ALOCBLD'
     CSR         $TPGM     OREQ '*PCKPRNT'
     CSR                   MOVE SVPGM1    RTTPGM
     CSR                   Z-ADDSVDTE1    RTTSDT
     CSR                   Z-ADDSVTIM1    RTTSTM
     C*
     CSR                   OTHER
     CSR                   MOVE SVPGM2    RTTPGM
     CSR                   Z-ADDSVDTE2    RTTSDT
     CSR                   Z-ADDSVTIM2    RTTSTM
     C*
     CSR                   ENDSL
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    RTTEDT
     CSR                   TIME           RTTETM
     C*
     CSR                   Z-ADDRTTSDT    RTTRDT
     C*
     C*      If start time is less than 5:00am
     C*       Then subtract 1 from the day for report date.
     C*
     CSR         RTTSTM    IFLT 50000
     CSR                   MOVE '*CMDCMD '$CVCMD
     CSR                   MOVE RTTSDT    $CVD8I
     CSR                   MOVE '*SUBDAYS'$CVDR1
     CSR                   Z-ADD1         $CVVL1
     CSR                   CALL @CLCDR
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    RTTRDT
     CSR                   ENDIF
     C*
     CSR                   CALL 'CALCTIME'
     CSR                   PARM '*MINUTES'$CVCMD
     CSR                   PARM           RTTSDT
     CSR                   PARM           RTTSTM
     CSR                   PARM           RTTEDT
     CSR                   PARM           RTTETM
     CSR                   PARM 0         RTTMIN
     C*
     CSR                   MOVE #JOB      RTTJOB
     CSR                   MOVE #USER     RTTUSR
     CSR                   MOVE #JOBN     RTTJB#
     C*
     CSR                   WRITERTTREC
     C*
     CSR         ENDZZE    ENDSR
CBIlAC*----------------------------------------------------------------
CBIlAC*
CBIlAC*  ZZIUSE   Clear Inuse flag for route.
CBIlAC*
CBIlACSR         ZZIUSE    BEGSR
CBIlAC*
CBIlACSR                   CALL 'CHKIUSE'
CBIlACSR                   PARM '*CLEAR  '$ICMD   8
CBIlACSR                   PARM $PWHSE    $IWHSE  30
CBIlACSR                   PARM $PRTID    $IRTID  5
CBIlACSR                   PARM *BLANKS   $IRTN   8
CBIlAC*
CBIlACSR                   ENDSR
415 AC*----------------------------------------------------------------
415 AC*
415 AC*  ZZSTRT  Start timer
415 AC*
415 ACSR         ZZSTRT    BEGSR
     CSR         $OTYPE    CABNE' '       ENDZZS
     C*
     CSR                   SELEC
     CSR         $TPGM     WHEQ '*ALOCBLD'
     CSR         $TPGM     OREQ '*PCKPRNT'
     CSR                   MOVE $TPGM     SVPGM1 10
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    SVDTE1  80
     CSR                   TIME           SVTIM1  60
     C*
     CSR                   OTHER
     CSR                   MOVE $TPGM     SVPGM2 10
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    SVDTE2  80
     CSR                   TIME           SVTIM2  60
     C*
     CSR                   ENDSL
     C*
     CSR         ENDZZS    ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCSBF  Clear message subfile.
     C*
     CSR         ZMCSBF    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
223 ACSR                   PARM $PPRG     #PGMQ2 10
223 DC**                   PARM 'OR600CL' #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   TF50020  Copying authorized orders to picking files.
     C*
     CSR         ZM20      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'TF50020' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50021  Allocating stock from slots.
     C*
     CSR         ZM21      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50021' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50022  Building pallets.
     C*
     CSR         ZM22      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50022' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50023  Picking stock from slots.
     C*
     CSR         ZM23      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50023' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50024  Printing labels.
     C*
     CSR         ZM24      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50024' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50025  Print loading sheet.
     C*
     CSR         ZM25      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50025' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50026  Print pallet summary.
     C*
     CSR         ZM26      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50026' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
223 AC*----------------------------------------------------------------
223 AC*     RH12001  Invalid truck number.
223 AC*
223 ACSR         ZM2001    BEGSR
223 ACSR                   MOVE 'RH12001' #MSGID
223 ACSR                   MOVE '*DIAG  ' #MSGTP
223 ACSR                   MOVEAERRMSG    $MD,1
223 ACSR                   EXSR ZMSMSG
223 ACSR                   MOVE #MSGK     $PMSG
223 ACSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  COMPILE TIME TABLES
     O*
**  Screen headings
         ** Unknown Batch Type **
*PICK    Pick Customer Orders - All Routes
*PICK1   Pick Customer Orders - Single Route
*TFRPICK Pick Transfer Orders - All Routes
*TFRPCK1 Pick Transfer Orders - Single Route
*WCPICK  Pick Will Call Orders - All Routes
*WCPICK1 Pick Will Call Orders - Single Route
