      /copy *libl/qcopysrc,hspecs
     *----------------------------------------------------------------
     *   Copyright (C) 1993 BFC Software, Inc. - All Rights Reserved
     *   BFC Software, Inc.
     *   799 Roosevelt Rd.  Bldg 6, Suite 108
     *   Glen Ellyn, IL  60137
     *   (708) 790-8383
     *----------------------------------------------------------------
     *
     *  SCD321    Slots with Check Digit Report.
     *  07 January, 2001
     *  Kenneth Elder
     *
     *  Revisions:
     *
417 A*    04/15/04  DAS  4.17
     *      - Added parm $PHEAD.
     *      - Added $PHEAD to output headers.
510 A*    10/04/07  RBD  5.10
     *      - Enh: Convert to ILE.
     *        Revise to look at new fields in SCD321, generated by
     *        new file SCD323A.
640a *    06/21/12  LMC  6.40a
     *      - Enh: Allow for 5 pos check digit if options chkdgt field
     *        OP5NUM = 'Y'.
640b *    06/27/12  LMC  6.40b
     *      - Enh: Allow for 9 pos check digit if options chkdgt field
     *        OP5NUM = '9'. This field is now barcode size
640c *    07/10/12  LMC  6.40c
     *      - Enh: Need to print leading zeros, so have to condition
     *        the fields to not print if there is no slot display
     *
     *----------------------------------------------------------------
     *  Indicator usage
     *
     *  40-44     Non display on check digit
     *  79        Not on file/End of file indicator
     *  90        Overflow Indicator
     *  9X        Top of page and level X continues.
     *
     *----------------------------------------------------------------
     *  File Specs
     *
     Fscd321    ip   e           k disk
     Fwarehs    if   e           k disk
640aAFoptions   if   e           k disk
     Fscd321pr  o    e             printer oflind(*in90)
     *----------------------------------------------------------------
     *
     *  Table and array
     *
     *                   RPD     1   3 30
     D reck            s              7  0 dim(3)
     *----------------------------------------------------------------
     *  General Data structure.
     *
     D ds0             ds
     D  c0slot                 1     12
     D  c0pick                13     13
640aDD* c0dgt                 14     16  0
640aMD  c0dgt                 14     22  0
640aaD  c0dgt1                14     16  0
640aaD  c0dgt2                17     19  0
640aaD  c0dgt3                20     22  0
640aAD  c0dgt5                14     18  0
     *  Data structure for column 1.
     *
     D ds1             ds                  occurs(50)
     D  c1slot                 1     12
     D  c1pick                13     13
640aDD* c1dgt                 14     16  0
640aMD  c1dgt                 14     22  0
640aAD  c1dgt1                14     16  0
640aAD  c1dgt2                17     19  0
640aAD  c1dgt3                20     22  0
640aAD  c1dgt5                14     18  0
     *
     *  Data structure for column 2.
     *
     D ds2             ds                  occurs(50)
     D  c2slot                 1     12
     D  c2pick                13     13
640aDD* c2dgt                 14     16  0
640aMD  c2dgt                 14     22  0
640aAD  c2dgt1                14     16  0
640aAD  c2dgt2                17     19  0
640aAD  c2dgt3                20     22  0
640aAD  c2dgt5                14     18  0
     *
     *  Data structure for column 3.
     *
     D ds3             ds                  occurs(50)
     D  c3slot                 1     12
     D  c3pick                13     13
640aDD* c3dgt                 14     16  0
640aMD  c3dgt                 14     22  0
640aAD  c3dgt1                14     16  0
640aAD  c3dgt2                17     19  0
640aAD  c3dgt3                20     22  0
640aAD  c3dgt5                14     18  0
     *  Data structure for column 4.
     *
     D ds4             ds                  occurs(50)
     D  c4slot                 1     12
     D  c4pick                13     13
640aDD* c4dgt                 14     16  0
640aMD  c4dgt                 14     22  0
640aAD  c4dgt1                14     16  0
640aAD  c4dgt2                17     19  0
640aAD  c4dgt3                20     22  0
640aAD  c4dgt5                14     18  0
     *
     *  Data structure for column 5.
     *
     D ds5             ds                  occurs(50)
     D  c5slot                 1     12
     D  c5pick                13     13
     D  c5dgt                 14     16  0
640aAD  c5dgt5                14     18  0
     *----------------------------------------------------------------
     *
     D $perm           ds
     D  xxerm                  1     60
     D  $pmsg                  1      4
640aA*----------------------------------------------------------------
640aA*  *CHKDGT  -  Check digit options.
640aA*----------------------------------------------------------------
640aA*
640aA* Fields
640aA*
640aA*    OPCOD#  -  Number of check digit codes per slot (1,2,3)
640aA*    OPDGT#  -  Number of digits per code  (2,3)
640aA*    OPIDC1  -  Code 1 identifier
640aA*    OPIDC2  -  Code 2 identifier
640aA*    OPUNU2  -  Unused
640aA*    OPIDC3  -  Code 3 identifier
640aA*    OPUNU3  -  Unused
640aA*    OPIDD1  -  Digit 1 identifier
640aA*    OPIDD2  -  Digit 2 identifier
640aA*    OPIDD3  -  Digit 3 identifier
640aA*    OPRCOD  -  Current code to read (S=Single,R=Random)
640aA*    OPRCD1  -  Use code 1 for current reading (Y,N)
640aA*    OPRCD2  -  Use code 2 for current reading (Y,N)
640aA*    OPRCD3  -  Use code 3 for current reading (Y,N)
640aA*    OPRORD  -  Current read order (S=Single, R=Random)
640aA*    OPRLCR  -  Use read order Left/Center/Right (Y,N)
640aA*    OPRRCL  -  Use read order Right/Center/Left (Y,N)
640aA*    OPRLRC  -  Use read order Left/Right/Center (Y,N)
640aA*    OPRRLC  -  Use read order Right/Left/Center (Y,N)
640aA*    OPRCLR  -  Use read order Cener/Left/Right  (Y,N)
640aA*    OPRCRL  -  Use read order Cener/Right/Left  (Y,N)
640aA*    OPREAD  -  Number of digits user reads for codes
640aA*               less than 100.
640bD*    OP5NUM  -  Using 5 numeric check digit
640bM*    OP5NUM  -  barcode size
640aA*
640aA* Data structure
640aA*
640aAD opdata          ds
640aAD  opcod#                 1      1  0
640aAD  opdgt#                 2      2  0
640aAD  opidc1                 3      8
640aAD  opidc2                 9     14
640aAD  opunu2                15     16
640aAD  opidc3                17     22
640aAD  opunu3                23     24
640aAD  opidd1                25     30
640aAD  opidd2                31     36
640aAD  opidd3                37     42
640aAD  oprcod                43     43
640aAD  oprcd1                44     44
640aAD  oprcd2                45     45
640aAD  oprcd3                46     46
640aAD  oprord                47     47
640aAD  oprlcr                48     48
640aAD  oprrcl                49     49
640aAD  oprlrc                50     50
640aAD  oprrlc                51     51
640aAD  oprclr                52     52
640aAD  oprcrl                53     53
640aAD  opread                54     54  0
640aAD  opreada               54     54
640aAD  op5num                55     55
640aAD  optend               117    117
640aA*----------------------------------------------------------------
640aA*  Program info data structure
640aA*
640aAD                sds
640aAD  #prog            *proc
640aAD  #job                 244    253
640aAD  #user                254    263
640aAD  #jobn                264    269
640aAD  #jobdt               276    281  0
640aAD  #jobtm               282    287  0
     *----------------------------------------------------------------
     *
     *  Variables
     D $llen           s              3  0
     D $lstr           s             60
     D $plen           s              3  0
     D $pstr           s             60
     D count           s              3  0
     D c1              s              3  0
     D c2              s              3  0
     D c3              s              3  0
     D c4              s              3  0
     D c5              s              3  0
640aAD ck5             s              5
640aAD ck9             s              9
     D first           s              1
     D l               s              1  0
     D m               s                   like(l)
     D reccol          s              3  0
     D recpag          s              3  0
640aAD recpag1         s              3  0
     D type            s              5
     D x               s              3  0
     *----------------------------------------------------------------
     Ioqrec
510 DI**                                        scdwhd        l1
510 MI                                          swkwhd        l1
417 A*----------------------------------------------------------------
417 A*  Let the show begin .....
417 A*
417 AC     *entry        plist
417 AC                   parm                    $phead           50
417 A*
417 A*  Main line
417 A*
640aA
     *----------------------------------------------------------------
     *
     *  Report Heading
     *
     *
     *  Start new page if one of following happened.
     *     - Level break occurred.
     *     - Filled page.
     *
     C                   if        *inl1  or
640aDC*                            count = recpag
640bDC*                            count = recpag and op5num <> 'Y'
640bMC                             count = recpag and op5num <> '5'
640aAc                                    or
640bDC*                            count = recpag1 and op5num = 'Y'
640bMC                             count = recpag1 and op5num = '5'
     C                   exsr      zrfrmt
     C                   exsr      zrhead
     C                   endif
     *
     *  Init total levels
     *
     *
     *  Level 1 break - Dept
     *
     C                   if        *inl1
     C                   eval      l = 1
     C                   exsr      zrzero
     C                   endif
     *
     *----------------------------------------------------------------
     *
     * Detail Calcs
     *
510 DC**                 move      scddgt        c0dgt
510 MC                   move      swkdgt        c0dgt
640bDc*                  if        op5num = 'Y'
640bMc                   if        op5num = '5'
640aAc                   move      swkdgt        ck9
640aAc                   eval      ck5 = %subst(ck9:1:3) + %subst(ck9:8:2)
640aAC                   move      ck5           c0dgt5
640aAc                   endif
     C                   eval      c0pick = slpick
510 DC**                 move      scddsp        c0slot
510 MC                   move      swkdsp        c0slot
     *
     *  Store info. from first 50 records into data structure DS1.
     *  Next 50 records into DS2 and then into DS3, and so on to DS9.
     *
     C                   select
     C                   when      c1 <= reccol
     C     c1            occur     ds1
     C                   eval      ds1 = ds0
     C                   add       1             c1
     *
     C                   when      c2 <= reccol
     C     c2            occur     ds2
     C                   eval      ds2 = ds0
     C                   add       1             c2
     *
     C                   when      c3 <= reccol
     C     c3            occur     ds3
     C                   eval      ds3 = ds0
     C                   add       1             c3
     *
     C                   when      c4 <= reccol
     C     c4            occur     ds4
     C                   eval      ds4 = ds0
     C                   add       1             c4
     *
     C                   when      c5 <= reccol
     C     c5            occur     ds5
     C                   eval      ds5 = ds0
     C                   add       1             c5
     C                   endsl
     *
     C                   add       1             count
     *
     *
     *  Accumulate totals
     *                    ADD  1         CLS,1
     *
     *  Increment record counters
     *
     C                   add       1             reck(1)
     *
     *  Set off top-of-page indicators
     *
     C                   eval      *in91 = *off
     *----------------------------------------------------------------
     *
     * Department Totals
     *
     CL1                 eval      l = 1
     CL1                 exsr      zrroll
     *
     CL1                 if        reck(l) > 0
     **                   WRITESKIP1
     CL1                 exsr      zrtotl
     CL1                 endif
     *----------------------------------------------------------------
     *
     * REPORT TOTALS
     *
     CLr                 eval      l = 3
     *
     CLr                 exsr      zrdetl
     CLr                 if        reck(l) > 0
     CLr                 write     skip1
     CLr                 write     foot1
     CLr                 endif
     *----------------------------------------------------------------
     *
     *          SUBROUTINES IN ALPHABETICAL ORDER
     *
     *----------------------------------------------------------------
     *
     *  *INZSR  Initialization subrotine
     *
     C     *inzsr        begsr
     *
     *  Key List for Slotdgt file
     *
     C     sltdky        klist
510 DC**                 kfld                    scdwhs
510 DC**                 kfld                    scdwhd
510 DC**                 kfld                    scddsp
510 MC                   kfld                    swkwhs
510 MC                   kfld                    swkwhd
510 MC                   kfld                    swkdsp
     *
     C                   time                    time
     C                   eval      first = *on
     C                   eval      count = 0
     C                   eval      l = 3
     C                   eval      x = 1
     C                   eval      c1 = 1
     C                   eval      c2 = 1
     C                   eval      c3 = 1
     C                   eval      c4 = 1
     C                   eval      c5 = 1
     C                   eval      reccol = 50
640adC*                  eval      recpag = 250
640aMC                   eval      recpag = 200
640aAC                   eval      recpag1= 250
     C                   exsr      zrcler
     C                   exsr      zrzero
640aAC                   call      'GETWHSE'
640aAC                   parm                    #user
640aAC                   parm      0             #whse             3 0
640aA * get the options data to determine if 5 pos check digit is used
640aA /free
640aA   opcode = '*CHKDGT ';
640aA   chain (#whse: opcode) options;
640aA   if not %found(options);
640aA     op5num = 'N';
640aA   endif;
640aA /end-free
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrfrmt        begsr
     *
     *   Get warehouse description.
     *
     C                   eval      whse = *blanks
     C                   eval      $pstr = *blanks
510 DC**   scdwhs        chain     warehs                             79
510 MC     swkwhs        chain     warehs                             79
     C                   if        not *in79
     C                   movel     whdesc        $pstr
     C                   else
     C                   eval      $pstr = *blanks
     C                   endif
     C                   eval      $plen = 30
     *
     *   Center warehouse description.
     *
     C                   call      'CENTER'
     C                   parm                    $pstr
     C                   parm                    $plen
     C                   movel     $pstr         whse
     *
     *  Format Dept/Section/Desig
     *
     C                   if        slstyp = 'P'
     C                   eval      type = 'PIR  '
     C                   else
     C                   if        slstyp = 'F'
     C                   eval      type = 'Fixed'
     C                   else
     C                   eval      type = '*None'
     C                   endif
     C                   endif
     C                   eval      p#desc = *blanks
510 DC**   'Dept:'       cat       scdwhd:1      p#desc
510 MC     'Dept:'       cat       swkwhd:1      p#desc
     C                   movel     p#desc        $lstr
     C                   eval      $llen = 40
     C                   call      'CENTER'
     C                   parm                    $lstr
     C                   parm                    $llen
     C                   movel     $lstr         p#desc
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrhead        begsr
     *
     *  Print previous page detail lines.
     *
     C                   if        reck(l) > 0
     C                   exsr      zrdetl
     C                   eval      count = 0
     C                   endif
     *
     C                   if        not *inl1
     C                   eval      *in91 = *on
     C                   endif
     *
     C                   eval      *in90 = *off
     *
     C                   write     head1
     C                   write     head2
640bDc*                  if        op5num <> 'Y'
640bMc                   if        op5num <> '5'
     C                   write     columns
640aAc                   else
640aAC                   write     columns2
640aAc                   endif
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrcler        begsr
     *
     *   Initialize all data structures.
     *
     C                   clear                   c0dgt
     C                   clear                   c0pick
     C                   clear                   c0slot
     C     1             do        reccol        x
     C     x             occur     ds1
     C                   eval      ds1 = ds0
     C     x             occur     ds2
     C                   eval      ds2 = ds0
     C     x             occur     ds3
     C                   eval      ds3 = ds0
     C     x             occur     ds4
     C                   eval      ds4 = ds0
     C     x             occur     ds5
     C                   eval      ds5 = ds0
     C                   enddo
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrdetl        begsr
     *  Print detail line.
     C                   clear                   c0dgt
     C                   clear                   c0pick
     C                   clear                   c0slot
     C     1             do        reccol        x
     C     x             occur     ds1
     C     x             occur     ds2
     C     x             occur     ds3
     C     x             occur     ds4
     C     x             occur     ds5
640bDc*                  if        op5num <> 'Y'
640bMc                   if        op5num <> '5'
640cAc                   if        c1slot = ' '
640cAc                   eval      *in40 = *on
640cAc                   else
640cAc                   eval      *in40 = *off
640cAc                   endif
640cAc                   if        c2slot = ' '
640cAc                   eval      *in41 = *on
640cAc                   else
640cAc                   eval      *in41 = *off
640cAc                   endif
640cAc                   if        c3slot = ' '
640cAc                   eval      *in42 = *on
640cAc                   else
640cAc                   eval      *in42 = *off
640cAc                   endif
640cAc                   if        c4slot = ' '
640cAc                   eval      *in43 = *on
640cAc                   else
640cAc                   eval      *in43 = *off
640cAc                   endif
640cAc                   if        c5slot = ' '
640cAc                   eval      *in44 = *on
640cAc                   else
640cAc                   eval      *in44 = *off
640cAc                   endif
     C                   write     detail1
640aAc                   else
640aAC                   write     detail2
640aAc                   endif
     C                   eval      ds1 = ds0
     C                   eval      ds2 = ds0
     C                   eval      ds3 = ds0
     C                   eval      ds4 = ds0
     C                   eval      ds5 = ds0
     C                   enddo
     *
     *  Initialize record counters for each columns.
     *
     C                   eval      c1 = 1
     C                   eval      c2 = 1
     C                   eval      c3 = 1
     C                   eval      c4 = 1
     C                   eval      c5 = 1
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrroll        begsr
     *
     C     l             add       1             m
     *
     *                    ADD  1         LVLK,M
     C                   add       reck(l)       reck(m)
     *
     *                    ADD  CLS,L     CLS,M
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrtotl        begsr
     *
     *                    Z-ADDCLS,L     T#CLS
     *                    MOVE TYPE      T#DESC
     *
     *                    MOVE RPD,L     $RPD
     C                   if        l = 1
     *                    WRITETOTAL1
     C                   endif
     *
     C                   if        l = 2
     *                    WRITETOTAL2
     C                   endif
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     C     zrzero        begsr
     *
     *                    Z-ADD0         LVLK,L
     C                   eval      reck(l) = 0
     *
     *                    Z-ADD0         CLS,L
     *
     C                   endsr
     *----------------------------------------------------------------
     *
     * Compile time tables
     *
