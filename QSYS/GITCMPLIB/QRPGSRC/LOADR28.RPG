     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  LOADR28   Route Comment History - View - Loader Module
     F*  September 7, 2007
     F*  Jose Duque
     F*
     F*
     F*  Revisions
     F*
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        POSITION CURSOR
     F*  21 - 29   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  79        CHAIN INDICATOR
     F*  90        PROTECT INPUT FIELDS FOR DELETE DISPLAY
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FLOAD28FMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
     F                                        MSGK  KSFILE MSGREC
     FRTECOMTYIF  E           K        DISK
     FLDRCOMC IF  E           K        DISK
     F*
     FPIRUSER1IF  E           K        DISK
     FPIRUSER IF  E           K        DISK
     F            USREC                             KRENAMEUSREC2
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    CMDLN   1   1 79
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        4  11 $KCODE
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I                                        1  50 DSUKEY
     I I            0                         1   30LCHWHS
     I                                        4   8 LCHRTE
     I                                       10  14 LCHRTI
     I*----------------------------------------------------------------
.    I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*
     I*  Constants
     I*
     I              'Rte Delete'          C         DELETE
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*
     I*  Data structures for date manipulation
     I*
     I            DS
     I                                        1   80LOGIN
     I                                        1   20CCIN
     I                                        3   40YYIN
     I                                        5   60MMIN
     I                                        7   80DDIN
     I            DS
     I                                        1   60LOGOUT
     I                                        1   20MMOUT
     I                                        3   40DDOUT
     I                                        5   60YYOUT
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $FDATE  6
     C                     PARM           $TDATE  6
     C                     PARM           $RTNCD  8
      *
     C*
     C*  Define keys
     C*
     C*     USERCODE
     C*
     C           USKEY     KLIST
     C                     KFLD           #USER
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     MOVE *BLANKS   $RTNCD
     C                     EXSR ZZINZ2
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C*
     C*>         $RTNCD    IFEQ '*EXIT   '
     C*>         $RTNCD    OREQ '*CANCEL '
     C*>                   SETON                     LR
     C*>                   END
     C                     SETON                     LR
     C*>                   RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*----------------------------------------------------------------
     C           DSPSCR    BEGSR
     C*----------------------------------------------------------------
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   READ DSPSFC                   50
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*  Screen 01 initialization
     C*----------------------------------------------------------------
     CSR         SCR01I    BEGSR
     C*----------------------------------------------------------------
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*  SC1  -  Screen 1
     C*----------------------------------------------------------------
     CSR         SC1       BEGSR
     C*----------------------------------------------------------------
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  *INZSR  Initialization subrotine
     C*----------------------------------------------------------------
     CSR         *INZSR    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*
     C*----------------------------------------------------------------
     C*  CMD01    Screen 1 command key routine
     C*----------------------------------------------------------------
     CSR         CMD01     BEGSR
     C*----------------------------------------------------------------
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*
     C*  TEST FOR CMD21 - PRINT REPORT
     C*
     CSR         *INKV     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*F21    '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ENT01    Screen 1 enter key routine
     C*----------------------------------------------------------------
     CSR         ENT01     BEGSR
     C*----------------------------------------------------------------
     C*
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         ERROR     CABEQ'1'       ENT01E
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     CSR         ENT01E    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*----------------------------------------------------------------
     CSR         FGTWAY    BEGSR
     C*----------------------------------------------------------------
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     C           $POCMD    CASEQ'*TOP'    ZZPOS2
     C           $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FGET     Get record using file with unique key
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*----------------------------------------------------------------
     CSR         FGET      BEGSR
     C*----------------------------------------------------------------
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FGETN    Get next record
     C*----------------------------------------------------------------
     CSR         FGETN     BEGSR
     C*----------------------------------------------------------------
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
      *
     C                     Z-ADDLCHSTD    LOGIN
     C                     Z-ADDMMIN      MMOUT
     C                     Z-ADDDDIN      DDOUT
     C                     Z-ADDYYIN      YYOUT
     C                     Z-ADDLOGOUT    W1DATE
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FGETP    Get previous record
     C*----------------------------------------------------------------
     CSR         FGETP     BEGSR
     C*----------------------------------------------------------------
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FPOS2    Position to record
     C*----------------------------------------------------------------
     CSR         FPOS2     BEGSR
     C*----------------------------------------------------------------
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLLCTREC
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  FPOS2U   Position to record using unique key
     C*----------------------------------------------------------------
     CSR         FPOS2U    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  INZPAR   Initialize parameters
     C*----------------------------------------------------------------
     CSR         INZPAR    BEGSR
     C*----------------------------------------------------------------
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  PAG01    Screen 1 page routines
     C*----------------------------------------------------------------
     CSR         PAG01     BEGSR
     C*----------------------------------------------------------------
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE '1'       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG01E
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  PAG1FW   Let's see that next page of records
     C*----------------------------------------------------------------
     CSR         PAG1FW    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFAC
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     C                     EXSR SFLADD
      *
     CSR         P         IFGE 10
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFAC    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF      ENDSR
     C*
     C*----------------------------------------------------------------
     C*  PAG1BK   Let's see the previous page
     C*----------------------------------------------------------------
     CSR         PAG1BK    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     CSR         DSPLYD    ADD  10        GOBACK  20
     CSR         BOT       IFEQ '1'
     CSR         GOBACK    IFEQ 10
     CSR                   MOVE '1'       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ROLL01   Screen 1 roll up/down routine
     C*----------------------------------------------------------------
     CSR         ROLL01    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  SFLADD   Add record to subfile
     C*----------------------------------------------------------------
     C           SFLADD    BEGSR
     C*----------------------------------------------------------------
     C*
     C           RECNO     IFLT 11
     C                     ADD  1         RECNO
     C                     Z-ADDRECNO     Y       30
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     C                     MOVE $POFKY    FKEY,Y
     C                     MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     C                     EXSR ZZFILL
     C*>         *IN22     IFEQ *ON
     C*>                   ADD  1         RECNO
     C*>                   MOVE $POFKY    FKEY,Y
     C*>                   MOVE $POUKY    UKEY,Y
     C                     WRITEDSPSFL
     C*>                   ELSE
     C*>                   SUB  1         RECNO
     C*>                   ENDIF
      *
     C                     END
     C                     ENDSR
     C*
     C*----------------------------------------------------------------
     C*  SFLCLR   Clear display subfile
     C*----------------------------------------------------------------
     CSR         SFLCLR    BEGSR
     C*----------------------------------------------------------------
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE '0'       *IN01
     CSR                   WRITEDSPSFC
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  SFLDSP   Display subfile
     C*----------------------------------------------------------------
     CSR         SFLDSP    BEGSR
     C*----------------------------------------------------------------
     C*
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITECMDREC
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN02
     CSR                   WRITEPOSTNREC
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE '1'
     CSR         1         CHAINDSPSFL               79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '1'       *IN20
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*    ZMCMSG  Clear message record subfile
     C*----------------------------------------------------------------
     CSR         ZMCMSG    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE '0'       *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMDMSG  Display message record subfile
     C*----------------------------------------------------------------
     CSR         ZMDMSG    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   WRITEMSGCLR
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMIMSG  Initialization necessary for message subfile
     C*----------------------------------------------------------------
     CSR         ZMIMSG    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMPMSG  Add message record to subfile
     C*----------------------------------------------------------------
     CSR         ZMPMSG    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMQMSG  Add message record to subfile from program queue
     C*----------------------------------------------------------------
     CSR         ZMQMSG    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZSCLR   Clear screen
     C*----------------------------------------------------------------
     CSR         ZSCLR     BEGSR
     C*----------------------------------------------------------------
     C*
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*    ZMSMSG  Send program message to a different program msgq
     C*----------------------------------------------------------------
     CSR         ZMSMSG    BEGSR
     C*----------------------------------------------------------------
     CSR         $MSGF     IFEQ *BLANKS
     C*
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*      0105
     C*----------------------------------------------------------------
     CSR         ZM0105    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*----------------------------------------------------------------
     CSR         ZM0106    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*----------------------------------------------------------------
     CSR         ZM9905    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZCMD    Process non-standard function keys
     C*----------------------------------------------------------------
     CSR         ZZCMD     BEGSR
     C*----------------------------------------------------------------
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ '1'
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      IFEQ 5
     CSR         COL#      ANDGE48
     CSR                   MOVE '1'       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    PTINP1
     CSR                   END
     CSR                   ELSE
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE '1'       ERROR
     CSR                   EXSR ZM9905
     CSR                   END
     CSR                   GOTO ENDCM1
     CSR                   END
     C*
     C*  Test for F9 - Display all warehouses
     C*
     CSR         *INKI     IFEQ '1'
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*F9     '$RTNCD
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     CSR         ENDCM1    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZFGET   Get record with unique key.
     C*----------------------------------------------------------------
     CSR         ZZFGET    BEGSR
     C*----------------------------------------------------------------
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     CSR         FILUKY    CHAINLCTREC               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     C*R         FILUKY    CHAINLCTREC               79
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZFGTN   Get next record
     C*----------------------------------------------------------------
     CSR         ZZFGTN    BEGSR
     C*----------------------------------------------------------------
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ LCTREC                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READELCTREC                   79
     C*
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZFGTP   Get previous record
     C*----------------------------------------------------------------
     C           ZZFGTP    BEGSR
     C*----------------------------------------------------------------
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPLCTREC                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPELCTREC                   79
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZFILL   Fill display line.
     C*----------------------------------------------------------------
     C           ZZFILL    BEGSR
     C*----------------------------------------------------------------
     C*
     C           *IN18     IFEQ *OFF
     C                     SETON                     18
     C                     ENDIF
      *
     C*>         LCHRTE    IFEQ SAVRTE
     C*          LCHTRL    ANDEQSAVTRL
     C*          LCDTYP    ANDEQSAVTYP
     C*                    SETOF                     22
     C*>                   ELSE
     C                     MOVE LCHRTE    W1RTE#
     C                     MOVE LCHTRL    W1TRL#
     C*--->                MOVE DOOR#     W1DOOR
     C*--->                Z-ADDLCHSTT    W1TIME
     C*--->                MOVELCOMMNT    W1RCOD
     C                     MOVELLCHRTE    SAVRTE
     C                     MOVELLCHTRL    SAVTRL
     C                     MOVELLCDTYP    SAVTYP
     C                     MOVE COMYN     W1CMYN
     C*>                   SETON                     22
      *
     C                     MOVE *BLANKS   W1RCOD
      *
     C*    Get reason code description.
     C           LCDTYP    IFNE '5'
     C           TYPKEY    CHAINLDRCOMC              78
     C           *IN78     IFEQ *OFF
     C                     MOVELLCSDSC    W1RCOD
     C                     ENDIF
     C                     ELSE
     C                     MOVEL'OTHER'   W1RCOD
     C                     ENDIF
      *
     C                     SELEC
     C           LCDTYP    WHEQ '1'
     C                     MOVEL'TRAN'    W1TYPE
      *
     C           LCDTYP    WHEQ '2'
     C                     MOVEL'TRLR'    W1TYPE
      *
     C           LCDTYP    WHEQ '3'
     C                     MOVEL'LODR'    W1TYPE
      *
     C           LCDTYP    WHEQ '4'
     C                     MOVEL'LDEL'    W1TYPE
      *
     C                     OTHER
     C                     MOVEL'OTHR'    W1TYPE
     C                     ENDSL
      *
     C           LCHEMP    CHAINPIRUSER1             79
     C           *IN79     IFEQ *OFF
     C                     MOVELUSCODE    W1USER
     C                     ELSE
     C                     MOVE *BLANKS   W1USER
     C                     ENDIF
     C*>1ST IF ABOVE       ENDIF
      *
     C*>         LCHRTE    IFNE SAVRTE
     C*>         LCHTRL    ANDNESAVTRL
     C*>                   MOVELLCHRTE    SAVRTE
     C*>                   MOVELLCHTRL    SAVTRL
     C*>                   SETON                     22
     C*>                   ELSE
     C*>                   SETOF                     22
     C*>                   ENDIF
      *
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*----------------------------------------------------------------
     CSR         ZZINZ     BEGSR
     C*----------------------------------------------------------------
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           LCHWHS
     CSR                   KFLD           LCHRTE
     CSR                   KFLD           LCHRTI
     C*
     C*  Define partal key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           LCHWHS
     CSR                   KFLD           LCHRTE
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           LCHWHS
     C*
     C*  Define Ldrcomc key (Comment reason code desc.)
     C*
     C           TYPKEY    KLIST
     C                     KFLD           LCHWHS
     C                     KFLD           LCDTYP
     C                     KFLD           LCDRSC
     C*
     C*  Setup option and command display lines.
     C*
     CSR                   MOVE CMDLN,1   CMDLN1
     C*
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   MOVE *BLANKS   SAVRTE  5
     CSR                   MOVE *BLANKS   SAVTRL  8
     CSR                   MOVE *BLANKS   SAVTYP  2
     CSR                   SETOF                     18
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZINZ2   Extra program initialization. Called from main line.
     C*----------------------------------------------------------------
     CSR         ZZINZ2    BEGSR
     C*----------------------------------------------------------------
     C*
     C*   Get warehouse for user.
     C*
     CSR         USKEY     CHAINPIRUSER              79
     CSR         *IN79     IFEQ *OFF
     CSR                   Z-ADDUSWHSE    LCHWHS
     CSR                   ELSE
     CSR                   Z-ADD1         LCHWHS
     CSR                   ENDIF
     C*
     C*   Verify warehouse and get description.
     C*
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDLCHWHS    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE '1'       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE '1'       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   Z-ADDLCHWHS    $KWHSE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   END
     CSR                   END
     C*
     C                     MOVE $FDATE    WFDATE
     C                     MOVE $TDATE    WTDATE
     C*
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZKEYF   Create key for file being used
     C*----------------------------------------------------------------
     CSR         ZZKEYF    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*----------------------------------------------------------------
     CSR         ZZKEYU    BEGSR
     C*----------------------------------------------------------------
     C*
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZPOS    Position to a different record.
     C*----------------------------------------------------------------
     CSR         ZZPOS     BEGSR
     C*----------------------------------------------------------------
     C*
     C*  See if user is trying to change warehouse.
     C*
     CSR         PTINP1    IFNE 0
     C*
     C*      Verify warehouse entry.
     C*
     CSR                   Z-ADDPTINP1    LCHWHS
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDPTINP1    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE '1'       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE '1'       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   GOTO ENDZPS
     CSR                   ELSE
     CSR                   Z-ADDPTINP1    LCHWHS
     CSR                   Z-ADDLCHWHS    $KWHSE
     CSR                   Z-ADD*ZEROS    LCHWHS
     CSR                   Z-ADDPTINP1    LCHWHS
     CSR                   MOVEL$LERM     WHDESC
     CSR                   Z-ADD0         PTINP1
     CSR                   MOVE *ON       REPOS
     CSR                   END
     CSR                   END
     CSR                   END
     C*
     C*  See if user is trying to position to log date
     C*
     CSR         PTINP2    IFNE *BLANKS
      *
     C*>                   MOVE '*MDYCMD '$CVCMD
     C*                    MOVE PTINP2    $CVD6I
     C*                    CALL @CVTDT
     C*                    PARM           $CVTDT
     C*                    MOVE $CVD8O    LOGIN
      *
     C                     MOVELPTINP2    LCHRTE
     C                     MOVE *BLANKS   PTINP2
     C                     MOVE *ON       REPOS
     C                     END
     C*
     CSR         ENDZPS    ENDSR
     C*
     C*----------------------------------------------------------------
     C*  ZZPOS2   Position to record
     C*----------------------------------------------------------------
     CSR         ZZPOS2    BEGSR
     C*----------------------------------------------------------------
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLLCTREC
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLLCTREC
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLLCTREC
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTLCTREC
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  CMDLN - Command display line
F3=Exit  F4=Prompt  F12=Cancel F21=Print List (Shift+F9)
