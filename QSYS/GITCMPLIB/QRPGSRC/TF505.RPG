     F*----------------------------------------------------------------
     F*   Copyright (C) 1996 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  TF505     Pick transfer orders - Traffic cop
     F*  13 March 1996
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
     F*----------------------------------------------------------------
     F*
     F*  Notes
     F*
     F*    - The screen for this program must be compiled with
     F*      defer write equal to *NO.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FTF505FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FBATCTL  UF  E           K        DISK                      A
     FORDH2   IF  E           K        DISK
     F            OHREC                             KRENAMEOHREC2
     FTORDH3  UF  E           K        DISK
     FTORDD   IF  E           K        DISK
     FORDH    O   E           K        DISK                      A
     FORDD    O   E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *TFRPICK - Pick new orders.
     C*              *RESTART - Restart abnormally ended batch.
     C*      $PWHSE  Picking warehouse.
     C*      $PBAT   Batch number for *RESTART.
     C*      $PSTAT  Status for *RESTART.
     C*      $PRTE   Route for *RESTART.
     C*      $PORD   Order number for *RESTART.
     C*      $PRWHS  Receiving warehouse for *TFRPICK.
     C*      $PTRTE  Route for *TFRPICK.
     C*
     C*    Returned Parameters
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PCMD   8
     C                     PARM           $PWHSE  30
     C                     PARM           $PBAT   70
     C                     PARM           $PSTAT  1
     C                     PARM           $PRTE   5
     C                     PARM           $PORD   70
     C                     PARM           $PRWHS  30
     C                     PARM           $PTRTE  5
     C                     PARM           $PRTN   8
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C*
     C* Get out if a valid command wasn't sent to us.
     C*
     C           $PCMD     IFNE '*TFRPICK'
     C           $PCMD     ANDNE'*RESTART'
     C                     MOVE '*ERROR  '$PRTN
     C                     GOTO ENDPGM
     C                     END
     C*
     C* Go and pick the orders.
     C*
     C                     EXSR PICK
     C                     MOVE $RETRN    $PRTN
     C*
     C* If error occured during picking display error screen.
     C*
     C           $RETRN    IFEQ '*ERROR  '
     C                     MOVE $MSGID    #MSGK
     C                     EXSR ZMQMSG
     C                     EXSR ZMDMSG
     C                     MOVE *ON       *IN98
     C                     EXFMTSCREEN2
     C                     END
     C*
     C* End of the picking process.
     C*
     C           ENDPGM    TAG
     C                     MOVE *ON       *INLR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     CSR                   MOVE *ON       FOREVR  1
     C*
     C*  Initialize special keys
     C*
     CSR                   Z-ADD0         ENTER   50
     CSR                   Z-ADD2         COMAND  50
     CSR                   Z-ADD01122     ROLLUP  50
     CSR                   Z-ADD01123     ROLLDN  50
     CSR                   Z-ADD01124     CLEAR   50
     CSR                   Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     CSR                   EXSR ZMIMSG
     C*
     C*  Initialize variables
     C*
     CSR                   MOVE *BLANKS   $RETRN  8
     CSR                   MOVE *OFF      ERROR   1
     C*
     C*   Define key for order header file by stat/route (ORD2)
     C*
     CSR         *LIKE     DEFN OHSTAT    KYSTAT
     CSR         KEYOH2    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           KYSTAT
     CSR                   KFLD           $PRTE
     C*
     C*  Define partial key for transfer header file.
     C*
     CSR         KEYTOH    KLIST
     CSR                   KFLD           $PWHSE
     C*
     C*  Define partial key for transfer detail file.
     C*
     CSR         KEYTOD    KLIST
     CSR                   KFLD           TOHNUM
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CPYORD  Copy authorized orders to picking order files.
     C*
     CSR         CPYORD    BEGSR
     C*
     CSR         KEYTOH    SETLLTORDH3
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYTOH    READETORDH3                   79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*      Only select authorized records for the receiving warehouse.
     C*
     CSR         TOHSTS    IFNE '3'
     CSR         TOHTWH    ORNE $PRWHS
     CSR                   ITER
     CSR                   ENDIF
     C*
     C*      Add record to picking header file.
     C*
     CSR                   CLEAROHREC
     CSR                   Z-ADDTOHFWH    OHWHSE
     CSR                   Z-ADDTOHNUM    OHORD
     CSR                   MOVE 'T'       OHTYPE
     CSR                   MOVE $PTRTE    OHRTE
     CSR                   Z-ADDTOHSTP    OHSTOP
     CSR                   MOVE 'O'       OHSTAT
     CSR                   WRITEOHREC
     C*
     C*      Copy detail recrods to picking detail file.
     C*
     CSR         KEYTOD    SETLLTORDD
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYTOD    READETORDD                    78
     CSR         *IN78     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*         Add record to picking detail file.
     C*
     CSR                   CLEARODREC
     CSR                   Z-ADDTOHFWH    ODWHSE
     CSR                   Z-ADDTODNUM    ODORD
     CSR                   Z-ADDTODSEQ    ODSEQ
     CSR                   MOVE TODITM    ODITEM
     CSR                   Z-ADDTODQO1    ODQOR1
     CSR                   Z-ADDTODQO2    ODQOR2
     CSR                   Z-ADDTODQO3    ODQOR3
     CSR                   MOVE 'O'       ODSTAT
     CSR                   WRITEODREC
     CSR                   ENDDO
     C*
     C*      Update status of transfer order.
     C*
     CSR                   MOVE '4'       TOHSTS
     CSR                   UPDATTOHREC
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PICK    Pick new customer orders.
     C*
     CSR         PICK      BEGSR
     C*
     CSR                   MOVE *OFF      BFLAG   1
     CSR                   MOVE *BLANKS   $RETRN
     C*
     C*   Process orders one route at a time.
     C*
     CSR                   MOVE 'O'       KYSTAT
     CSR         $PCMD     IFEQ '*TFRPICK'
     CSR                   MOVE *BLANKS   $PRTE
     CSR         KEYOH2    SETLLORDH2
     CSR                   ENDIF
     C*
     CSR                   MOVE *OFF      EOFOH2  1
     C*
     CSR         EOFOH2    DOUEQ*ON
     CSR         $RETRN    OREQ '*ERROR  '
     C*
     CSR         $PCMD     IFEQ '*TFRPICK'
     CSR                   READ ORDH2                    79
     CSR         *IN79     IFEQ *ON
     CSR         OHSTAT    ORNE 'O'
     CSR                   MOVE *ON       EOFOH2
     CSR                   GOTO ENDDO1
     CSR                   ENDIF
     CSR                   MOVE OHRTE     $PRTE
     CSR                   ENDIF
     C*
     C*      Display informational screen.
     C*
     CSR                   MOVE $PRTE     W1RTE
     CSR                   WRITESCREEN1
     C*
     C*      If we are picking new orders then start at phase 1.
     C*
     C           $PCMD     CABEQ'*TFRPICK'PHASE0
     C*
     C*      Otherwise, skip to the phase where the restarted batch
     C*      left off.
     C*
     CSR         $PSTAT    CABEQ'0'       PHASE0
     CSR         $PSTAT    CABEQ'1'       PHASE1
     CSR         $PSTAT    CABEQ'2'       PHASE2
     CSR         $PSTAT    CABEQ'3'       PHASE3
     CSR         $PSTAT    CABEQ'4'       PHASE4
     CSR         $PSTAT    CABEQ'5'       PHASE5
     CSR         $PSTAT    CABEQ'6'       PHASE6
     C*
     C*     Phase 0 - Copy authorized orders to picking files.
     C*
     CSR         PHASE0    TAG
     CSR                   MOVE '0'       STAT    1
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM20
     CSR                   EXSR CPYORD
     C*
     C*     Phase 1 - Allocate items from slots.
     C*
     CSR         PHASE1    TAG
     CSR                   MOVE '1'       STAT    1
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM21
     CSR                   CALL 'OR510'
     CSR                   PARM           $PCMD
     CSR                   PARM           #PROG
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PRTE
     CSR                   PARM           $PORD
     CSR                   PARM           $RETRN  8
     CSR                   PARM           $MSGID  4
     CSR         $RETRN    CABEQ'*ERROR  'ENDDO1
     C*
     C*     Phase 2 - Build pallets.
     C*
     CSR         PHASE2    TAG
     CSR                   MOVE '2'       STAT
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM22
     CSR                   CALL 'OR520CL'
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PRTE
     CSR                   PARM           $RETRN
     C*
     C*     Phase 3 - Pick stock from slots.
     C*
     CSR         PHASE3    TAG
     CSR                   MOVE '3'       STAT
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM23
     CSR                   CALL 'OR530'
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PRTE
     C*
     C*     Phase 4 - Print labels.
     C*
     CSR         PHASE4    TAG
     CSR                   MOVE '4'       STAT
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM24
     CSR                   CALL 'OR540'
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PRTE
     C*
     C*     Phase 5 - Print loading sheet.
     C*
     CSR         PHASE5    TAG
     CSR                   MOVE '5'       STAT
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM25
     CSR                   CALL 'OR550CL'
     CSR                   PARM           $PCMD
     CSR                   PARM           $PBAT
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PRTE
     CSR                   PARM           $RETRN
     C*
     C*     Phase 6 - Print pallet summary
     C*
     CSR         PHASE6    TAG
     CSR                   MOVE '6'       STAT
     CSR                   EXSR UPDCTL
     CSR                   EXSR ZM26
     CSR                   CALL 'OR560CL'
     CSR                   PARM           $PCMD
     CSR                   PARM '*SUMMARY'RTYPE   8
     CSR                   PARM           $PWHSE
     CSR                   PARM           $PBAT
     CSR                   PARM           $PRTE
     CSR                   PARM ' '       WHDP    5
     CSR                   PARM           $RETRN
     C*
     CSR         SKIP1     TAG
     C*
     C*     Setup for next route.
     C*
     CSR                   MOVE '*TFRPICK'$PCMD
     CSR         KEYOH2    SETGTORDH2
     C*
     CSR         ENDDO1    TAG
     CSR                   ENDDO
     C*
     C*  Mark batch as finished if no error occured.
     C*
     CSR         $RETRN    IFNE '*ERROR  '
     CSR         BFLAG     ANDEQ*ON
     CSR                   MOVE '9'       STAT
     CSR                   EXSR UPDCTL
     CSR                   ENDIF
     C*
     CSR         ENDPST    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  UPDCTL  Update batch control record. Lock it if necessary.
     C*
     CSR         UPDCTL    BEGSR
     C*
     C*   If this is for phase0 and a new batch ...
     C*
     CSR         STAT      IFEQ '0'
     CSR         $PCMD     ANDEQ'*TFRPICK'
     CSR         BFLAG     ANDEQ*OFF
     C*
     C*     - Get new batch number.
     C*
     CSR                   CALL 'PIRBAT#'
     CSR                   PARM           $PBAT
     C*
     C*     - Create batch control record.
     C*
     CSR                   Z-ADD$PBAT     BTBAT#
     CSR                   Z-ADD$PWHSE    BTWHSE
     CSR                   MOVE '*TFRPICK'BTTYPE
     CSR                   MOVE STAT      BTSTAT
     CSR                   MOVE $PRTE     BTRTE
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    BTSTRD
     CSR                   TIME           BTSTRT
     CSR                   MOVE #USER     BTSTRB
     CSR                   WRITEBTREC
     CSR                   ELSE
     C*
     C*   Otherwise, update control record with current phase.
     C*     - If finished then mark with time stamp.
     C*
     CSR         $PBAT     CHAINBTREC                79
     CSR                   MOVE STAT      BTSTAT
     CSR                   MOVE $PRTE     BTRTE
     CSR         STAT      IFEQ '9'
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD8O    BTENDD
     CSR                   TIME           BTENDT
     CSR                   END
     CSR                   UPDATBTREC
     CSR                   END
     C*
     C*   Grab control record to let others know a batch is being
     C*   processed unless, of course, we are finished.
     C*
     CSR         STAT      IFNE '9'
     CSR         $PBAT     CHAINBTREC                79
     CSR                   END
     CSR                   MOVE *ON       BFLAG
     C*
     CSR                   ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCSBF  Clear message subfile.
     C*
     CSR         ZMCSBF    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM 'TF500CL' #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   TF50020  Copying authorized orders to picking files.
     C*
     CSR         ZM20      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'TF50020' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50021  Allocating stock from slots.
     C*
     CSR         ZM21      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50021' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50022  Building pallets.
     C*
     CSR         ZM22      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50022' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50023  Picking stock from slots.
     C*
     CSR         ZM23      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50023' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50024  Printing labels.
     C*
     CSR         ZM24      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50024' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50025  Print loading sheet.
     C*
     CSR         ZM25      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50025' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR50026  Print pallet summary.
     C*
     CSR         ZM26      BEGSR
     CSR                   EXSR ZMCMSG
     CSR                   MOVE 'OR50026' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEA*BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   EXSR ZMCSBF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Slot record does not exist.
     C*
     CSR         ZM7973    BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   ENDSR
     O*----------------------------------------------------------------     ****
     O*
     O*  COMPILE TIME TABLES
     O*
