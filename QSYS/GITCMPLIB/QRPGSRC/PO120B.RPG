     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  PO120B    PO detail maintenance - Display
     F*  26 June, 2000
     F*  Kenneth Elder
     A*
     A*  NOTE: This program no longer used. Function added into
     A*        PO120. Part of Super P/O Mods. 4.16 MLB
     A*
414 AF*      - Created.
     F*      - Copy of PO120
     F*      - Add code to allow display and position to Mfr. code
     F*        Via a traffic cop CL PO120CL..
     F*  SK110 - 1.01
     F*
     F*  Revisions
     F*
414aAF*    07/06/00  HNK 4.14a
     F*      - Parameter for option 8 changed.  It was incorrectly
     F*        using PDITEM.
     F*
414bAF*    08/22/00  HNK 4.14b
     F*      - Scanning UPC code was creating error.  DSUKEY data
     F*        corrected.  Error check on UPC file corrected.
     F*
414cAF*    08/23/00  HNK 4.14c
     F*      - Reversed some of 414 changes.  Unique key and File key
     F*        were not correct when calling PO232 program.
     F*
414dAF*    09/24/00  KDE  4.14d
     F*      - Add code to flag subfile records to identify whether
     F*        the lines have been touched or not touched...
     F*        Allow for entry of check/touch of detail line.  Confirm
     F*        with user before adding record to PORCV file.
414dAF*    09/27/00  KDE  4.14d
     F*      - Add code to call GETUSER for records flagged as touched
     F*        Also change flag character from '*' to 'X'.
414eAF*    10/12/00  DAS  4.14e
     F*      - Recompiled because field added to file PORCV.
     F*      - Changed program called with option 13 to PO138 which
     F*        views the PORCV entries instead of PO135 which viewed
     F*        the directed putawy tracking.
     F*      - Created option 99 to view the directed putaway tracking.
     F*      - Added F23=More options (Marked with F23).
     F*
414fAF*    10/27/00  DAS  4.14f
     F*      - Revised ZZOPT routine to initialize DSUKEY for opt 'X'.
     F*      - Revised ZZOPT opt 'X' to get fields for PORCV lookup
     F*        from DSUKEY instead of chaining to PODTL1, which was
     F*        incorrect since it is not unique.
     F*
415 AF*    02/12/01  DAS  4.15
     F*      - Added key DET2KY based off of UK fields.
     F*      - Revised option 'X' to use DET2KY instead of DETLKY.
     F*
415aAF*    12/23/00  KDE
     F*      - Revised ZZCHEK to return an error to the user if the
     F*        PIRITEM record is not found.
     F*
415bAF*    08/28/01  MLB/DAS  4.15b
     F*      - Revised ENT01 routine to MOVE DSUKEY $PUKY before
     F*        calling ZZCHEK instead of after.
416aAF*    05/23/02  RH   4.16a
    AA*      - PORCV file changed, initialize POREDT and PORETI.
510aAF*    12/06/06  RH   5.10a
     F*      - Enh: Remove BFCADR, no longer used.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        POSITION CURSOR
     F*  21 - 29   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  79        CHAIN INDICATOR
     F*  90        PROTECT INPUT FIELDS FOR DELETE DISPLAY
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FPO120BFMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
221 AF                                        RECNO KSFILE DSPSFL1
     F                                        MSGK  KSFILE MSGREC
     FWORKOPT UF  E           K        DISK                      A
414 MFPODTL1  IF  E           K        DISK
414cAF            PDREC                             KRENAMERECORDU
414 AFPODTL2  IF  E           K        DISK
414 AF            PDREC                             KRENAMERECORD
414dAFPODTL3  IF  E           K        DISK
414dAF            PDJREC                            KRENAMEPTOUCH
     FWAREHS  IF  E           K        DISK
221 AFPIRITEM IF  E           K        DISK
221 AFUPC     IF  E           K        DISK
221 AFITEMDSC IF  E           K        DISK
221 AFOPTIONS IF  E           K        DISK
223 AFITEMDEF IF  E           K        DISK
221 AFOPTIOND IF  E           K        DISK
411 AFITEMLNK IF  E           K        DISK
412 AFSLOT3   IF  E           K        DISK
414dAFPORCV   UF  E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    ZOPT   20  20  2
223 DE*                   OPTLN   1   1 75
F23 DE*                   OPTLN   1   2 75
F23 ME                    OPTLN   1   4 75
     E                    CMDLN   1   1 79
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        4  12 $KPO
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I I            0                         1   30PDWHSE
     I                                        4  12 PDPO
414cAI                                       13  27 PDVITM
     I*
414cAI            DS
414cAI                                        1  50 DSUKEY
414cAI I            0                         1   30UKWHSE
414cAI                                        4  12 UKPO
414cAI I            0                        13  170UKSEQ
414cAI                                       18  32 UKITEM
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
221 AI$AERM       DS
221 AI                                        1  60 XAERM
221 AI                                        1   4 $AMSG
221 AI$CERM       DS
221 AI                                        1  60 XCERM
221 AI                                        1   4 $CMSG
409 AI*----------------------------------------------------------------
409 AI*  *PICK  -  Picking options
409 AI*----------------------------------------------------------------
409 AI*
409 AI* Fields
409 AI*
409 AI*    OPNXTP  -  Next pallet number.
409 AI*    OPBPCK  -  Bulk pick definition.
409 AI*    OPPCUB  -  Maximum cube for PIR.
409 AI*    OPFPAL  -  Pallets on fixed fork lift.
409 AI*    OPFCUB  -  Maximum cube per fixed pallet.
409 AI*    OPFSTP  -  Maximum stops per fixed pallet.
409 AI*    OPINCL  -  Include PIR in fixed cube.
409 AI*    OPSRCH  -  Number of previous pallets to search for space.
409 AI*    OPFBLD  -  Fixed pallet building method.
409 AI*                1 = By piece without concern for splitting stop.
409 AI*                2 = By stop without splitting stop between plts.
409 AI*    OPPBRK  -  Break pallets by aisle (Y,N).
409 AI*    OPMPUT  -  Manual Put away (Y,N).
409 AI*
409 AI* Data structure
409 AI*
409 AIOPDDTA      DS
409 AI I            0                         1   70OPNXTP
409 AI I            0                        10  142OPPCUB
409 AI I            0                        15  150OPFPAL
409 AI I            0                        16  202OPFCUB
409 AI                                       22  22 OPINCL
409 AI I            0                        23  240OPSRCH
409 AI I            0                        25  260OPFSTP
409 AI I            0                        27  270OPFBLD
409 AI I            0                        28  300OPBPCK
409 AI                                       31  33 OPPBRK
409 AI                                       34  34 OPMPUT
409 AI                                      117 117 OPDEND
409 AI*
0493 I*----------------------------------------------------------------
.    I*  Called program parameters
0493 I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  30 $LPO
     I                                       31  350$LSEQ
     I                                       36  50 $LITEM
223 AI*
223 AI                                       22  36 $LITM
223 AI                                       37  37 $LXFLG
     I*----------------------------------------------------------------
221 AI* Data structure
221 AI*
221 AIOPDATA      DS
221 AI                                        1   1 OPSTYP
221 AI                                        2   6 OPWHDP
221 AI                                        7   8 OPUM1
221 AI                                        9  23 OPDUM
221 AI                                       24  43 OPCUM
221 AI                                       44  522OPCDIV
221 AI                                       53  53 OPCAUT
221 AI                                       54  54 OPCWRN
221 AI                                       55  571OPCRNG
221 AI                                       58  72 OPWUM
221 AI                                       73  73 OPXDSC
221 AI                                      117 117 OPTEND
0493 I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'PO122'               C         @CHGPG
     I              'PO124'               C         @DELPG
     I              '*NONE'               C         @PRTPG
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
401 AI*
401 AI                                       19  210$PWHSE
401 AI                                       22  30 $PPO
401 AI                                       31  350$PSEQ
401 AI                                       36  50 $PITEM
     I$CVTDT      DS
     I                                        1   8 $CVDOP
     I                                        9  140$CVDD6
     I                                       15  220$CVDD8
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY 50
     C                     PARM           $RTNCD  8
     C*
     C*  Define keys
414dAC*
414dAC*  Define full key for PODTL3 file.
414dAC*
414dAC           DETLKY    KLIST
414dAC                     KFLD           PDWHSE
414dAC                     KFLD           PDPO
414dAC                     KFLD           PDSEQ
     C*
415 AC           DET2KY    KLIST
415 AC                     KFLD           UKWHSE
415 AC                     KFLD           UKPO
415 AC                     KFLD           UKSEQ
     C*
     C*     WORKOPT  (Unique key)
     C*
     C           WKOUNQ    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           WKOKYF
     C                     KFLD           WKOKYU
     C*
     C*     WORKOPT  (Partial key)
     C*
     C           WKOPRT    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     C           *LIKE     DEFN WKOKYF    $WKOF
     C           *LIKE     DEFN WKOKYU    $WKOU
     C           DELTOP    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           $WKOF
     C                     KFLD           $WKOU
     C*
     C*     USERCODE
     C*
     C           USKEY     KLIST
     C                     KFLD           #USER
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *BLANKS   $RTNCD
510a C*                    CALL 'BFCADR'
510a C*                    PARM           $RTN    8
510a C*          $RTN      IFEQ '*EXPIRED'
510a C*                    MOVE 'EOJ'     NXTSCR
510a C*                    MOVE '*EXIT   '$RTNCD
510a C*                    ELSE
     C                     EXSR ZZINZ2
510aDC*                    END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
     C*
     C           $RTNCD    IFEQ '*EXIT   '
     C           $RTNCD    OREQ '*CANCEL '
414 AC           $RTNCD    OREQ '*F9     '
     C                     SETON                     LR
     C                     END
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
414 CCSR                   SETOF                     KLKI
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
221 ACSR         UXFLAG    IFEQ *OFF
     CSR                   EXSR SFLDSP
402 ACSR                   READ POSTNREC                 50
221 ACSR                   READ SCANREC                  50
221 ACSR                   ELSE
221 ACSR                   EXSR SFLDS1
402 ACSR                   READ POSTNREC                 50
221 ACSR                   READ SCANREC                  50
221 ACSR                   ENDIF
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXSR DELDSP
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
221 ACSR         UXFLAG    IFEQ *OFF
     CSR                   READ DSPSFC                   50
221 ACSR                   ELSE
221 ACSR                   READ DSPSFC1                  50
221 ACSR                   END
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR
     CSR                   MOVE *ON       *IN90
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   WRITECLR0306
     CSR                   WRITEDELREC
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   WRITECMDDEL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 wrap-up
     C*
     CSR         SCR02E    BEGSR
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE *OFF      *IN90
     CSR                   WRITECLR0306
     C*
     C*   If delete was not canceled (no errors)
     C*     then reposition to record just before first deleted rec.
     C*
     CSR         CANCEL    IFEQ *OFF
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FRSTKY    $POFKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     C*
     C*   Otherwise, position to last record read.
     C*
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   END
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   EXSR OPTNS
     CSR                   ELSE
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
221 AC                     WRITEDSPSFL1                79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ*OFF
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
414 AC*
414 AC*  TEST FOR CMD9 - SWITCH TO PO120/DISPLAY BY ITEM
414 AC*
414 ACSR         *INKI     IFEQ *ON
414 ACSR                   MOVE 'EOJ'     NXTSCR
414 ACSR                   MOVE '*F9     '$RTNCD
414 ACSR                   END
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR CMD5 - REFRESH
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR CLRSCH
221 ACSR         UXFLAG    IFEQ '0'
     CSR         1         DO   10        X
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
221 ACSR                   ELSE
221 ACSR         1         DO   05        X
221 ACSR         X         CHAINDSPSFL1              79
221 ACSR         *IN79     IFEQ '0'
221 ACSR                   MOVE '  '      OPTION
221 ACSR                   UPDATDSPSFL1
221 ACSR                   END
221 ACSR                   END
221 ACSR                   ENDIF
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       CMD01E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR CMD6 - ADD RECORD
     C*
     CSR         *INKF     IFEQ *ON
     CSR                   EXSR INZPAR
     CSR                   MOVE '*ADD    '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR         $PRTN     IFNE '*CANCEL '
     CSR         $PRTN     ANDNE'*EXIT   '
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   END
     CSR                   END
220 ACSR                   MOVE '*REFRESH'PAGCMD
220 ACSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD10 - MOVE RECORD THAT CUSOR IS ON TO TOP
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
221 DC*R                   SUB  10        ROW#
221 MCSR                   SUB  PRCREC    ROW#
     CSR         ROW#      IFLT 1
     CSR         ROW#      ORGT DSPLYD
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0106
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE UKEY,ROW# $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       CMD01E
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ *ON
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ *ON
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *ON       CANCEL
     CSR                   EXSR SCR02E
     CSR                   GOTO CMD02E
     CSR                   END
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELADD   Add record to subfile for delete display
     C*
     CSR         DELADD    BEGSR
221 ACSR                   Z-ADDPRCREC    NR      20
221 ACSR                   ADD  1         NR
221 DC*R         RECNO     IFLT 11
221 ACSR         RECNO     IFLT NR
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  GET RECORD INFO
     C*
     CSR                   MOVE '*GET    '$POCMD
     CSR                   MOVE WKOKYU    $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       DELADE
     C*
     C*  SAVE KEY TO RECORD OF FIRST SCREEN LINE
     C*
     CSR         RECNO     IFEQ 1
     CSR                   MOVE WKOKYF    $WKOF
     CSR                   MOVE WKOKYU    $WKOU
     CSR                   END
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   MOVE WKOOPT    OPTION
221 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFL
221 ACSR                   ELSE
221 ACSR                   WRITEDSPSFL1
221 ACSR                   ENDIF
     CSR                   END
     CSR         DELADE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELDSP   Display subfile of records marked for deletion
     C*
     CSR         DELDSP    BEGSR
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
221 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFC
221 ACSR                   ELSE
221 ACSR                   WRITEDSPSFC1
221 ACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ENT01E
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         ERROR     CABEQ*ON       ENT01E
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
221 AC*  CHECK IF UPC CODE WAS ENTERED.
     C*
221 ACSR         W1UPC     IFNE *BLANKS
221 ACSR                   EXSR ZZCHK1
221 ACSR         ERROR     CABEQ*ON       ENT01E
415bACSR                   MOVE DSUKEY    $PUKY
413FACSR                   EXSR ZZCHEK
413FACSR         ERROR     CABEQ*ON       ENT01E
414cACSR                   Z-ADDPDWHSE    UKWHSE
414cACSR                   MOVE PDPO      UKPO
414cACSR                   Z-ADDPDSEQ     UKSEQ
414cACSR                   MOVE PDITEM    UKITEM
415bDC**                   MOVE DSUKEY    $PUKY
222 ACSR                   EXSR ZZRCV
413FACSR                   MOVE *ON       REFRSH
222 DC*R                   MOVE '*CHANGE '$LCMD
222 DC*R                   MOVE $PUKY     $LUKY
222 DC*R                   MOVE W1UPC     $LUPC
222 DC*R                   MOVE *BLANKS   W1UPC
222 DC*R                   Z-ADD0         $LRSQT
222 DC*R                   CALL 'PO132'
222 DC*R                   PARM           $LPARM
222 DC*R                   PARM           $LUPC  20
222 DC*R                   PARM           $LRSQT  70
222 DC*R                   MOVE '*REFRESH'PAGCMD
222 DC*R                   EXSR PAG01
222 DC*R         $LRTN     IFEQ '*OK     '
222 DC*R                   MOVE $LMSG     #MSGK
222 DC*R                   EXSR ZMQMSG
222 DC*R                   END
221 ACSR                   ENDIF
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R         OTAKEN    IFEQ *OFF
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   GOTO ENT01E
     C*R                   END
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  Save first delete key.
     C*
     CSR         *LIKE     DEFN $PUKY     FRSTKY
     CSR                   MOVE $PUKY     FRSTKY
     C*
     C*  Delete the records that have been selected
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     CSR         WKOOPT    IFEQ ' 4'
     C*
     C*  Call delete program
     C*
     CSR                   EXSR INZPAR
     CSR                   MOVE '*DELETE '$PCMD
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   CALL @DELPG
     CSR                   PARM           $PARMS
     C*
     C*     Error occured - Error message sent back
     C*
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     C*
     C*     Error occured - Error message sent to program msgq
     C*
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     C*
     C*     Delete canceled
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     C*     Delete was successful.
     C*
     CSR         $PRTN     IFEQ '*OK     '
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         CANCEL    IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   END
     C*
     CSR                   END
     CSR                   END
     CSR                   EXSR SCR02E
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE *OFF      OTAKEN  1
     C*
     C*     DO ALL DELETES FIRST (OPTION 4)
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     DOWEQ*OFF
     CSR         WKOOPT    ANDNE' 4'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR                   END
     CSR         *IN79     IFEQ *OFF
     CSR         WKOOPT    ANDEQ' 4'
     CSR                   MOVE *ON       OTAKEN
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   EXSR SCR02I
     CSR                   GOTO OPTNSE
     CSR                   END
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   MOVE *OFF      STOP    1
     CSR         STOP      DOUEQ*ON
     CSR         CANCEL    OREQ *ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE *ON       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE *ON       REFRSH
     CSR         ERROR     IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ *ON
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*
     C*
     CSR         OPTNS2    BEGSR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     C*   Change
     C*
     CSR         WKOOPT    IFEQ ' 2'
     CSR                   MOVE '*CHANGE '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   View
     C*
     CSR         WKOOPT    IFEQ ' 5'
     CSR                   MOVE '*VIEW   '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   Print
     C*
     CSR         WKOOPT    IFEQ ' 6'
     CSR                   MOVE '*PRINT  '$PCMD
     CSR                   CALL @PRTPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     CSR                   EXSR ZZOPT
     CSR                   END
     CSR                   END
     CSR                   END
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE *ON       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         DELTOP    SETLLWORKOPT
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFAC
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
221 AC*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
221 DC*R         P         IFGE 10
221 MCSR         P         IFGE PRCREC
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFAC    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
221 DC*R         DSPLYD    ADD  10        GOBACK  20
221 MCSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ *ON
221 DC*R         GOBACK    IFEQ 10
219 MCSR         GOBACK    IFEQ PRCREC
     CSR                   MOVE *ON       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of delete records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF2
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFW2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
221 AC*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR                   EXSR DELADD
221 DC*R         P         IFGE 10
221 MCSR         P         IFGE PRCREC
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         ENDFW2    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page of delete records
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB2
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
221 DC*R         DSPLYD    ADD  10        GOBACK  20
219 MCSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ *ON
     CSR         WKOPRT    SETGTWORKOPT
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    REDPEWORKOPT                  79
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR                   END
     CSR         ENDBK2    TAG
     CSR                   END
     C*
     C* IF WE HIT THE TOP REPOSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE *OFF      NOMORE  1
414dACSR                   MOVEL'N'       WOYES
     CSR         NOMORE    DOUEQ*ON
     CSR                   MOVE *OFF      *IN21
221 ACSR         UXFLAG    IFEQ '0'
     CSR                   READCDSPSFL                   79
221 ACSR                   ELSE
221 ACSR                   READCDSPSFL1                  79
221 ACSR                   ENDIF
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    LOKUPZOPT                     50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
     CSR                   Z-ADDRECNO     Y       30
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ *OFF
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
221 ACSR         UXFLAG    IFEQ '0'
     CSR         RECNO     IFLT 11
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   WRITEDSPSFL
     CSR                   END
221 ACSR                   ENDIF
221 AC*
221 AC*  Use extended description
221 AC*
221 ACSR         UXFLAG    IFEQ '1'
221 ACSR         RECNO     IFLT 6
221 ACSR                   ADD  1         RECNO
221 ACSR                   Z-ADDRECNO     Y
221 AC*
221 AC*  SAVE FILE AND UNIQUE KEYS
221 AC*
221 ACSR                   MOVE $POFKY    FKEY,Y
221 ACSR                   MOVE $POUKY    UKEY,Y
221 AC*
221 AC*  WRITE DISPLAY LINE TO SUBFILE
221 AC*
221 ACSR                   EXSR ZZFILL
221 ACSR                   WRITEDSPSFL1
221 ACSR                   END
221 ACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE *OFF      *IN01
221 ACSR         UXFLAG    IFEQ '0'
     CSR                   WRITEDSPSFC
221 ACSR                   ELSE
221 ACSR                   WRITEDSPSFC1
221 ACSR                   ENDIF
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
402 ACSR                   WRITEPOSTNREC
221 ACSR                   WRITESCANREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE *ON
     CSR         1         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       *IN20
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC
     CSR                   ENDSR
     C*----------------------------------------------------------------
221 AC*
221 AC*  SFLDS1   Display subfile 1 , Extended description
221 AC*
221 ACSR         SFLDS1    BEGSR
221 AC*
221 AC*  WRITE OPTION AND COMMAND LINES TO DISPLAY
221 AC*
221 ACSR                   WRITEOPTREC
221 ACSR                   WRITECMDREC
221 AC*
221 AC*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
221 AC*
221 ACSR                   WRITEMORREC
221 AC*
221 AC*  WRITE POSITION TO FIELD TO DISPLAY
221 AC*
402 ACSR                   WRITEPOSTNREC
221 ACSR                   WRITESCANREC
221 AC*
221 AC*  GET ANY EXISTING VALUES FOR THE OPTIONS
221 AC*
221 ACSR                   EXSR SFLOP1
221 AC*
221 AC*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
221 AC*
221 ACSR         ERROR     IFNE '1'
221 ACSR         1         CHAINDSPSFL1              79
221 ACSR         *IN79     IFEQ '0'
221 ACSR                   MOVE '1'       *IN20
221 ACSR                   UPDATDSPSFL1
221 ACSR                   END
221 ACSR                   END
221 AC*
221 AC*  WRITE SUBFILE TO DISPLAY
221 AC*
221 ACSR                   MOVE '1'       *IN01
221 ACSR                   Z-ADD1         RECNO
221 ACSR                   WRITEDSPSFC1
221 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
221 DC*R         1         DO   10        X       30
221 MCSR         1         DO   PRCREC    X       30
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   END
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
221 AC*
221 AC*  SFLOP1   Initialize options for subfile 1, extended description
221 AC*
221 ACSR         SFLOP1    BEGSR
221 ACSR         1         DO   05        X       30
221 ACSR         X         CHAINDSPSFL1              79
221 ACSR         *IN79     IFEQ '0'
221 ACSR                   MOVE FKEY,X    WKOKYF
221 ACSR                   MOVE UKEY,X    WKOKYU
221 ACSR         WKOUNQ    CHAINWORKOPT              78
221 ACSR         *IN78     IFEQ '0'
221 ACSR                   MOVE WKOOPT    OPTION
221 ACSR                   MOVE WKOERR    *IN21
221 ACSR                   MOVE WKOERR    *IN20
221 ACSR                   ELSE
221 ACSR                   MOVE *BLANKS   OPTION
221 ACSR                   MOVE '0'       *IN21
221 ACSR                   MOVE '0'       *IN20
221 ACSR                   END
221 ACSR                   UPDATDSPSFL1
221 ACSR                   END
221 ACSR                   END
221 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   WRITEMSGCLR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
221 AC*    PO20027  Item not on PO.
221 AC*
221 ACSR         ZM027     BEGSR
221 ACSR                   MOVE 'PO20027' #MSGID
221 ACSR                   MOVE '*DIAG  ' #MSGTP
221 ACSR                   MOVE *BLANKS   $MD
221 ACSR                   EXSR ZMPMSG
221 ACSR                   ENDSR
     C*----------------------------------------------------------------
221 AC*    PO20029  UPC not on file.
221 AC*
221 ACSR         ZM029     BEGSR
221 ACSR                   MOVE 'PO20029' #MSGID
221 ACSR                   MOVE '*DIAG  ' #MSGTP
221 ACSR                   MOVE *BLANKS   $MD
221 ACSR                   EXSR ZMPMSG
221 ACSR                   ENDSR
     C*----------------------------------------------------------------
412 AC*    IT12001  Item does not have a link record.
412 AC*
412 ACSR         ZM1201    BEGSR
412 ACSR                   MOVE 'IT12001' #MSGID
412 ACSR                   MOVE '*DIAG  ' #MSGTP
412 ACSR                   MOVE *BLANKS   $MD
412 ACSR                   EXSR ZMPMSG
412 ACSR                   ENDSR
415aAC*----------------------------------------------------------------
415aAC*    IT12212  Item does not have a Piritem record.
415aAC*
415aACSR         ZM2212    BEGSR
415aACSR                   MOVE 'IT12212' #MSGID
415aACSR                   MOVE '*DIAG  ' #MSGTP
415aACSR                   MOVE *BLANKS   $MD
415aACSR                   EXSR ZMPMSG
415aACSR                   ENDSR
     C*----------------------------------------------------------------
412 AC*    IT12002  Item does not have a pick slot.
412 AC*
412 ACSR         ZM1202    BEGSR
412 ACSR                   MOVE 'IT12002' #MSGID
412 ACSR                   MOVE '*DIAG  ' #MSGTP
412 ACSR                   MOVE *BLANKS   $MD
412 ACSR                   EXSR ZMPMSG
412 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
F23 AC*
F23 AC*  TEST FOR CMD23 - More options
F23 AC*
F23 ACSR         *INKX     IFEQ '1'
F23 ACSR         VIEWO     IFEQ MAXVWO
F23 ACSR                   Z-ADD1         VIEWO
F23 ACSR                   ELSE
F23 ACSR                   ADD  1         VIEWO
F23 ACSR                   ENDIF
F23 ACSR         VIEWO     MULT 2         V       20
F23 ACSR                   MOVE OPTLN,V   OPTLN2
F23 ACSR                   SUB  1         V
F23 ACSR                   MOVE OPTLN,V   OPTLN1
F23 ACSR                   GOTO ENDCM1
F23 ACSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
221 AC*  ZZCHK1   Screen 1 error checking.
221 AC*
221 ACSR         ZZCHK1    BEGSR
221 ACSR                   MOVE *OFF      ERROR
221 AC*
221 ACSR                   MOVE *OFF      NOUPC   1
221 AC*
221 AC*  UPC not entered.
221 AC*
221 ACSR         W1UPC     IFEQ *BLANKS
221 ACSR                   MOVE *ON       NOUPC
221 ACSR                   MOVE *BLANKS   WOUPC  20
221 ACSR                   ENDIF
221 AC*
221 AC*  UPC code not on file.
221 AC*
221 ACSR         W1UPC     IFNE *BLANKS
221 ACSR                   MOVE W1UPC     WOUPC
221 AC*
221 AC*   Right adjust UPC code for file.
221 AC*
221 ACSR                   MOVEL*BLANKS   $CSTR
221 ACSR                   MOVELW1UPC     $CSTR
221 ACSR                   CALL 'ADJUST'
221 ACSR                   PARM '*RIGHT  '$CCMD   8
221 ACSR                   PARM           $CSTR  30
221 ACSR                   MOVE $CSTR     W1UPC
221 ACSR         UPCKEY    CHAINUPC                  79
221 ACSR         *IN79     IFEQ *ON
221 ACSR                   MOVE *ON       ERROR
221 ACSR                   MOVE *ON       *IN29
221 ACSR                   MOVE *ON       *IN09
221 ACSR                   EXSR ZM029
221 ACSR                   MOVE *ON       NOUPC
221 ACSR                   ENDIF
221 AC*
221 AC*   Verify Item exists on PO.
221 AC*
221 ACSR         NOUPC     IFEQ *OFF
414bMCSR                   MOVE UPITEM    WOITM# 15
414bDC**                   MOVE UPVITM    WOITM# 15
414bMCSR         PODKY1    SETLLPODTL1               79
414bMCSR         PODKY1    READEPODTL1                   79
414bDC**         PODKY2    SETLLPODTL2               79
414bDC**         PODKY2    READEPODTL2                   79
221 ACSR         *IN79     IFEQ *ON
221 ACSR                   MOVE *ON       ERROR
221 ACSR                   MOVE *ON       *IN27
221 ACSR                   MOVE *ON       *IN07
221 ACSR                   EXSR ZM027
221 ACSR                   ENDIF
221 ACSR                   ENDIF
221 AC*
221 ACSR                   ENDIF
221 AC*
221 ACSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
412 AC*  ZZCHEK   Screen 1 EXTRA error checking.
    AC*
412 ACSR         ZZCHEK    BEGSR
412 ACSR         ITKEY2    CHAINPIRITEM              79
412 ACSR         *IN79     IFEQ *ON
412 ACSR                   MOVE *BLANKS   ITTYPE
415aACSR                   MOVE *ON       ERROR
415aACSR                   EXSR ZM2212
412 ACSR                   ENDIF
     C*  Item link record must exist.
412 ACSR         ITTYPE    IFEQ 'A'
412 ACSR         ITTYPE    OREQ 'B'
412 ACSR         ITTYPE    OREQ 'C'
412 ACSR         ITTYPE    OREQ 'S'
412 ACSR         ILKEY     CHAINITEMLNK              79
412 ACSR         *IN79     IFEQ *ON
412 ACSR                   MOVE *ON       ERROR
412 ACSR                   EXSR ZM1201
412 ACSR                   ENDIF
412 ACSR                   ENDIF
     C*  Fixed item - Pick slot must exist
412 ACSR         ITSTYP    IFEQ 'F'
412 ACSR                   SELEC
412 ACSR         ITTYPE    WHEQ ' '
412 ACSR                   MOVE $PITEM    BSITEM 15
412 ACSR                   MOVE 'A '      BSSTAT  2
412 ACSR                   MOVE 'Y'       BSPICK  1
412 ACSR         SLKEY3    SETLLSLOT3
412 ACSR         FOREVR    DOWEQFOREVR
412 ACSR         SLKEY3    READESLOT3                    79
     C*
412 ACSR         *IN79     IFEQ *OFF
412 ACSR         SLPICK    ANDEQ'Y'
412 ACSR                   GOTO ENDCHK
412 ACSR                   ENDIF
     C*
412 ACSR         *IN79     IFEQ *ON
412aDC*R                   MOVE *ON       ERROR
412aDC*R                   EXSR ZM1202
412 ACSR                   GOTO ENDCHK
412 ACSR                   ENDIF
     C*
412 ACSR                   ENDDO
     C*
412 ACSR         ITTYPE    WHEQ 'A'
412 ACSR         ITTYPE    OREQ 'B'
412 ACSR         ITTYPE    OREQ 'C'
412 ACSR         ITTYPE    OREQ 'S'
412 ACSR         ILKEY     CHAINITEMLNK              79
412 ACSR         *IN79     IFEQ *OFF
412 ACSR                   MOVE ILITM2    BSITEM 15
412 ACSR                   ENDIF
412 ACSR                   MOVE 'A '      BSSTAT  2
412 ACSR                   MOVE 'Y'       BSPICK  1
412 ACSR         SLKEY3    SETLLSLOT3
412 ACSR         FOREVR    DOWEQFOREVR
412 ACSR         SLKEY3    READESLOT3                    79
     C*
412 ACSR         *IN79     IFEQ *OFF
412 ACSR         SLPICK    ANDEQ'Y'
412 ACSR                   GOTO ENDCHK
412 ACSR                   ENDIF
     C*
412 ACSR         *IN79     IFEQ *ON
412 ACSR                   MOVE *ON       ERROR
412 ACSR                   EXSR ZM1202
412 ACSR                   GOTO ENDCHK
412 ACSR                   ENDIF
     C*
412 ACSR                   ENDDO
     C*
412 ACSR                   ENDSL
412 ACSR                   ENDIF
412 ACSR         ENDCHK    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
414cDC*R         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
414cMCSR         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPERECORD                   79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
221 ACSR         UXFLAG    IFEQ '1'
221 ACSR         ITKEY     CHAINITEMDSC              79
221 ACSR         *IN79     IFEQ *ON
221 ACSR                   MOVE *BLANKS   WODSC1
221 ACSR                   MOVE *BLANKS   WODSC2
221 ACSR                   ELSE
221 ACSR                   MOVELIXDSC1    WODSC1
221 ACSR                   MOVELIXDSC2    WODSC2
221 ACSR                   ENDIF
223 AC*  GET PACK DESCRIPTION
223 ACSR         ITKEY     CHAINPIRITEM              79
223 ACSR         *IN79     IFEQ *OFF
223 ACSR                   MOVELITPDSC    WOPDSC
223 ACSR                   ELSE
223 ACSR                   MOVE *BLANKS   WOPDSC
223 ACSR                   ENDIF
223 AC*  GET TIE HI, PREFERRED OR 1ST RECORD.
223 ACSR                   MOVE *OFF      DONE    1
223 ACSR                   Z-ADD0         WOTIE
223 ACSR                   Z-ADD0         WOHI
223 ACSR                   Z-ADD0         SVTIE   40
223 ACSR                   Z-ADD0         SVHI    20
223 ACSR         PARTK2    SETLLITEMDEF
223 ACSR         DONE      DOUEQ*ON
223 ACSR         PARTK2    READEIDREC                    79
223 ACSR         *IN79     IFEQ *ON
223 ACSR                   MOVE *ON       DONE
223 ACSR                   ELSE
223 ACSR         SVTIE     IFEQ 0
223 ACSR         SVHI      ANDEQ0
223 ACSR                   Z-ADDIDTIE     SVTIE
223 ACSR                   Z-ADDIDHIGH    SVHI
223 ACSR                   ENDIF
223 ACSR         IDPREF    IFEQ 'Y'
223 ACSR                   Z-ADDIDTIE     WOTIE
223 ACSR                   Z-ADDIDHIGH    WOHI
223 ACSR                   MOVE *ON       DONE
223 ACSR                   ENDIF
223 ACSR                   ENDIF
223 ACSR                   ENDDO
223 ACSR         WOTIE     IFEQ 0
223 ACSR         WOHI      ANDEQ0
223 ACSR                   Z-ADDSVTIE     WOTIE
223 ACSR                   Z-ADDSVHI      WOHI
223 ACSR                   ENDIF
221 ACSR                   ELSE
     C*
221 ACSR         ITKEY     CHAINPIRITEM              79
221 ACSR         *IN79     IFEQ *OFF
221 ACSR                   MOVELITDESC    WODSC
221 ACSR                   ELSE
221 ACSR                   MOVE *BLANKS   WODSC
221 ACSR                   END
221 ACSR                   ENDIF
     C*
     C*
221 AC*   Convert quantity to String.
221 AC*
221 ACSR                   MOVE '*QTY2STR'$CCMD
221 ACSR                   MOVE '#PROG   '$CPRG
221 ACSR                   Z-ADDPDQOR1    $CQTY1
221 ACSR                   Z-ADDPDQOR2    $CQTY2
221 ACSR                   Z-ADDPDQOR3    $CQTY3
221 ACSR                   CALL 'CVTQTY'
221 ACSR                   PARM           $CCMD
221 ACSR                   PARM           $CPRG
221 ACSR                   PARM           $CQTY1
221 ACSR                   PARM           $CQTY2
221 ACSR                   PARM           $CQTY3
221 ACSR                   PARM           $CUM1
221 ACSR                   PARM           $CUM2
221 ACSR                   PARM           $CUM3
221 ACSR                   PARM           $CQSTR
221 ACSR                   PARM           $CUSTR
221 ACSR                   PARM           $CRTN
221 ACSR                   PARM           $CERM
221 ACSR                   MOVEL$CQSTR    WOQOR
221 AC*
221 ACSR                   MOVE '*QTY2STR'$CCMD
221 ACSR                   MOVE '#PROG   '$CPRG
221 ACSR                   Z-ADDPDQRC1    $CQTY1
221 ACSR                   Z-ADDPDQRC2    $CQTY2
221 ACSR                   Z-ADDPDQRC3    $CQTY3
221 ACSR                   CALL 'CVTQTY'
221 ACSR                   PARM           $CCMD   8
221 ACSR                   PARM           $CPRG  10
221 ACSR                   PARM           $CQTY1  70
221 ACSR                   PARM           $CQTY2  70
221 ACSR                   PARM           $CQTY3  70
221 ACSR                   PARM           $CUM1   2
221 ACSR                   PARM           $CUM2   2
221 ACSR                   PARM           $CUM3   2
221 ACSR                   PARM           $CQSTR 10
221 ACSR                   PARM           $CUSTR 17
221 ACSR                   PARM           $CRTN   8
221 ACSR                   PARM           $CERM
221 ACSR                   MOVEL$CQSTR    WOQRC
     C*
414 ACSR                   MOVELPDVITM    WOMFR
414dAC**   See if line has been touched.  Flag accordingly.
414dACSR         DETLKY    CHAINPODTL3               84
414dACSR         *IN84     IFEQ *ON
414dACSR                   MOVEL*BLANKS   TOUCH
414dACSR                   ELSE
414dACSR                   MOVEL'X'       TOUCH
414dACSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
414cMCSR                   KFLD           UKITEM
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
414cMCSR                   KFLD           PDVITM
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
221 AC*
221 AC*  Define key for PIRITEM file.
221 AC*
221 ACSR         ITKEY     KLIST
221 ACSR                   KFLD           $KWHSE
221 ACSR                   KFLD           PDITEM
409 AC*
409 ACSR         ITKEY2    KLIST
409 ACSR                   KFLD           $KWHSE
409 ACSR                   KFLD           $PITEM
412 AC*
412 ACSR         SLKEY3    KLIST
412 ACSR                   KFLD           $KWHSE
412 ACSR                   KFLD           BSITEM
412 ACSR                   KFLD           BSSTAT
412 ACSR                   KFLD           BSPICK
     C*
     C*  Define key for OPTIOND.
     C*
409 ACSR         *LIKE     DEFN OPDCOD    KYCODE
409 ACSR         OPKEY2    KLIST
409 ACSR                   KFLD           KYCODE
409 ACSR                   KFLD           $PWHSE
409 ACSR                   KFLD           ITWHDP
     CSR                   MOVE '*PICK   'KYCODE
214 AC*
221 AC*
221 AC*  Define key for UPC file.
221 AC*
221 ACSR         UPCKEY    KLIST
221 ACSR                   KFLD           $KWHSE
221 ACSR                   KFLD           W1UPC
221 AC*
414 CC*  Define key for PODTL2 file.
221 AC*
414 CCSR         PODKY1    KLIST
414 CCSR                   KFLD           $KWHSE
414 CCSR                   KFLD           $KPO
414bMCSR                   KFLD           WOITM#
414 ACSR         PODKY2    KLIST
414 ACSR                   KFLD           $KWHSE
414 ACSR                   KFLD           $KPO
414 ACSR                   KFLD           PDVITM
221 AC*
221 AC*     OPTIONS
221 AC*
221 AC           OPKEY     KLIST
221 AC                     KFLD           $KWHSE
221 AC                     KFLD           OCODE
221 AC*
223 AC*  Define partial key for item tie/high definition file.
223 AC*
223 ACSR         PARTK2    KLIST
223 ACSR                   KFLD           $KWHSE
223 ACSR                   KFLD           PDITEM
411 AC*
411 AC*  ITEMLNK file.
411 AC*
411 ACSR         ILKEY     KLIST
411 ACSR                   KFLD           $KWHSE
411 ACSR                   KFLD           PDITEM
     C*
     C*  Setup option and command display lines.
     C*
F23 ACSR                   Z-ADD1         VIEWO   10
F23 ACSR                   Z-ADD2         MAXVWO  10
     CSR                   MOVE OPTLN,1   OPTLN1
223 ACSR                   MOVE OPTLN,2   OPTLN2
     CSR                   MOVE CMDLN,1   CMDLN1
     C*
412 ACSR                   MOVE *OFF      FOREVR  1
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Extra program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Get warehouse description.
     C*
     CSR         $KWHSE    CHAINWAREHS               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   END
     C*
221 ACSR                   EXSR ZZXOPT
223 ACSR                   EXSR ZZTRCV
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
414dAC*
414dAC*    Get User's employee number to be written to PORCV file
414dAC*    if any records are flagged as touched.
414dAC*
CC5 ACSR                   MOVEL#USER     $CODE  10
414dACSR                   Z-ADD*ZEROS    $WHSE   30
414dACSR                   Z-ADD*ZEROS    $EMP#   50
414dACSR                   MOVEL*BLANKS   $FNAM  15
414dACSR                   MOVEL*BLANKS   $INIT   1
414dACSR                   MOVEL*BLANKS   $LNAM  20
414dACSR                   MOVEL*BLANKS   $WHDP   5
414dACSR                   MOVEL*BLANKS   $STYP   1
414dACSR                   MOVEL*BLANKS   $SHFT   6
414dACSR                   MOVEL*BLANKS   $CREW   6
414dACSR                   MOVEL*BLANKS   $NHRS  31
414dACSR                   MOVEL*BLANKS   $RTN    8
414dACSR                   CALL 'GETUSER'
CC5 ACSR                   PARM           $CODE
414dACSR                   PARM           $WHSE
414dACSR                   PARM           $EMP#
414dACSR                   PARM           $FNAM
414dACSR                   PARM           $INIT
414dACSR                   PARM           $LNAM
414dACSR                   PARM           $WHDP
414dACSR                   PARM           $STYP
414dACSR                   PARM           $SHFT
414dACSR                   PARM           $CREW
414dACSR                   PARM           $NHRS
414dACSR                   PARM           $RTN
414dAC*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
414cACSR                   Z-ADDPDWHSE    UKWHSE
414cACSR                   MOVE PDPO      UKPO
414cACSR                   Z-ADDPDSEQ     UKSEQ
414cACSR                   MOVE PDITEM    UKITEM
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
     C*
     C*   Work with tie/high
     C*
     CSR         WKOOPT    IFEQ ' 8'
     CSR                   Z-ADDPDWHSE    $SWHSE  30
     CSR                   CALL 'IT141'
     CSR                   PARM           $SWHSE
414aMCSR                   PARM           $PITEM
414aDC*R                   PARM           PDITEM
     CSR                   ENDIF
223 AC*
223 AC*   Transactions.
223 AC*
223 ACSR         WKOOPT    IFEQ ' 9'
401 DC**                   Z-ADDPDWHSE    $LWHSE
401 DC**                   MOVELPDPO      $LPO
401 DC**                   MOVELPDITEM    $LITEM
401 DC**                   Z-ADDPDSEQ     $LSEQ
409 ACSR                   EXSR ZZPUTO
409 ACSR                   MOVE OPMPUT    $LMPUT  1
401 ACSR                   MOVE $PUKY     $LUKY
223 ACSR                   MOVE *BLANKS   $LRTN
223 ACSR                   CALL 'PO140'
223 ACSR                   PARM           $LUKY
223 ACSR                   PARM           $LRTN
409 ACSR                   PARM           $LMPUT
223 ACSR                   EXSR ZZTRCV
223 ACSR                   ENDIF
     C*
     C*   Receive item
     C*
221 DC*R         WKOOPT    IFEQ '10'
221 MCSR         WKOOPT    IFEQ ' 1'
412 ACSR                   EXSR ZZCHEK
412 ACSR         ERROR     CABEQ*ON       ENDOPT
222 ACSR                   EXSR ZZRCV
222 DC*R                   MOVE '*CHANGE '$LCMD
222 DC*R                   MOVE $PUKY     $LUKY
222 DC*R                   MOVE W1UPC     $LUPC
222 DC*R                   MOVE *BLANKS   W1UPC
222 DC*R                   Z-ADD0         $LRSQT
222 DC*R                   CALL 'PO132'
222 DC*R                   PARM           $LPARM
222 DC*R                   PARM           $LUPC
222 DC*R                   PARM           $LRSQT
222 DC*R                   MOVE '*REFRESH'PAGCMD
222 DC*R                   EXSR PAG01
222 DC*R         $LRTN     IFEQ '*OK     '
222 DC*R                   MOVE $LMSG     #MSGK
222 DC*R                   EXSR ZMQMSG
222 DC*R                   END
     CSR                   ENDIF
     C*
413cAC*   Quick Receive item
     C*
     CSR         WKOOPT    IFEQ ' 7'
     CSR                   EXSR ZZCHEK
     CSR         ERROR     CABEQ*ON       ENDOPT
     CSR                   EXSR ZZRCV
     CSR                   ENDIF
413bAC*
413bAC*   Enter HACCP information.
413bAC*
413bACSR         WKOOPT    IFEQ '11'
413bACSR                   MOVE '*ITEM   '$PCMD
413bACSR                   CALL 'PO170'
413bACSR                   PARM           $PARMS
413bACSR                   ENDIF
223 AC*
223 AC*   Work with slots
223 AC*
223 ACSR         WKOOPT    IFEQ '12'
223 ACSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   MOVE PDITEM    $LITM
223 ACSR                   CALL 'IT130'
223 ACSR                   PARM           $LUKY
223 ACSR                   PARM           $LRTN
223 ACSR                   ENDIF
413aAC*
413aAC*   Display receiving log.
413aAC*
414eDC***        WKOOPT    IFEQ '13'
414eMCSR         WKOOPT    IFEQ '99'
223 ACSR                   Z-ADD$KWHSE    $LWHSE
413aACSR                   MOVE $KPO      $LPO
413aACSR                   MOVE PDITEM    $LITEM
413aACSR                   CALL 'PO135'
413aACSR                   PARM           $LPARM
413aACSR                   PARM           $LRTN
413aACSR                   ENDIF
414eAC*
414eAC*   Display PORCV entries.
414eAC*
414eACSR         WKOOPT    IFEQ '13'
414eACSR                   MOVE $PUKY     $LUKY
414eACSR                   MOVE *BLANKS   $LRTN
414eACSR                   CALL 'PO138'
414eACSR                   PARM           $LUKY
414eACSR                   PARM           $LRTN
414eACSR                   ENDIF
414dAC*
414dAC*     Mark as touched/checked
414dAC*
414dACSR         WKOOPT    IFEQ ' X'
414dAC*
414dAC*    Once answered yes process others in subfile without
414dAC*    promptiong each time...
414dAC*
414dACSR         WOYES     IFEQ 'N'
414dACSR                   EXFMTVERIFY
414dACSR                   ENDIF
414dACSR         WOYES     IFEQ 'Y'
414fDC**
414fDC**  Get key to PORCV file (Sequence Number)
414fDC**
414fDC**                   MOVEL$PPO      $KPO
414fDC**                   MOVEL$PITEM    WOITM#
414fDC**         PODKY1    CHAINPODTL1               55
414dAC*   Read PORCV.  If not found then add...
414fACSR                   MOVE $PUKY     DSUKEY
414dACSR         DETLKY    SETLLPORCV
414dACSR         DETLKY    READEPORCV                    55
414dACSR         *IN55     IFEQ *ON
415 DC**                   Z-ADDPDWHSE    PORWHS
415 DC**                   MOVELPDPO      PORPO
415 DC**                   Z-ADDPDSEQ     PORSEQ
415 MCSR                   Z-ADDUKWHSE    PORWHS
415 MCSR                   MOVELUKPO      PORPO
415 MCSR                   Z-ADDUKSEQ     PORSEQ
414dACSR         #JOBDT    MULT 10000.01  WRKDTE  60
414dACSR         20000000  ADD  WRKDTE    PORDTE
414dACSR                   Z-ADD#JOBTM    PORTIM
414dACSR                   MOVEL#USER     PORUSR
414dACSR                   Z-ADD$EMP#     POREMP
414dACSR                   Z-ADD0         PORTRN
416aDC**                   Z-ADD0         PORLIC
416aACSR                   MOVE *BLANKS   PORLIC
414dACSR                   Z-ADD0         PORLBL
414dACSR                   MOVEL'X'       PORACT
416aACSR                   Z-ADD0         POREDT
416aACSR                   Z-ADD0         PORETI
414dACSR                   WRITEPORREC
414dACSR                   ENDIF
414dACSR                   ENDIF
414dACSR                   ENDIF
223 AC*
412 MCSR         ENDOPT    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*  See if user is trying to position to item
     C*
414 DC*          PTINP1    IFNE *BLANKS
414 DC*                    Z-ADD*LOVAL    PDSEQ
414 DC*                    MOVE PTINP1    PDITEM
414 DC*                    MOVE *BLANKS   PTINP1
414 DC*                    MOVE *ON       REPOS
414 DC*                    END
414 ACSR         W1MFR     IFNE *BLANKS
414 ACSR                   Z-ADD*LOVAL    PDSEQ
414 ACSR                   MOVE W1MFR     PDVITM
414 ACSR                   MOVE *BLANKS   W1MFR
414 ACSR                   MOVE *ON       REPOS
414 ACSR                   END
     CSR         ENDZPS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
409 AC*  ZZPUTO   Get Put away option.
     C*             Directed or Manual put away
     C*
409 ACSR         ZZPUTO    BEGSR
     C*
409 ACSR         ITKEY2    CHAINPIRITEM              79
409 ACSR         *IN79     IFEQ *OFF
409 ACSR                   MOVE '*PICK   'KYCODE
409 ACSR         OPKEY2    CHAINOPTIOND              79
409 ACSR         *IN79     IFEQ *ON
409 ACSR                   MOVE 'N'       OPMPUT
409 ACSR                   ENDIF
409 ACSR                   ENDIF
     C*
409 ACSR                   ENDSR
     C*----------------------------------------------------------------
222 AC*
222 AC*  ZZRCV    Receive item
222 AC*
222 ACSR         ZZRCV     BEGSR
222 AC*
409 DC*R         ITKEY2    CHAINPIRITEM              79
409 DC*R         *IN79     IFEQ *OFF
409 DC*R                   MOVE '*PICK   'KYCODE
409 DC*R         OPKEY2    CHAINOPTIOND              79
409 DC*R         *IN79     IFEQ *ON
409 DC*R                   MOVE 'N'       OPMPUT
409 DC*R                   ENDIF
409 DC*R                   ENDIF
409 MCSR                   EXSR ZZPUTO
409 AC*
413cACSR         WKOOPT    IFEQ ' 7'
413cACSR                   MOVE '*QUICK  '$LCMD
413cACSR                   ELSE
222 ACSR                   MOVE '*CHANGE '$LCMD
413cACSR                   ENDIF
222 ACSR                   MOVE $PUKY     $LUKY
222 ACSR                   MOVE W1UPC     $LUPC
222 ACSR                   MOVE *BLANKS   W1UPC
222 ACSR                   Z-ADD0         $LRSQT
409 ACSR         OPMPUT    IFEQ 'N'
222 ACSR                   CALL 'PO132'
222 ACSR                   PARM           $LPARM
222 ACSR                   PARM           $LUPC  20
222 ACSR                   PARM           $LRSQT  70
222 ACSR                   ADD  $LRSQT    WOSRC
409 ACSR                   ELSE
409 ACSR                   CALL 'PO232'
409 ACSR                   PARM           $LPARM
409 ACSR                   PARM           $LUPC  20
409 ACSR                   PARM           $LRSQT  70
409 ACSR                   ADD  $LRSQT    WOSRC
413eACSR                   EXSR ZZTRCV
409 ACSR                   ENDIF
222 ACSR         $LRTN     IFEQ '*OK     '
222 ACSR                   MOVE $LMSG     #MSGK
222 ACSR                   EXSR ZMQMSG
222 ACSR                   ENDIF
401 ACSR         $LRTN     IFEQ '*PGMQ   '
401 ACSR                   MOVE *ON       ERROR
401 ACSR                   MOVE $LMSG     #MSGK
401 ACSR                   EXSR ZMQMSG
401 ACSR                   ENDIF
     C*
222 ACSR                   ENDSR
     C*----------------------------------------------------------------
223 AC*
223 AC*  ZZTRCV   Calculate total qty received for PO
223 AC*
223 ACSR         ZZTRCV    BEGSR
223 AC*
223 ACSR                   Z-ADD0         WOSRC
223 ACSR         PARTKY    SETLLRECORD
223 ACSR                   MOVE *OFF      STOP
223 ACSR         STOP      DOUEQ*ON
223 ACSR         PARTKY    READERECORD                   79
223 ACSR         *IN79     IFEQ *ON
223 ACSR                   MOVE *ON       STOP
223 ACSR                   ELSE
223 ACSR                   ADD  PDQRC1    WOSRC
223 ACSR                   ADD  PDQRC2    WOSRC
223 ACSR                   ADD  PDQRC3    WOSRC
223 ACSR                   ENDIF
223 ACSR                   ENDDO
     C*
223 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*
221 AC*  ZZXOPT   Get use extended description option
     C*
221 ACSR         ZZXOPT    BEGSR
     C*
221 AC*   Get extended description option.
221 ACSR                   Z-ADD10        PRCREC  20
221 ACSR                   MOVE '0'       UXFLAG  1
221 ACSR                   MOVE '*ITEMMNT'OCODE   8
     C*
221 ACSR         OPKEY     CHAINOPTIONS              79
221 ACSR         *IN79     IFEQ *OFF
221 ACSR         OPXDSC    IFEQ 'Y'
221 ACSR                   MOVE '1'       UXFLAG  1
221 ACSR                   Z-ADD5         PRCREC
219 ACSR                   ENDIF
219 ACSR                   ENDIF
     C*
219 ACSR                   ENDSR
     C*
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
 1 2 4 5 7 8 9111213 X
**  OPTLN - Option display line
  1=Receive  2=Change  4=Delete  5=View  7=Quick receive  8=Work with ti/hi
  9=Tranactions  11=HACCP info  12=Work w/slots  13=View receiving  X=Check
  99=View directed putaway tracking

**  CMDLN - Command display line
F3=Exit  F5=Refresh  F6=Create  F9=Item  F12=Cancel  F23=More options
