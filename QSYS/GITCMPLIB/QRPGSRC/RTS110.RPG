     F*----------------------------------------------------------------
     F*
     F*  RTS110   Returns StuffIt
     F*  03 February 2004
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
417 AF*    02/03/04  DAS  417
     F*      - Created.
500aAF*    12/06/04  RH   5.00a
     F*      - Fix: Add $LITM3 to return item from UPC lookup.
510aAF*    11/27/06  RH   5.10a
     F*      - Fix: W1UP20 value was not being set.
700aA*    11/03/16  LMC  7.00a
     *      - Enh: UPC file has a database change. Recompile only.
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FRTS110FMCF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
     F                                        RECNO KSFILE D16SFL
     F                                        MSGK  KSFILE MSGREC
     F                                        MSGK  KSFILE M16REC
     FWORKOPT UF  E           K        DISK                      A
     FSLOT3   IF  E           K        DISK
     F            SLREC                             KRENAMERECORD
     FPIRITEM IF  E           K        DISK
     F*
     FSLOT2   IF  E           K        DISK
     F            SLREC                             KRENAMERECORDU
     FLABEL   O   E           K        DISK                      A
     FPIRUSER IF  E           K        DISK
     FUPC     IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    ZOPT   20  20  2
     E                    OPTLN   1   1 75
     E                    CMDLN   1   1 79
     E                    DESC    1   5 40
     I*----------------------------------------------------------------
     I*  External data structure for Dakota Realtime Interface.
     I*
     I$SLOT     E DSC#SLOTDDS
     I              '*NOUPDATE*'          C         @NOUPD
     I              '%SET2VFY'            C         @VFYSL
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I I            0                         1   30SLWHSE
     I                                        4  18 SLITEM
     I                                       19  20 SLSTAT
     I                                       21  21 SLPICK
     I I            0                        22  220SLPRTY
     I I            0                        23  300SLEXPD
     I I            0                        31  380SLENTD
     I                                       39  43 SLWHDP
     I                                       44  44 SLSTYP
     I                                       45  47 SLAISL
     I I            0                        48  520SLPSEQ
     I I            0                        53  540SLRLVL
     I                                       55  56 SLHAND
     I*
     I            DS
     I                                        1  50 DSUKEY
     I I            0                         1   30UKWHSE
     I                                        4   8 UKWHDP
     I                                        9  20 UKDISP
     I                                       21  35 UKITEM
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              '*NONE'               C         @CHGPG
     I              '*NONE'               C         @VEWPG
     I              '*NONE'               C         @DELPG
     I              '*NONE'               C         @PRTPG
     I              'ADJTRAN2 '           C         @ADJT2
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I                                       22  26 $PWHDP
     I                                       27  38 $PDISP
     I                                       39  53 $PITEM
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I                                       22  36 $LITEM
     I                                       22  36 $LITM1
     I                                       22  41 $LUPC
500aAI                                       42  56 $LITM3
     I*
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I I            0                        33  380$CVD6O
     I I            0                        39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Replenishment error messages(s).
     I*
     I              'Slot not available'  C         MSG101
     I              'for replenishment.'  C         MSG102
     I              'Expired:'            C         MSG103
     I              'Try new slot. '      C         MSG104
     I*
     I              'Slot has expired  '  C         MSG201
     I              'product.'            C         MSG202
     I*
     I              'Slot selected out'   C         MSG301
     I              'of FIFO order.'      C         MSG302
     I*
     I*----------------------------------------------------------------
     I*  API programs
     I*
     I              'APICVTSLT '          C         @APICS
     I*----------------------------------------------------------------
     I*  Working fields.
     I*
     I            DS
     I                                        1   4 LOTTRK
     I                                        5   8 LICTRK
     I              'Scan license plate'  C         LLP01
     I              'Scan lot number   '  C         LLP02
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
     I*
     I*                                      16  27 ERDISP
     I                                        1  12 ERDISP
     I*
     I                                        1  60 ERDMSG
     I                                       61  70 ERDRTN
     I                                       71  80 ERDCMD
     I                                       81  90 ERDSUB
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*
     I            DS
     I                                        3   4 WKYY
     I                                        5   6 WKMM
     I                                        7   8 WKDD
     I                                        1   80WKEXPD
     I            DS
     I                                        1   60DSHMS
     I                                        1   40DSHM
     I                                        1   20DSHH
     I                                        3   40DSMM
     I                                        5   60DSSS
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  PIRTRAN record layout for use as parameters
     I*
     IPTPARM    E DSPIRTRAN
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     C*----------------------------------------------------------------
     C*
     C*  Define keys
     C*
     C*     WORKOPT  (Unique key)
     C*
     C           WKOUNQ    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           WKOKYF
     C                     KFLD           WKOKYU
     C*
     C*     WORKOPT  (Partial key)
     C*
     C           WKOPRT    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     C           *LIKE     DEFN WKOKYF    $WKOF
     C           *LIKE     DEFN WKOKYU    $WKOU
     C           DELTOP    KLIST
     C                     KFLD           #USER
     C                     KFLD           #PROG
     C                     KFLD           $WKOF
     C                     KFLD           $WKOU
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE '1'       *IN97
     C                     EXSR ZZINZ2
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C           NXTSCR    CASEQ'03 '     SC3
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
     C*                    SETON                     LR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KL
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
     CSR                   READ SCANREC                  50
     CSR                   END
     CSR         NXTSCR    IFEQ '03 '
     CSR                   EXFMTSCREEN3                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     202122
     CSR                   SETOF                     0323
     CSR                   SETOF                     98
     CSR                   MOVE '0'       WARN    1
     CSR                   MOVE '0'       ERROR   1
     CSR                   MOVE '0'       CANCEL  1
     CSR                   MOVE *OFF      REDSPL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR         NXTSCR    IFEQ '02 '
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   READ D16SFC                   50
     CSR                   OTHER
     CSR                   READ DSPSFC                   50
     CSR                   ENDSL
     CSR                   END
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR         REFRSH    IFEQ *ON
     CSR                   EXSR ZZFIL1
     CSR                   ENDIF
     CSR                   MOVE *OFF      REFRSH  1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 03 initialization
     C*
     CSR         SCR03I    BEGSR
     CSR                   MOVE '03 '     NXTSCR  3
     CSR                   WRITECLR0306
     CSR         REFRSH    IFEQ *ON
     CSR                   EXSR ZZFIL3
     CSR                   ENDIF
     CSR                   MOVE *OFF      REFRSH  1
     CSR         END03I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC3  -  Screen 3
     C*
     CSR         SC3       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC3
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR03I
     CSR                   GOTO ENDSC3
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   EXSR SCR02I
     CSR                   GOTO ENDSC3
     CSR                   END
     CSR                   EXSR ZZCMD3
     CSR         CMDTKN    CABEQ*ON       ENDSC3
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK3
     CSR         ERROR     CABEQ*ON       ENDSC3
     CSR                   EXSR ZZUPD3
     CSR         ERROR     CABEQ*ON       ENDSC3
     C*
     CSR         ENDSC3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ'0'
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   MOVE *ZEROS    OPTCNT  30
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR F3 - EXIT
     C*
     CSR         *INKC     IFEQ '1'
     CSR                   EXSR ZZABRT
     CSR                   EXSR SCR01I
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*  TEST FOR F12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ '1'
     CSR                   EXSR ZZABRT
     CSR                   EXSR SCR01I
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR F5 - REFRESH
     C*
     CSR         *INKE     IFEQ '1'
     CSR                   EXSR CLRSCH
     CSR         1         DO   DSPLYD    X
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR         X         CHAIND16SFL               79
     CSR                   OTHER
     CSR         X         CHAINDSPSFL               79
     CSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '  '      OPTION
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   UPDATD16SFL
     CSR                   OTHER
     CSR                   UPDATDSPSFL
     CSR                   ENDSL
     CSR                   END
     CSR                   END
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       CMD02E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR F10 - MOVE RECORD THAT CUSOR IS ON TO TOP
     C*
     CSR         *INKJ     IFEQ '1'
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
     CSR                   SUB  10        ROW#
     CSR         ROW#      IFLT 1
     CSR         ROW#      ORGT DSPLYD
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0106
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE UKEY,ROW# $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       CMD02E
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*  TEST FOR F17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ '1'
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*  TEST FOR F18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ '1'
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO CMD02E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ENT02E
     C*
     C*  CHECK IF SLOT WAS ENTERED.
     C*
     CSR         W2DISP    IFNE *BLANKS
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENT02E
     CSR         REDSPL    CABEQ*ON       ENT02E
     CSR         CANCEL    CABEQ*ON       ENT02E
     CSR                   MOVELW2DISP    $DISP  12
     CSR                   MOVE DSUKEY    $PUKY
     CSR                   EXSR ZZUPD2
     CSR                   GOTO ENT02E
     CSR                   END
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are DIFFERENT.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   EXSR ZZKEYI
     C**                   MOVE *BLANKS   $POUKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR         FILEKY    SETLLRECORD
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE '0'       OTAKEN  1
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE '0'       CANCEL  1
     CSR                   MOVE '0'       STOP    1
     CSR         STOP      DOUEQ'1'
     CSR         CANCEL    OREQ '1'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE '1'       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE '1'       REFRSH
     CSR         ERROR     IFEQ '0'
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ '1'
     CSR                   MOVE '1'       STOP
     CSR         ERROR     IFEQ '1'
     CSR                   MOVE '1'       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG02
     CSR                   MOVE '0'       REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ '1'
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   MOVE '0'       REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS2   Execute individual options
     C*
     CSR         OPTNS2    BEGSR
     CSR                   EXSR INZPAR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     CSR                   SELEC
     C*
     C*   Select slot for putaway.
     C*
     CSR         WKOOPT    WHEQ ' 1'
     CSR                   MOVE $PUKY     DSUKEY
     CSR                   EXSR ZZSLCT
     C*
     CSR                   OTHER
     CSR                   EXSR ZZOPT
     CSR                   ENDSL
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE '1'       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE '1'       CANCEL
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG02E
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE '1'       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ'1'       PAG02E
     CSR                   MOVE '0'       BOT
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       FORCEB
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ'1'       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE '0'       BOT     1
     CSR                   MOVE '0'       TOP     1
     CSR                   MOVE '0'       STOP    1
     CSR                   MOVE *OFF      OFFLAG  1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 8 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN  7
     CSR                   GOTO ENDFWD
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 8 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
     C**         P         IFGE 10
     C*R         P         IFGE 3
     CSR         RECNO     IFGE 3
     CSR         #LLINE    ANDNE'16'
     CSR         RECNO     ORGE 10
     CSR         #LLINE    ANDEQ'16'
     CSR                   MOVE '1'       STOP
     CSR         FORCEB    IFEQ '1'
     CSR                   MOVE '1'       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFWD    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE '0'       FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ'1'       ENDB
     CSR                   MOVE '0'       FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     C**         DSPLYD    ADD  10        GOBACK  20
     C*R         DSPLYD    ADD  8         GOBACK  20
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR         DSPLYD    ADD  10        GOBACK
     CSR                   OTHER
     CSR         DSPLYD    ADD  3         GOBACK  20
     CSR                   ENDSL
     CSR         BOT       IFEQ '1'
     C**         GOBACK    IFEQ 10
     C*R         GOBACK    IFEQ 8
     CSR         GOBACK    IFEQ 3
     CSR         #LLINE    ANDNE'16'
     CSR         GOBACK    OREQ 10
     CSR         #LLINE    ANDEQ'16'
     CSR                   MOVE '1'       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE '0'       TOP
     CSR                   MOVE '0'       BOT
     CSR                   MOVE '0'       STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ'1'
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '1'       STOP
     CSR                   MOVE '1'       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE '1'       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ '1'
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL02E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ'1'       ROL02E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE '0'       NOMORE  1
     C*R                   MOVE *ZEROS    OPTCNT  30
     CSR         NOMORE    DOUEQ'1'
     C*R                   MOVE '0'       *IN21
     CSR                   MOVE '0'       *IN85
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   READCD16SFL                   79
     CSR                   OTHER
     CSR                   READCDSPSFL                   79
     CSR                   ENDSL
     CSR         *IN79     IFEQ '1'
     CSR                   MOVE '1'       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    LOKUPZOPT                     50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVE '1'       *IN85
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    IFEQ ' 1'
     CSR                   ADD  1         OPTCNT
     CSR         OPTCNT    IFGT 1
     CSR                   MOVE '1'       ERROR
     CSR                   MOVE '1'       *IN21
     CSR                   MOVELDESC,4    ERRMSG    P
     CSR                   EXSR ZM0105
     CSR                   ENDIF
     C*
     C*    Force SFLNXTCHG to be on each time.
     CSR                   MOVE '1'       *IN85
     CSR                   ENDIF
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
     CSR                   Z-ADDRECNO     Y       30
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ '0'
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     C*R                   MOVE *IN21     WKOERR
     CSR                   MOVE *IN85     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     C*R                   MOVE *IN21     WKOERR
     CSR                   MOVE *IN85     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
     C*R         RECNO     IFLT 11
     CSR         RECNO     IFLT 3
     CSR         #LLINE    ANDNE'16'
     CSR         RECNO     ORLT 10
     CSR         #LLINE    ANDEQ'16'
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITED16SFL
     CSR                   OTHER
     CSR                   WRITEDSPSFL
     CSR                   ENDSL
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE '0'       *IN01
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITED16SFC
     CSR                   OTHER
     CSR                   WRITEDSPSFC
     CSR                   ENDSL
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     C*R                   WRITEOPTREC
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEC16REC
     CSR                   OTHER
     CSR                   WRITECMDREC
     CSR                   ENDSL
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     C*R                   WRITEMORREC16
     CSR                   OTHER
     C*R                   WRITEMORREC
     CSR                   ENDSL
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNREC
     C*R                   WRITESCANREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE '1'
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR         1         CHAIND16SFL               79
     CSR                   OTHER
     CSR         1         CHAINDSPSFL               79
     CSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '1'       *IN20
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   UPDATD16SFL
     CSR                   OTHER
     CSR                   UPDATDSPSFL
     CSR                   ENDSL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITED16SFC
     CSR                   OTHER
     CSR                   WRITEDSPSFC
     CSR                   ENDSL
     CSR                   WRITESCANREC
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
     C*R         1         DO   10        X       30
     C*R         1         DO   3         X       30
     CSR         1         DO   DSPLYD    X       30
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR         X         CHAIND16SFL               79
     CSR                   OTHER
     CSR         X         CHAINDSPSFL               79
     CSR                   ENDSL
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ '0'
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN85
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE '0'       *IN21
     CSR                   MOVE '0'       *IN20
     CSR                   MOVE '0'       *IN85
     CSR                   END
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   UPDATD16SFL
     CSR                   OTHER
     CSR                   UPDATDSPSFL
     CSR                   ENDSL
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE '0'       *IN97
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEM16CTL
     CSR                   OTHER
     CSR                   WRITEMSGCTL
     CSR                   ENDSL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEM16CLR
     CSR                   OTHER
     CSR                   WRITEMSGCLR
     CSR                   ENDSL
     CSR                   MOVE '1'       *IN97
     CSR         MSGK      IFGT 0
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEM16CTL
     CSR                   OTHER
     CSR                   WRITEMSGCTL
     CSR                   ENDSL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEM16REC
     CSR                   OTHER
     CSR                   WRITEMSGREC
     CSR                   ENDSL
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     CSR                   WRITEM16REC
     CSR                   OTHER
     CSR                   WRITEMSGREC
     CSR                   ENDSL
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   SELEC
     CSR         #LLINE    WHEQ '16'
     C*R                   WRITECLRSCR
     CSR                   OTHER
     C*R                   WRITECLRSCR
     CSR                   ENDSL
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   DRI0001  Interface error.
     C*
     CSR         ZM0001    BEGSR
     CSR                   MOVELDRIMSG    TEMPA2  2
     CSR         TEMPA2    IFEQ 'H:'
     CSR                   MOVE 'DRI0002' #MSGID
     CSR                   MOVE DRIMSG    A58    58
     CSR                   MOVELA58       DRIMSG    P
     CSR                   ELSE
     CSR                   MOVE 'DRI0001' #MSGID
     CSR                   ENDIF
     CSR                   MOVE DRIMSG    ERDMSG
     CSR                   MOVE DRIRTN    ERDRTN
     CSR                   MOVE DRICMD    ERDCMD
     CSR                   MOVE DRISUB    ERDSUB
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
223 AC*   PIR0204  Enter only one value.
223 AC*
223 ACSR         ZM0204    BEGSR
223 ACSR                   MOVE 'PIR0204' #MSGID
223 ACSR                   MOVE '*DIAG  ' #MSGTP
223 ACSR                   MOVE *BLANKS   $MD
223 ACSR                   EXSR ZMPMSG
223 ACSR                   ENDSR
223 AC*----------------------------------------------------------------
223 AC*   PIR0205  Must enter one value.
223 AC*
223 ACSR         ZM0205    BEGSR
223 ACSR                   MOVE 'PIR0205' #MSGID
223 ACSR                   MOVE '*DIAG  ' #MSGTP
223 ACSR                   MOVE *BLANKS   $MD
223 ACSR                   EXSR ZMPMSG
223 ACSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM04     Slot record does not exist.
     C*
     CSR         ZM04      BEGSR
     CSR                   MOVE 'IT13204' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE W2DISP    ERDISP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT27101  SLOT
     C*
     CSR         ZM7101    BEGSR
     CSR                   MOVE 'IT27101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZM0110   Quantity must be greater than 0.
     C*
     CSR         ZM0110    BEGSR
     CSR                   MOVE 'PIR0110' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELDESC,1    ERRMSG    P
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR2007  Invalid slot, slot inactive.
     C*
     CSR         ZM2007    BEGSR
     CSR                   MOVE 'PIR2007' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    LP11022  License not on file.
     C*
     CSR         ZM022     BEGSR
     CSR                   MOVE 'PO20029' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *BLANKS   WSITEM 15
     C*
     C*  Verify warehouse code.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify warehouse department
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Must enter one, either item or UPC
     C*
     CSR         W1ITEM    IFEQ *BLANKS
     CSR         W1UPC     ANDEQ*BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   EXSR ZM0205
     CSR                   ENDIF
     C*
     C*  Verify UPC
     C*
     CSR                   SELEC
     C*  UPC entered
     CSR         W1UPC     WHNE *BLANKS
     CSR         W1ITEM    IFEQ *BLANKS
     C*
     CSR                   MOVE '*UPC    '$CBCMD
     CSR                   MOVELW1UPC     $CBBAR
     CSR                   CALL 'CVTBAR'
     CSR                   PARM           $CBCMD  8
     CSR                   PARM           $CBBAR100
     CSR                   PARM           $CBCOD  30
     CSR                   PARM           $CBDEC  10
     CSR                   PARM           $CBDSC 30
     CSR                   PARM           $CBPOS  30
     CSR                   PARM           $CBTYP  10
     CSR                   PARM           $CBV1  113
     CSR                   PARM           $CBV2  50
     CSR                   PARM           $CBRTN  8
     CSR                   PARM           $CBERM 60
     C*
     CSR         $CBRTN    IFEQ '*OK'
     CSR                   MOVEL$CBV2     W1UPC
     CSR                   MOVEL$CBV2     W1UP20
     CSR                   ENDIF
510a C*   Move vlaue to 20 character field.
510a CSR                   MOVEL$CBV2     W1UP20
     C*
     C*   Right adjust UPC code for file.
     C*
     CSR                   MOVEL*BLANKS   $CSTR
     CSR                   MOVELW1UPC     $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*RIGHT  '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVE $CSTR     W1UPC
     C*   Check if mulitple items exist for one UPC code.
     C*    UPCCTR = 0, error, upc code not found.
     C*    UPCCTR = 1, only one upc found, process for item.
     C*    UPCCTR > 1, multiple upc found, need to select item.
     CSR                   Z-ADD0         UPCCTR  30
     CSR         UPCKEY    SETLLUPC
     CSR         FOREVR    DOWEQFOREVR
     CSR         UPCKEY    READEUPC                      79
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ELSE
     CSR                   ADD  1         UPCCTR
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     CSR         UPCCTR    IFEQ 0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   EXSR ZM022
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
     C*
     C*   Multiple items exist for UPC
     CSR         UPCCTR    IFGT 1
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1UPC     $LUPC
     CSR                   CALL 'UC920'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
500aMCSR                   MOVE $LITM3    UPITEM
500aDC**                   MOVE $LITEM    UPITEM
     C*
     CSR                   ENDIF
     CSR                   MOVE UPITEM    WSITEM
     C*
     CSR                   ELSE
     C*  Error, more than one value entered.
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0204
     CSR                   GOTO ENDCK1
     CSR                   ENDIF
     C*
     CSR                   ENDSL
     C*
     C*  Get item # from other field entered.
     C*
     CSR         W1ITEM    IFEQ *BLANKS
     CSR         WSITEM    ANDNE*BLANKS
     CSR                   MOVE WSITEM    W1ITEM
     CSR                   ENDIF
     C*
     C*  Verify ITEM
     C*
     CSR         W1ITEM    IFNE *BLANKS
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1ITEM    $LITM1
     CSR                   CALL 'IT900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE '*NO '    RTVSLT
     C*
     CSR                   MOVE *OFF      NOSLT   1
     C*
     C*  SLOT not entered.
     C*
     CSR         W2DISP    IFEQ *BLANKS
     CSR                   MOVE *ON       NOSLT
     CSR                   MOVE *BLANKS   WOSLT  12
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     C*  Call API for slot.
     C*
     CSR                   CALL @APICS
     CSR                   PARM           W2DISP
     CSR                   PARM 1         WOROW
     CSR                   PARM 27        WOCOL
     CSR                   PARM           @ARTN   8
     CSR         @ARTN     IFEQ '*REDSPLY'
     CSR                   MOVE *ON       REDSPL
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     C*  Verify Slot
     C*
     CSR                   EXSR ZZZISF
     CSR                   MOVE *ON       SUWHSE
     CSR                   Z-ADDW1WHSE    S$WHSE
     CSR                   MOVE *ON       SUWHDP
     CSR                   MOVE W1WHDP    S$WHDP
     CSR                   MOVE *ON       SUDISP
     CSR                   MOVE W2DISP    S$DISP
     CSR                   MOVEL'%GET'    DRISUB    P
     CSR                   MOVEL*BLANKS   DRIRTN
     CSR                   MOVE *ON       CK4ERR  1
     CSR                   MOVE *OFF      DRIZM
     CSR                   EXSR ZZZCOP
     C*
     CSR         DRIERR    IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM04
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     CSR                   EXSR ZZZD2S
     C*
     C*    Scanned slot not active.
     CSR         S$STAT    IFNE 'A '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM2007
     CSR                   GOTO ENDCK2
     CSR                   ENDIF
     C*
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK3   Screen 3 error checking.
     C*
     CSR         ZZCHK3    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *OFF      *IN23
     CSR                   MOVE *OFF      *IN03
     C*
     C*  Quantity can not be less than or equal to 0.
     C*
     CSR         W3QTY     IFLE 0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE 'XXXXX'   ERRMSG
     CSR                   EXSR ZM0110
     CSR                   ENDIF
     CSR         ENDCK3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN  1
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ '1'
     CSR                   MOVE '1'       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   SELEC
     C*
     C*     Warehouse.
     C*
416aDC**         ROW#      WHEQ 7
416aMCSR         ROW#      WHEQ 2
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    W1WHSE
     CSR                   ENDIF
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD3   User defined command keys for screen 3.
     C*
     CSR         ZZCMD3    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     CSR         ENDCM3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     C*R         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     CSR         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    READERECORD                   79
     CSR         *IN79     CABEQ*ON       ENDGTN
     CSR         SLSTAT    IFNE 'A '
     CSR                   GOTO TRY1
     CSR                   ENDIF
     C*
     CSR         ENDGTN    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         PARTKY    REDPERECORD                   79
     CSR         *IN79     CABEQ*ON       ENDGTP
     CSR         SLSTAT    IFNE 'A '
     CSR                   GOTO TRY2
     CSR                   ENDIF
     C*
     CSR         ENDGTP    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
     CSR                   MOVE *BLANKS   W2DISP
     C*   Change priority from negative to positive.
     C*
     CSR                   Z-SUBSLPRTY    W1PRTY
     C*
     C*   Expiration date
     C*
     CSR                   Z-ADDSLEXPD    SVEXPD
     CSR         SLEXPD    IFEQ 0
     CSR                   Z-ADD0         W1EXPD
     CSR                   ELSE
     CSR                   MOVE '*CMDMDY '$CVCMD
     CSR                   MOVE SLEXPD    $CVD8I
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD6O    W1EXPD
     CSR                   END
     C*
     C*   Entered date
     C*
     CSR         SLENTD    IFEQ 0
     CSR                   Z-ADD0         W1ENTD
     CSR                   ELSE
     CSR                   MOVE '*CMDMDY '$CVCMD
     CSR                   MOVE SLENTD    $CVD8I
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     CSR                   Z-ADD$CVD6O    W1ENTD
     CSR                   END
     C*
     C*    Create a quantity string to print.
     C*
     CSR                   CALL 'SLOTQTY'
     CSR                   PARM           SLSTK1
     CSR                   PARM           SLSTK2
     CSR                   PARM           SLSTK3
     C*
     CSR                   PARM           SLALC1
     CSR                   PARM           SLALC2
     CSR                   PARM           SLALC3
     C*
     CSR                   PARM           SLTFR1
     CSR                   PARM           SLTFR2
     CSR                   PARM           SLTFR3
     C*
     CSR                   PARM           SLPCK1
     CSR                   PARM           SLPCK2
     CSR                   PARM           SLPCK3
     C*
     CSR                   PARM           SLRCV1
     CSR                   PARM           SLRCV2
     CSR                   PARM           SLRCV3
     C*
     CSR                   PARM           STOCK1  50
     CSR                   PARM           STOCK2  30
     CSR                   PARM           STOCK3  30
     C*
     CSR                   PARM           AVAIL1  50
     CSR                   PARM           AVAIL2  30
     CSR                   PARM           AVAIL3  30
     C*
     CSR                   MOVE '*QTY2STR'$PCMD
     CSR                   Z-ADDAVAIL1    $PQTY1
     CSR                   Z-ADDAVAIL2    $PQTY2
     CSR                   Z-ADDAVAIL3    $PQTY3
     CSR                   MOVE *BLANKS   $PQSTR
     C*
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $PCMD   8
     CSR                   PARM           $PPRG  10
     CSR                   PARM           $PQTY1  70
     CSR                   PARM           $PQTY2  70
     CSR                   PARM           $PQTY3  70
     CSR                   PARM           $PUM1   2
     CSR                   PARM           $PUM2   2
     CSR                   PARM           $PUM3   2
     CSR                   PARM           $PQSTR 10
     CSR                   PARM           $PUSTR 17
     CSR                   PARM           $PRTN   8
     CSR                   PARM           $PERM
     C*
     CSR                   MOVE $PQSTR    W1QTY
     C*
     C*   User
     C*
     C*R                   MOVELIQADJB    W1ADJB
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     CSR                   CALL 'GETWHSE'
     CSR                   PARM           #USER
     CSR                   PARM 0         #WHSE   30
     C*
     CSR                   Z-ADD#WHSE     W1WHSE
     CSR                   MOVE *BLANKS   W1WHDP
     CSR                   MOVE *BLANKS   W1UPC
     CSR                   MOVE *BLANKS   W1ITEM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL3   Fill screen 3 fields with info from file.
     C*
     CSR         ZZFIL3    BEGSR
     CSR                   Z-ADD0         W3QTY
     CSR                   Z-ADD0         W3EXPD
     CSR         ITFLGD    IFEQ 'Y'
     CSR                   MOVE *ON       *IN91
     CSR                   ELSE
     CSR                   MOVE *OFF      *IN91
     CSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     CSR                   MOVE *OFF      FOREVR  1
     CSR                   Z-ADD0         CURTRN  70
     CSR                   MOVE *ZEROS    WOROW
     CSR                   MOVE *ZEROS    WOCOL
     CSR                   MOVE *BLANKS   CURTSK  6
     CSR                   MOVE *BLANKS   CURTYP  1
     CSR                   MOVE *OFF      CURENT  1
     CSR                   MOVE *BLANKS   MSGTYP  8
     CSR                   MOVE '*NO '    RTVSLT  4
     CSR         *LIKE     DEFN PTSTIM    ZZSTIM
     CSR         *LIKE     DEFN PTETIM    ZZETIM
     CSR         *LIKE     DEFN PTSDTE    ZZSDTE
     CSR         *LIKE     DEFN PTEDTE    ZZEDTE
     CSR         *LIKE     DEFN PTSTIM    STRTIM
     CSR         *LIKE     DEFN PTETIM    FINTIM
     CSR         *LIKE     DEFN TODAY     TSTDTE
     CSR         *LIKE     DEFN TODAY     CKEXPD
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           UKWHSE
     CSR                   KFLD           UKWHDP
     CSR                   KFLD           UKDISP
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           SLWHSE
     CSR                   KFLD           SLITEM
     CSR                   KFLD           SLSTAT
     CSR                   KFLD           SLPICK
     CSR                   KFLD           SLPRTY
     CSR                   KFLD           SLEXPD
     CSR                   KFLD           SLENTD
     CSR                   KFLD           SLWHDP
     CSR                   KFLD           SLSTYP
     CSR                   KFLD           SLAISL
     CSR                   KFLD           SLPSEQ
     CSR                   KFLD           SLRLVL
     CSR                   KFLD           SLHAND
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1ITEM
     C*
     C*  Define key for item file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1ITEM
     C*
     C*  Define key for warehouse department.
     C*
     CSR         WDKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     C*
     C*  Define key for SLOT file.
     C*
     CSR         SLKEY     KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           W2DISP
     C*
     C*  Define key for SLOT2 file. (From slot)
     C*
     CSR         SLFKEY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           $DISP
     C*
     C*  Define key for SLOT2 file. (To slot)
     C*
     CSR         SLTKEY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           W2DISP
     C*
     C*  Define key for SLOT2 file.
     CSR         *LIKE     DEFN SLDISP    KYDISP
     CSR         SLFIKY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1WHDP
     CSR                   KFLD           KYDISP
     C*
     C*  Define key for SLOT3 file.
     CSR         *LIKE     DEFN SLSTAT    KEYSTA
     CSR         *LIKE     DEFN SLPICK    KYPICK
     CSR         *LIKE     DEFN SLPRTY    KYPRTY
     CSR         *LIKE     DEFN SLEXPD    KYEXPD
     CSR         SLKY3A    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1ITEM
     CSR                   KFLD           KEYSTA
     CSR                   KFLD           KYPICK
     CSR                   KFLD           KYPRTY
     CSR                   KFLD           KYEXPD
     C*
     CSR         SLKY3B    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1ITEM
     CSR                   KFLD           KEYSTA
     CSR                   KFLD           KYPICK
     C*
     CSR         *LIKE     DEFN USEMP#    W1EMP#
     CSR         *LIKE     DEFN USSTYP    W1STYP
     CSR         *LIKE     DEFN USSHFT    W1SHFT
     CSR         *LIKE     DEFN USCREW    W1CREW
     CSR         USKEY     KLIST
     CSR                   KFLD           #USER
     C*
     CSR         USKEY     CHAINPIRUSER              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE USWHSE    W1WHSE
     CSR                   MOVE USWHDP    W1WHDP
     CSR                   Z-ADDUSEMP#    W1EMP#
     CSR                   MOVE USSTYP    W1STYP
     CSR                   MOVE USSHFT    W1SHFT
     CSR                   MOVE USCREW    W1CREW
     CSR                   ELSE
     CSR                   Z-ADD0         W1EMP#
     CSR                   MOVE *BLANKS   W1STYP
     CSR                   MOVE *BLANKS   W1SHFT
     CSR                   MOVE *BLANKS   W1CREW
     CSR                   ENDIF
     C*
     CSR         UPCKEY    KLIST
     CSR                   KFLD           W1WHSE
     CSR                   KFLD           W1UP20 20
     C*
     C*  Setup option and command display lines.
     C*
     CSR                   MOVE OPTLN,1   OPTLN1 75
     CSR                   MOVE CMDLN,1   CMDLN1
     C*
     C*  Convert today's date into century format.
     C*
     C*  Moved date retrieve code into ZZINZ2 to be done every time
     C*  program is called.
     C*R                   MOVE '*CURCMD '$CVCMD
     C*R                   CALL @CVTDT
     C*R                   PARM           $CVTDT
     C*R                   Z-ADD$CVD8O    TODAY   80
     C*
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $CVPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Initailization for each time program is called.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   EXSR ZZCVDT
     CSR                   Z-ADD$CVD8O    TODAY   80
417bAC*
417bAC*   Get screen size being used.
417bAC*
417bACSR                   CALL 'PIRRFSCR'
417bACSR                   PARM '*GET'    #LCMD   8
417bACSR                   PARM           #LLINE  2
417bACSR                   PARM           #LCOL   3
     C*
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCVDT  Convert date to proper format.
     C*
     CSR         ZZCVDT    BEGSR
     C*
     C*    Convert date into proper format.
     C*
     CSR                   CALL @CVTDT
     CSR                   PARM           $CVTDT
     C*
     CSR         ENDCVD    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYI   Initialize keys for files being used.
     C*           Note: You must clear individual field when using
     C*                 partial keys or one of the fields is numeric.
     C*
     CSR         ZZKEYI    BEGSR
     C*
     C*   Initialize file key (DSFKEY)
     C*
     CSR                   CLEARSLWHSE
     CSR                   CLEARSLITEM
     CSR                   CLEARSLSTAT
     CSR                   CLEARSLPICK
     CSR                   CLEARSLPRTY
     CSR                   CLEARSLEXPD
     CSR                   CLEARSLENTD
     CSR                   CLEARSLWHDP
     CSR                   CLEARSLSTYP
     CSR                   CLEARSLAISL
     CSR                   CLEARSLPSEQ
     CSR                   CLEARSLRLVL
     CSR                   CLEARSLHAND
     C*
     C*   Initialize unique key (DSUKEY)
     C*
     CSR                   CLEARUKWHDP
     CSR                   CLEARUKDISP
     CSR                   CLEARUKITEM
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   Z-ADDSLWHSE    UKWHSE
     CSR                   MOVE SLWHDP    UKWHDP
     CSR                   MOVE SLDISP    UKDISP
     CSR                   MOVE SLITEM    UKITEM
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZABRT   Abort a transaction
     C*
     CSR         ZZABRT    BEGSR
     C*
     C*  Update transaction record.
     C*
     C                     CALL @ADJT2
     C                     PARM '*CLOSE'  @PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM           @PTRN#  70
     C                     PARM ' '       @PTASK  6
     C                     PARM 0         @PWHSE  30
     C                     PARM ' '       @PWHDP  5
     C                     PARM ' '       @PSTYP  1
     C                     PARM 0         @PCUBE  93
     C                     PARM 0         @PSWGT  92
     C                     PARM 0         @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM ' '       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM ' '       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM 0         @PDATE  80
     C                     PARM 0         @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     C*
     C*  Start Idle Task.
     C*
     C                     CALL @ADJT2
     C                     PARM '*CRTSTRT'@PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM 0         @PTRN#  70
     C                     PARM 'IDLE'    @PTASK  6
     C                     PARM W1WHSE    @PWHSE  30
     C                     PARM ' '       @PWHDP  5
     C                     PARM ' '       @PSTYP  1
     C                     PARM 0         @PCUBE  93
     C                     PARM 0         @PSWGT  92
     C                     PARM 0         @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM ' '       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM ' '       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM 0         @PDATE  80
     C                     PARM 0         @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     CSR         ENDABR    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZSLCT   Select a slot for replenishment.
     C*
     CSR         ZZSLCT    BEGSR
     C*
     CSR                   MOVELUKDISP    W2DISP
     CSR                   EXSR ZZCHK2
     CSR         ERROR     CABEQ*ON       ENDSLC
     CSR         CANCEL    CABEQ*ON       ENDSLC
     C*
     CSR                   MOVELSLDISP    $DISP
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR03I
     CSR         ENDSLC    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD1   Update for screen 1.
     C*
     CSR         ZZUPD1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR         W1UPC     IFNE *BLANKS
     CSR                   MOVE UPITEM    W1ITEM
     CSR                   ENDIF
     C*
     C*    Capture date/time user entered program to be used
     C*    for starting transaction. This will more accurately
     C*    reflect when the process started.
     C*
     CSR                   MOVE '*CURCMD '$CVCMD
     CSR                   EXSR ZZCVDT
     CSR                   Z-ADD$CVD8O    TRNDTE  80
     CSR                   TIME           TRNTIM  60
     C*
     C*   Get item description.
     C*
     CSR                   MOVE *BLANKS   WOITEM
     CSR         W1ITEM    CAT  '-':1     WOITEM
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ '0'
     CSR         WOITEM    CAT  ITDESC:1  WOITEM
     CSR                   ENDIF
     C*
     C*  Create/Start transaction
     C*
     C                     CALL @ADJT2
     C                     PARM '*CRTSTRT'@PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM 0         @PTRN#  70
     C                     PARM 'PUTRTN'  @PTASK  6
     C                     PARM SLWHSE    @PWHSE  30
     C                     PARM SLWHDP    @PWHDP  5
     C                     PARM SLSTYP    @PSTYP  1
     C                     PARM 0         @PCUBE  93
     C                     PARM 0         @PSWGT  92
     C                     PARM 0         @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM '0'       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM 'R'       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM TRNDTE    @PDATE  80
     C                     PARM TRNTIM    @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     CSR         @PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE @PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   GOTO ENDUP1
     CSR                   ENDIF
     C*
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR02I
     CSR         ENDUP1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD2   Update for screen 2.
     C*
     CSR         ZZUPD2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ON       REFRSH
     CSR                   EXSR SCR03I
     CSR         ENDUP2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD3   Update for screen 2.
     C*
     CSR         ZZUPD3    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Update slot quantity.
     C*
     CSR                   EXSR ZZZISF
     CSR                   MOVE *ON       SUWHSE
     CSR                   Z-ADDW1WHSE    S$WHSE
     CSR                   MOVE *ON       SUWHDP
     CSR                   MOVE W1WHDP    S$WHDP
     CSR                   MOVE *ON       SUDISP
     CSR                   MOVE W2DISP    S$DISP
     CSR         ITFLGD    IFEQ 'Y'
     CSR                   MOVE *ON       SUEXPD
     CSR                   Z-ADDW1EXPD    S$EXPD
     CSR                   ENDIF
     CSR                   MOVE *ON       SUITEM
     CSR                   MOVE W1ITEM    S$ITEM
     CSR                   MOVE *ON       AUITEM
     CSR                   MOVE W1ITEM    A$ITEM
     CSR                   MOVE *ON       AUQTY
     CSR                   Z-ADDW3QTY     A$QTY1
     CSR                   Z-ADD@PTRN#    A$TRN#
     CSR                   MOVE @PTASK    A$TASK
     CSR                   MOVEL'%CLSRCV' DRISUB    P
     CSR                   MOVEL*BLANKS   DRIRTN
     CSR                   MOVE *ON       CK4ERR  1
     CSR                   MOVE *ON       DRIZM
     CSR                   EXSR ZZZCOP
     CSR         DRIERR    IFEQ *ON
     CSR                   GOTO ENDUP3
     CSR                   ENDIF
     C*
     C*  Create label record.
     C*
     C                     CLEARLBREC
     C                     Z-ADDW1WHSE    LBWHSE
     C                     MOVE W1WHDP    LBWHDP
     C                     MOVE W1ITEM    LBITEM
     C                     MOVE S$DISP    LBDISP
     C                     MOVE S$AISL    LBAISL
     C                     Z-ADDS$LOC     LBLOC
     C                     Z-ADDS$RLVL    LBRLVL
     C                     MOVE S$HAND    LBHAND
     C                     Z-ADDS$PSEQ    LBPSEQ
     C                     MOVE S$STYP    LBSTYP
     C           LBSTYP    IFEQ 'P'
     C                     Z-ADD1         LBQRYF
     C                     ELSE
     C                     Z-ADD0         LBQRYF
     C                     ENDIF
     C****                 Z-ADDAVAIL1    LBQAVL
     C***
     C                     MOVE 'N'       LBUTYP
     C****                 MOVE ' '       LBUCOD
     C*
     C                     Z-ADDW3QTY     LBQALC
     C                     Z-ADDW3QTY     LBQPCK
     C                     Z-ADDITCUBE    LBUCUB
     C           LBUCUB    MULT LBQPCK    LBCUBE
     C                     Z-ADDITSWGT    LBUWGT
     C           LBUWGT    MULT LBQPCK    LBSWGT
     C                     Z-ADD@PTRN#    LBTRN#
     C                     Z-ADD0         LBCTR#
     C*     - Get new label number.
     C                     CALL 'PIRLBL#'
     C                     PARM           LBLBL#
     C                     MOVE 'R'       LBGRP1
     C                     MOVE ' '       LBGRP2
     C                     MOVE 'P'       LBTYPE
     C                     MOVE 'C'       LBSTAT
     C                     Z-ADDTODAY     LBSDTE
     C                     TIME           LBSTIM
     C                     Z-ADDTODAY     LBRDTE
     C                     WRITELBREC
     C*
     C*  Update transaction record.
     C*
     C*
     C                     CALL @ADJT2
     C                     PARM '*INCTTL' @PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM           @PTRN#  70
     C                     PARM ' '       @PTASK  6
     C                     PARM 0         @PWHSE  30
     C                     PARM ' '       @PWHDP  5
     C                     PARM ' '       @PSTYP  1
     C                     PARM LBCUBE    @PCUBE  93
     C                     PARM LBSWGT    @PSWGT  92
     C                     PARM LBQPCK    @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM ' '       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM ' '       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM 0         @PDATE  80
     C                     PARM 0         @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     C*
     C*  Close transaction.
     C*
     C                     CALL @ADJT2
     C                     PARM '*CLOSE'  @PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM           @PTRN#  70
     C                     PARM ' '       @PTASK  6
     C                     PARM 0         @PWHSE  30
     C                     PARM ' '       @PWHDP  5
     C                     PARM ' '       @PSTYP  1
     C                     PARM 0         @PCUBE  93
     C                     PARM 0         @PSWGT  92
     C                     PARM 0         @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM ' '       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM ' '       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM 0         @PDATE  80
     C                     PARM 0         @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     C*
     C*  Start Idle Task.
     C*
     C                     CALL @ADJT2
     C                     PARM '*CRTSTRT'@PCMD  10
     C                     PARM           #JOB
     C                     PARM '*BATCH'  @PTYPE  8
     C                     PARM 0         @PTRN#  70
     C                     PARM 'IDLE'    @PTASK  6
     C                     PARM W1WHSE    @PWHSE  30
     C                     PARM ' '       @PWHDP  5
     C                     PARM ' '       @PSTYP  1
     C                     PARM 0         @PCUBE  93
     C                     PARM 0         @PSWGT  92
     C                     PARM 0         @PPCS   50
     C                     PARM 0         @PAISL  50
     C                     PARM 0         @PQTY1  50
     C                     PARM 0         @PQTY2  50
     C                     PARM 0         @PQTY3  50
     C                     PARM ' '       @PRTE   5
     C                     PARM ' '       @PPO    9
     C                     PARM ' '       @PGRP1  1
     C                     PARM ' '       @PGRP2  1
     C                     PARM 0         @PDATE  80
     C                     PARM 0         @PTIME  60
     C                     PARM           #USER
     C                     PARM ' '       @PRTN   8
     C                     PARM ' '       @PMSG   4
     CSR                   EXSR SCR01I
     CSR         ENDUP3    ENDSR
     C*----------------------------------------------------------------
     C*----------------------------------------------------------------
     C*----------------------------------------------------------------
     C*----------------------------------------------------------------
     C*     ZZZD2S - Copy data structure fields into slot fields.
     C*
     CSR         ZZZD2S    BEGSR
     C*
     CSR                   Z-ADDS$WHSE    SLWHSE
     CSR                   MOVE S$WHDP    SLWHDP
     CSR                   MOVE S$DISP    SLDISP
     CSR                   MOVE S$AISL    SLAISL
     CSR                   Z-ADDS$LOC     SLLOC
     CSR                   Z-ADDS$RLVL    SLRLVL
     CSR                   MOVE S$HAND    SLHAND
     CSR                   MOVE S$SIDE    SLSIDE
     CSR                   MOVE S$STYP    SLSTYP
     CSR                   MOVE S$STAT    SLSTAT
     CSR                   Z-ADDS$SDTE    SLSDTE
     CSR                   Z-ADDS$STIM    SLSTIM
     CSR                   MOVE S$SDEF    SLSDEF
     CSR                   MOVE S$DESG    SLDESG
     CSR                   MOVE S$ACTV    SLACTV
     CSR                   MOVE S$BLD     SLBLD
     CSR                   MOVE S$PICK    SLPICK
     CSR                   Z-ADDS$PSEQ    SLPSEQ
     CSR                   Z-ADDS$PRTY    SLPRTY
     CSR                   Z-ADDS$ENTD    SLENTD
     CSR                   Z-ADDS$EXPD    SLEXPD
     CSR                   Z-ADDS$SLFD    SLSLFD
     CSR                   MOVE S$RSRV    SLRSRV
     CSR                   MOVE S$ITEM    SLITEM
     CSR                   Z-ADDS$STK1    SLSTK1
     CSR                   Z-ADDS$STK2    SLSTK2
     CSR                   Z-ADDS$STK3    SLSTK3
     CSR                   Z-ADDS$ALC1    SLALC1
     CSR                   Z-ADDS$ALC2    SLALC2
     CSR                   Z-ADDS$ALC3    SLALC3
     CSR                   Z-ADDS$TFR1    SLTFR1
     CSR                   Z-ADDS$TFR2    SLTFR2
     CSR                   Z-ADDS$TFR3    SLTFR3
     CSR                   Z-ADDS$PCK1    SLPCK1
     CSR                   Z-ADDS$PCK2    SLPCK2
     CSR                   Z-ADDS$PCK3    SLPCK3
     CSR                   Z-ADDS$RCV1    SLRCV1
     CSR                   Z-ADDS$RCV2    SLRCV2
     CSR                   Z-ADDS$RCV3    SLRCV3
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZZZCOP - Copy slot fields into data structure fields.
     C*
     CSR         ZZZCOP    BEGSR
     CSR                   MOVE *OFF      DRIERR  1
     C*
     CSR                   MOVEL$SLOT     DRIDT1
     CSR                   MOVE $SLOT     DRIDT2
     C*
     CSR                   CALL 'DRICOPL'
     CSR                   PARM '*SLOT'   DRICMD 10
     CSR                   PARM           DRISUB 10
     CSR                   PARM 'D'       DRISYS  1
     CSR                   PARM #PROG     DRIPGM 10
     CSR                   PARM           DRIRTN 10
     CSR                   PARM ' '       DRIMSG 60
     CSR                   PARM           DRIDT1256
     CSR                   PARM           DRIDT2256
     C*
     CSR                   MOVELDRIDT1    $SLOT
     CSR                   MOVE DRIDT2    $SLOT
     C*
     CSR         CK4ERR    IFEQ *ON
     CSR         DRIRTN    ANDNE'*OK'
     CSR                   MOVE *ON       DRIERR
     CSR         DRIZM     IFEQ *ON
     CSR                   EXSR ZM0001
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   MOVE *OFF      CK4ERR  1
     CSR                   MOVE *OFF      DRIZM   1
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZZZISF - Initialize slot fields.
     C*
     CSR         ZZZISF    BEGSR
     C*
     CSR                   MOVE *OFF      SUWHSE
     CSR                   Z-ADD0         S$WHSE
     C*
     CSR                   MOVE *OFF      SUWHDP
     CSR                   MOVE *BLANKS   S$WHDP
     C*
     CSR                   MOVE *OFF      SUDISP
     CSR                   MOVE *BLANKS   S$DISP
     C*
     CSR                   MOVE *OFF      SUAISL
     CSR                   MOVE *BLANKS   S$AISL
     C*
     CSR                   MOVE *OFF      SULOC
     CSR                   Z-ADD0         S$LOC
     C*
     CSR                   MOVE *OFF      SURLVL
     CSR                   Z-ADD0         S$RLVL
     C*
     CSR                   MOVE *OFF      SUHAND
     CSR                   MOVE *BLANKS   S$HAND
     C*
     CSR                   MOVE *OFF      SUSIDE
     CSR                   MOVE *BLANKS   S$SIDE
     C*
     CSR                   MOVE *OFF      SUSTYP
     CSR                   MOVE *BLANKS   S$STYP
     C*
     CSR                   MOVE *OFF      SUSTAT
     CSR                   MOVE *BLANKS   S$STAT
     C*
     CSR                   MOVE *OFF      SUSDTE
     CSR                   Z-ADD0         S$SDTE
     C*
     CSR                   MOVE *OFF      SUSTIM
     CSR                   Z-ADD0         S$STIM
     C*
     CSR                   MOVE *OFF      SUSDEF
     CSR                   MOVE *BLANKS   S$SDEF
     C*
     CSR                   MOVE *OFF      SUDESG
     CSR                   MOVE *BLANKS   S$DESG
     C*
     CSR                   MOVE *OFF      SUACTV
     CSR                   MOVE *BLANKS   S$ACTV
     C*
     CSR                   MOVE *OFF      SUBLD
     CSR                   MOVE *BLANKS   S$BLD
     C*
     CSR                   MOVE *OFF      SUPICK
     CSR                   MOVE *BLANKS   S$PICK
     C*
     CSR                   MOVE *OFF      SUPSEQ
     CSR                   Z-ADD0         S$PSEQ
     C*
     CSR                   MOVE *OFF      SUPRTY
     CSR                   Z-ADD0         S$PRTY
     C*
     CSR                   MOVE *OFF      SUENTD
     CSR                   Z-ADD0         S$ENTD
     C*
     CSR                   MOVE *OFF      SUEXPD
     CSR                   Z-ADD0         S$EXPD
     C*
     CSR                   MOVE *OFF      SUSLFD
     CSR                   Z-ADD0         S$SLFD
     C*
     CSR                   MOVE *OFF      SURSRV
     CSR                   MOVE 0         S$RSRV
     C*
     CSR                   MOVE *OFF      SUITEM
     CSR                   MOVE 0         S$ITEM
     C*
     CSR                   Z-ADD0         S$STK1
     CSR                   Z-ADD0         S$STK2
     CSR                   Z-ADD0         S$STK3
     CSR                   Z-ADD0         S$ALC1
     CSR                   Z-ADD0         S$ALC2
     CSR                   Z-ADD0         S$ALC3
     CSR                   Z-ADD0         S$TFR1
     CSR                   Z-ADD0         S$TFR2
     CSR                   Z-ADD0         S$TFR3
     CSR                   Z-ADD0         S$PCK1
     CSR                   Z-ADD0         S$PCK2
     CSR                   Z-ADD0         S$PCK3
     CSR                   Z-ADD0         S$RCV1
     CSR                   Z-ADD0         S$RCV2
     CSR                   Z-ADD0         S$RCV3
     CSR                   Z-ADD0         S$PHY1
     CSR                   Z-ADD0         S$PHY2
     CSR                   Z-ADD0         S$PHY3
     CSR                   Z-ADD0         S$AVL1
     CSR                   Z-ADD0         S$AVL2
     CSR                   Z-ADD0         S$AVL3
     CSR                   Z-ADD0         S$ADJ1
     CSR                   Z-ADD0         S$ADJ2
     CSR                   Z-ADD0         S$ADJ3
     C*
     CSR                   MOVE *OFF      AUITEM
     CSR                   MOVE *BLANKS   A$ITEM
     C*
     CSR                   MOVE *OFF      AUQTY
     CSR                   Z-ADD0         A$QTY1
     CSR                   Z-ADD0         A$QTY2
     CSR                   Z-ADD0         A$QTY3
     C*
     CSR                   MOVE *OFF      AUORG
     CSR                   Z-ADD0         A$ORG1
     CSR                   Z-ADD0         A$ORG2
     CSR                   Z-ADD0         A$ORG3
     C*
     CSR                   MOVE *OFF      AUCWTA
     CSR                   Z-ADD0         A$CWTA
     C*
     CSR                   MOVE *OFF      AUCODE
     CSR                   MOVE *BLANKS   A$CODE
     C*
     CSR                   MOVE *OFF      AUMEMO
     CSR                   MOVE *BLANKS   A$MEMO
     C*
     CSR                   MOVE *OFF      AUBY
     CSR                   MOVE *BLANKS   A$BY
     C*
     CSR                   MOVE *OFF      AUDATE
     CSR                   Z-ADD0         A$DATE
     C*
     CSR                   MOVE *OFF      AUTIME
     CSR                   Z-ADD0         A$TIME
     C*
     CSR                   MOVE *OFF      AUVRFY
     CSR                   MOVE *BLANKS   A$VRFY
     C*
     CSR                   MOVE *OFF      AUTRN#
     CSR                   Z-ADD0         A$TRN#
     C*
     CSR                   MOVE *OFF      AULIC#
     C**                   Z-ADD0         A$LIC#
     CSR                   MOVE *BLANKS   A$LIC#
     C*
     CSR                   MOVE *OFF      AUTASK
     CSR                   MOVE *BLANKS   A$TASK
     C*
     CSR                   MOVE *OFF      AUCDSP
     CSR                   MOVE *BLANKS   A$CDSP
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     ZZZS2D - Copy slot fields into data structure fields.
     C*
     CSR         ZZZS2D    BEGSR
     C*
     CSR                   Z-ADDSLWHSE    S$WHSE
     CSR                   MOVE SLWHDP    S$WHDP
     CSR                   MOVE SLDISP    S$DISP
     CSR                   MOVE SLAISL    S$AISL
     CSR                   Z-ADDSLLOC     S$LOC
     CSR                   Z-ADDSLRLVL    S$RLVL
     CSR                   MOVE SLHAND    S$HAND
     CSR                   MOVE SLSIDE    S$SIDE
     CSR                   MOVE SLSTYP    S$STYP
     CSR                   MOVE SLSTAT    S$STAT
     CSR                   Z-ADDSLSDTE    S$SDTE
     CSR                   Z-ADDSLSTIM    S$STIM
     CSR                   MOVE SLSDEF    S$SDEF
     CSR                   MOVE SLDESG    S$DESG
     CSR                   MOVE SLACTV    S$ACTV
     CSR                   MOVE SLBLD     S$BLD
     CSR                   MOVE SLPICK    S$PICK
     CSR                   Z-ADDSLPSEQ    S$PSEQ
     CSR                   Z-ADDSLPRTY    S$PRTY
     CSR                   Z-ADDSLENTD    S$ENTD
     CSR                   Z-ADDSLEXPD    S$EXPD
     CSR                   Z-ADDSLSLFD    S$SLFD
     CSR                   MOVE SLRSRV    S$RSRV
     CSR                   MOVE SLITEM    S$ITEM
     CSR                   Z-ADDSLSTK1    S$STK1
     CSR                   Z-ADDSLSTK2    S$STK2
     CSR                   Z-ADDSLSTK3    S$STK3
     CSR                   Z-ADDSLALC1    S$ALC1
     CSR                   Z-ADDSLALC2    S$ALC2
     CSR                   Z-ADDSLALC3    S$ALC3
     CSR                   Z-ADDSLTFR1    S$TFR1
     CSR                   Z-ADDSLTFR2    S$TFR2
     CSR                   Z-ADDSLTFR3    S$TFR3
     CSR                   Z-ADDSLPCK1    S$PCK1
     CSR                   Z-ADDSLPCK2    S$PCK2
     CSR                   Z-ADDSLPCK3    S$PCK3
     CSR                   Z-ADDSLRCV1    S$RCV1
     CSR                   Z-ADDSLRCV2    S$RCV2
     CSR                   Z-ADDSLRCV3    S$RCV3
     CSR                   Z-ADD0         S$PHY1
     CSR                   Z-ADD0         S$PHY2
     CSR                   Z-ADD0         S$PHY3
     CSR                   Z-ADD0         S$AVL1
     CSR                   Z-ADD0         S$AVL2
     CSR                   Z-ADD0         S$AVL3
     CSR                   Z-ADD0         S$ADJ1
     CSR                   Z-ADD0         S$ADJ2
     CSR                   Z-ADD0         S$ADJ3
     C*
     CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
 1
**  OPTLN - Option display line
  1=Select
**  CMDLN - Command display line
F3=Exit F5=Refresh F12=Cancel
**  DESC - Description
Available Quantity
Verify Zero
Pick slot not allowed for replenishment.
1=Select can be used only once.
Slot error logged for slot:
