     F*----------------------------------------------------------------
     F*   Copyright (C) 2003 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   245 W. Roosevelt Rd.  Bldg 8, Suite 51
     F*   West Chicago, IL  60185
     F*   (630) 562-0375
     F*----------------------------------------------------------------
     F*
     F*  PO120     PO detail maintenance - Display
     F*  08 October, 1996
     F*  Hemant Kapadia
     F*
     F*  SK110 - 1.01
     F*
     F*  Revisions
     F*
416 AF*    11/26/01  MLB  4.16
     F*      - Added support to program for Super P/O's.
     F*      - Revised program to combine support for Mfr nbr order.
     F*      - Major modifications, code cleaned up, new code not id.
416aAF*    12/04/01  MLB  4.16a
     F*      - Revised ZZWDW3 to load hold fields from subfile into
     F*        DSUKEY fields when record is selected.
416bAF*    12/20/01  MLB  4.16b
     F*      - Revised ZZOPT to unlock PORCV if record found.
416cAF*    12/21/01  MLB  4.16c
     F*      - Revised ZZWDW to not display position to window for
     F*        items or mfg# when only one record in subfile.
     F*        If no items/mfg# are loaded into position to subfile,
     F*        send message and don't display window.
416dAF*    12/27/01  MLB  4.16d
     F*      - Revision to above modification.  If the item/mfg# is
     F*        found on only one p/o in the Super P/O, then position
     F*        to the item and do not display the window.  If the item/
     F*        mfg# not found, then display the window if values found
     F*        that are greater than the value keyed in.
416eAF*    05/23/02  RH   4.16e
    AA*      - PORCV file changed, initialize POREDT and PORETI.
416fAF*    10/31/02  HNK  4.16f
    AA*      - Get putaway method from DEPTDSG file.  Use opposite
     F*        method if record found in this file.
     F*
417 AF*    03/25/03  MLB  4.17
     A*      - Enh: Added new option #14 Rcv exceptions.  This will
     F*        allow users to log receiving exceptions for shorts/outs
     F*        damages etc.
417aAF*    04/03/03  RH   4.17a
     A*      - Enh: Allow multiple items for one UPC code.
     A*        Display window to select or mark for exception.
417bAF*    04/15/03  MLB  4.17b
     A*      - Enh: Extended length of W1UPC to 50 characters and
     F*        renamed field W1UPCD.
417cAF*    05/21/03  RH   4.17c
     A*      - Enh: Only create one exception per item for multiple UPC
417dAF*    05/21/03  RH   4.17d
     A*      - Enh: Write UPC code to EXFDIS & EXTDIS using data struct
417eAF*    05/23/03  MLB  4.17e
     A*      - Enh: Create new option array ZOPT6 for DSPSFL6 subfile.
417fAF*    06/02/03  RH   4.17f
     A*      - FIX: Process 'X' options first, then '1' for select on
     A*        window 6 (multiple UPC codes). Was not creating
     A*        exception when X and 1 were entered at the same time.
417gAF*    06/05/03  RH   4.17g
     A*      - FIX: Allow selection of UPC on window.  Was loosing key
     A*        $KPO when UPC item was not on PO.
     F*
     F*----------------------------------------------------------------
     F*
S88 AF*    05/01/03  HNK  S88
     F*      - Revised to not validate UPC code.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  20        POSITION CURSOR
     F*  21 - 29   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  40        Condition heading for Super P/O.
     F*  41        Condition heading for Super P/O window.
     F*  79        CHAIN INDICATOR
     F*  90        PROTECT INPUT FIELDS FOR DELETE DISPLAY
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FPO120FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        RECNO KSFILE DSPSFL
     F                                        RECNO KSFILE DSPSFL1
     F                                        RECNO KSFILE DSPSFL2
     F                                        RECNO KSFILE DSPSFL3
     F                                        RECNO4KSFILE DSPSFL4
     F                                        RECNO4KSFILE DSPSFL5
417a F                                        RECNO4KSFILE DSPSFL6
     F                                        MSGK  KSFILE MSGREC
     F                                        MSGK4 KSFILE MSGREC4
     FWORKOPT UF  E           K        DISK                      A
     FITEMDEF IF  E           K        DISK
     FITEMDSC IF  E           K        DISK
     FITEMLNK IF  E           K        DISK
417a FITEMMSC IF  E           K        DISK
     FOPTIONS IF  E           K        DISK
     FOPTIOND IF  E           K        DISK
     FPIRITEM IF  E           K        DISK
     FPODTL   IF  E           K        DISK
     FPODTL1  IF  E           K        DISK
     F            PDREC                             KRENAMERECORD
     FPODTL2  IF  E           K        DISK
     F            PDREC                             KRENAMERECORD2
     FPODTL3  IF  E           K        DISK
     F            PDJREC                            KRENAMEPTOUCH
     FPOHDR   UF  E           K        DISK
     FPORCV   UF  E           K        DISK                      A
     FPOSPO3  IF  E           K        DISK
     FPO120A  IF  E           K        DISK                           UC
     FPO120B  IF  E           K        DISK                           UC
     FPO120C  IF  E           K        DISK                           UC
     F                                              KINFDS OCINF
     FPO120D  IF  E           K        DISK                           UC
     F                                              KINFDS ODINF
     FSLOT3   IF  E           K        DISK
     FUPC     IF  E           K        DISK
     FWAREHS  IF  E           K        DISK
416FAFDEPTDSG IF  E           K        DISK
417aAFPOSPO   IF  E           K        DISK
417cAFITMEXCP2IF  E           K        DISK
417cAF            EXREC                             KRENAMEXREC2
417aAFITMEXCP O   E           K        DISK                      A
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A2          2  1
     E                    A10        10  1
     E                    A75        75  1
     E                    A80        80  1
     E                    FKEY       10 50
     E                    UKEY       10 50
     E                    $MD       128  1
     E                    OPTLST     24  2
     E                    CMDLST     24  2
     E                    $PODSC      3 63
     E                    ZOPT   20  20  2
417eME                    ZOPT4   1   1  2
417eDE*                   ZOPT4   2   2  2
417ADE*                   ZOPT4   1   1  2
417eAE                    ZOPT6   2   2  2
     E                    OPTLN   1   4 75
     E                    CMDLN   1   5 79
     E                    OVR     1   4 80
     E                    QRY1    1   5 80
     E                    QRY2    1   5 80
     E                    QRY3    1   6 80
     E                    QRY4    1   6 80
     E                    CLS1    1   2 80
     I*----------------------------------------------------------------
     I*  Partial key redefinition
     I*
     I$PRTKY      DS
     I                                        1  50 $LEN50
     I                                        1   30$KWHSE
     I                                        1   3 $WHSEA
     I                                        4  12 $KPO
     I                                       13  21 $KSPO
     I                                       47  50 $SPO
     I*----------------------------------------------------------------
     I*  Data structure for FKEY and UKEY
     I*
     I            DS
     I                                        1  50 DSFKEY
     I                                        1  50 DSUKEY
     I I            0                         1   30PDWHSE
     I                                        4  12 PDPO
     I I            0                        13  170PDSEQ
     I                                       18  32 PDITEM
     I                                       33  47 PDVITM
     I*----------------------------------------------------------------
     I*  Redefinition data structures
     I*
     I$AERM       DS
     I                                        1  60 XAERM
     I                                        1   4 $AMSG
     I$CERM       DS
     I                                        1  60 XCERM
     I                                        1   4 $CMSG
     I*----------------------------------------------------------------
     I*  *PICK  -  Picking options
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    OPNXTP  -  Next pallet number.
     I*    OPBPCK  -  Bulk pick definition.
     I*    OPPCUB  -  Maximum cube for PIR.
     I*    OPFPAL  -  Pallets on fixed fork lift.
     I*    OPFCUB  -  Maximum cube per fixed pallet.
     I*    OPFSTP  -  Maximum stops per fixed pallet.
     I*    OPINCL  -  Include PIR in fixed cube.
     I*    OPSRCH  -  Number of previous pallets to search for space.
     I*    OPFBLD  -  Fixed pallet building method.
     I*                1 = By piece without concern for splitting stop.
     I*                2 = By stop without splitting stop between plts.
     I*    OPPBRK  -  Break pallets by aisle (Y,N).
     I*    OPMPUT  -  Manual Put away (Y,N).
     I*
     I* Data structure
     I*
     IOPDDTA      DS
     I I            0                         1   70OPNXTP
     I I            0                        10  142OPPCUB
     I I            0                        15  150OPFPAL
     I I            0                        16  202OPFCUB
     I                                       22  22 OPINCL
     I I            0                        23  240OPSRCH
     I I            0                        25  260OPFSTP
     I I            0                        27  270OPFBLD
     I I            0                        28  300OPBPCK
     I                                       31  33 OPPBRK
     I                                       34  34 OPMPUT
     I                                      117 117 OPDEND
     I*
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  30 $LPO
     I                                       31  350$LSEQ
     I                                       36  50 $LITEM
     I*
     I                                       22  36 $LITM
     I                                       37  37 $LXFLG
     I*----------------------------------------------------------------
     I* Data structure
     I*
     IOPDATA      DS
     I                                        1   1 OPSTYP
     I                                        2   6 OPWHDP
     I                                        7   8 OPUM1
     I                                        9  23 OPDUM
     I                                       24  43 OPCUM
     I                                       44  522OPCDIV
     I                                       53  53 OPCAUT
     I                                       54  54 OPCWRN
     I                                       55  571OPCRNG
     I                                       58  72 OPWUM
     I                                       73  73 OPXDSC
     I                                      117 117 OPTEND
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I              'PO122'               C         @CHGPG
     I              'PO124'               C         @DELPG
     I              '*NONE'               C         @PRTPG
     I*----------------------------------------------------------------
     I*  Window Titles.
     I*
     I              'Select Purchase Orde-C         TITL01
     I              'r'
     I              'Display Purchase Ord-C         TITL02
     I              'er Totals'
     I              'Position To Item Num-C         TITL03
     I              'ber'
     I              'Position To Manufact-C         TITL04
     I              'urer Number'
417a I              'Select item for UPC -C         TITL05
417a I              '           '
     I              'Item Number'         C         HDR01
     I              'Mfr Number'          C         HDR02
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$POSTN      DS
     I                                        1   8 $POCMD
     I                                        9  18 $POPRG
     I                                       19  68 $POFKY
     I                                       69 118 $POUKY
     I                                      119 307 $PODSC
     I                                      308 322 $POPT1
     I                                      323 335 $POPT2
     I                                      336 343 $PORTN
     I                                      344 403 $POERM
     I                                      336 339 $POMSG
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I                                       19  210$PWHSE
     I                                       22  30 $PPO
     I                                       31  350$PSEQ
     I                                       36  50 $PITEM
     I                                       51  65 $PVITM
417dAI*----------------------------------------------------------------
417dAI*  Redefinition data structures
417dAI*
417dAI            DS
417dAI                                        1  20 DSUPC
417dAI                                        1  12 DSFDIS
417dAI                                       13  24 DSTDIS
     I*----------------------------------------------------------------
     I$CVTDT      DS
417a I*                                       1   8 $CVDOP
417a I*                                       9  140$CVDD6
417a I*                                      15  220$CVDD8
417a I                                        1   8 $CVCMD
417a I                                        9  18 $CVPRG
417a I                                       19  24 $CVD6I
417a I                                       25  32 $CVD8I
417a I                                       33  380$CVD6O
417a I                                       39  460$CVD8O
417a I                                       47  64 $CVSTO
417a I                                       65  72 $CVRTN
417a I                                       73 132 $CVERM
417a I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I                                        1  10 ERRCL1
     I                                       11  16 ERRCL2
416cAI*
416cAI                                        1   4 ERP2TP
416cAI                                        5  13 ERSPO
416cAI                                       14  28 ERP2VL
416cAI*
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Error Message(s)
     I*
     I              '1=Select can only be-C         ERR01
     I              ' used once.'
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Query file INFDS data structure
     I*
     IOCINF       DS
     I                                    B 316 3190TOTRCC
     IODINF       DS
     I                                    B 316 3190TOTRCD
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PRTKY  Partial key
     C*
     C*    Returned Parameters
     C*      $RTNCD  *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTKY 50
     C                     PARM           $RTNCD  8
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *BLANKS   $RTNCD
     C                     CALL 'BFCADR'
     C                     PARM           $RTN    8
     C           $RTN      IFEQ '*EXPIRED'
     C                     MOVE 'EOJ'     NXTSCR
     C                     MOVE '*EXIT   '$RTNCD
     C                     ELSE
     C                     EXSR ZZINZ2
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C                     ENDCS
     C                     ENDDO
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     EXSR CLRSCH
     C*
     C           $RTNCD    IFEQ '*EXIT   '
     C           $RTNCD    OREQ '*CANCEL '
     C*
     C*    If processing a Super P/O, update Super P/O status on exit.
     C           $SPO      IFEQ '*YES'
     C                     EXSR ZZUHDR
     C                     ENDIF
     C                     SETON                     LR
     C                     ENDIF
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Set OFF command key indicators
     C*
     CSR                   SETOF                     KCKEKF
     CSR                   SETOF                     KLKI
     C*
     C*   Overlay screen with title
     C*
     CSR                   WRITETITLE
     C*
     C*   Overlay screen with error messages
     C*
     CSR                   EXSR ZMDMSG
     C*
     C*   Overlay screen with subfile screen
     C*
     CSR                   SELEC
     CSR         NXTSCR    WHEQ '01 '
     CSR                   SELEC
     C*
     C*    Single line display and NOT a Super P/O.
     CSR         UXFLAG    WHEQ *OFF
     CSR         $SPO      ANDEQ'*NO '
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     C*
     CSR                   EXSR SFLDSP
     CSR                   READ POSTNREC                 50
     CSR                   READ SCANREC                  50
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   EXSR SFLDS2
     CSR                   READ POSTNRC2                 50
     CSR                   READ SCANREC2                 50
     CSR                   ENDSL
     C*
     CSR                   OTHER
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   EXSR SFLDS1
     CSR                   READ POSTNREC                 50
     CSR                   READ SCANREC                  50
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   EXSR SFLDS3
     CSR                   READ POSTNRC2                 50
     CSR                   READ SCANREC2                 50
     CSR                   ENDSL
     C*
     CSR                   ENDSL
     C*
     CSR         NXTSCR    WHEQ '02 '
     CSR                   EXSR DELDSP
     C*
     CSR                   ENDSL
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     2021
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   SELEC
     CSR         UXFLAG    WHEQ *OFF
     CSR         $SPO      ANDEQ'*NO '
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   READ DSPSFC                   50
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   READ DSPSFC2                  50
     C*
     CSR                   ENDSL
     C*
     CSR                   OTHER
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   READ DSPSFC1                  50
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   READ DSPSFC3                  50
     C*
     CSR                   ENDSL
     CSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     C*
     C*    If this is a Super P/O, then condition heading on TITLE fmt.
     CSR         $SPO      IFEQ '*YES'
     CSR                   MOVE *ON       *IN40
     CSR                   ELSE
     CSR                   MOVE *OFF      *IN40
     CSR                   ENDIF
     C*
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   WRITECLR0306
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR
     CSR                   MOVE *ON       *IN90
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   WRITECLR0306
     CSR                   WRITEDELREC
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG02
     CSR                   WRITECMDDEL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 wrap-up
     C*
     CSR         SCR02E    BEGSR
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE *OFF      *IN90
     CSR                   WRITECLR0306
     C*
     C*   If delete was not canceled (no errors)
     C*     then reposition to record just before first deleted rec.
     C*
     CSR         CANCEL    IFEQ *OFF
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FRSTKY    $POFKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     C*
     C*   Otherwise, position to last record read.
     C*
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   END
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   EXSR OPTNS
     CSR                   ELSE
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL01
     CSR         STATUS    CASEQROLLDN    ROLL01
     CSR         STATUS    CASEQCOMAND    CMD01
     CSR                   CAS            ENT01
     CSR                   END
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     CSR         STATUS    CASEQROLLUP    ROLL02
     CSR         STATUS    CASEQROLLDN    ROLL02
     CSR         STATUS    CASEQCOMAND    CMD02
     CSR                   CAS            ENT02
     CSR                   END
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C                     EXSR ZMIMS4
     C*
     C*  Initialize subfile (DSPSFL) record
     C*
     C                     Z-ADD1         RECNO
     C                     WRITEDSPSFL                 79
     C                     WRITEDSPSFL1                79
     C                     WRITEDSPSFL2                79
     C                     WRITEDSPSFL3                79
     C                     Z-ADD1         RECNO4
     C                     WRITEDSPSFL4                79
     C                     WRITEDSPSFL5                79
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CLRSCH   Clear everything out of work file
     C*
     CSR         CLRSCH    BEGSR
     CSR         WKOPRT    SETLLWORKOPT
     CSR         WKOPRT    READEWORKOPT                7979
     CSR         *IN79     DOWEQ*OFF
     CSR                   DELETWKOREC
     CSR         WKOPRT    READEWORKOPT                7979
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD01    Screen 1 command key routine
     C*
     CSR         CMD01     BEGSR
     C*
     C*  TEST FOR CMD3 - EXIT
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD9 - Change view.
     C*
     CSR         *INKI     IFEQ *ON
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     C*    Process file override for OPNQRYF
     CSR                   MOVE '*POMFR  'OVRTYP
     CSR         $SPO      IFEQ '*YES'
     CSR                   EXSR ZZOVR
     C*
     C*    Process OPNQRYF.
     CSR                   EXSR ZZQRY
     CSR                   EXSR ZZOPN
     CSR                   ENDIF
     C*
     CSR                   MOVE '*POMFR  'VIEW
     CSR                   SELEC
     CSR         $SPO      WHEQ '*NO '
     CSR                   MOVE CMDLN,2   CMDLN1
     CSR         $SPO      WHEQ '*YES'
     CSR                   MOVE CMDLN,4   CMDLN1
     CSR                   ENDSL
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   EXSR PAG01
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     C*    Process file override for OPNQRYF
     CSR                   MOVE '*POITEM 'OVRTYP
     CSR         $SPO      IFEQ '*YES'
     CSR                   EXSR ZZOVR
     C*
     C*    Process OPNQRYF.
     CSR                   EXSR ZZQRY
     CSR                   EXSR ZZOPN
     CSR                   ENDIF
     C*
     CSR                   MOVE '*POITEM 'VIEW
     CSR                   SELEC
     CSR         $SPO      WHEQ '*NO '
     CSR                   MOVE CMDLN,1   CMDLN1
     CSR         $SPO      WHEQ '*YES'
     CSR                   MOVE CMDLN,3   CMDLN1
     CSR                   ENDSL
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   EXSR PAG01
     C*
     CSR                   ENDSL
     C*
     CSR                   ENDIF
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$RTNCD
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  EXECUTE COMMAND KEYS THAT DON'T NEED THE OPTIONS VERIFIED
     C*
     C*     TEST FOR CMD5 - REFRESH
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR CLRSCH
     CSR         UXFLAG    IFEQ *OFF
     CSR         $SPO      ANDEQ'*NO '
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     C*
     CSR         1         DO   10        X
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     C*
     CSR         1         DO   10        X
     CSR         X         CHAINDSPSFL2              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL2
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR                   ENDSL
     C*
     CSR                   ELSE
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     C*
     CSR         1         DO   05        X
     CSR         X         CHAINDSPSFL1              79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL1
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     C*
     CSR         1         DO   05        X
     CSR         X         CHAINDSPSFL3              79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL3
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR                   ENDSL
     CSR                   ENDIF
     C*
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   ENDIF
     C*
     C*  VERIFY AND SAVE ANY OPTIONS THAT WERE ENTERED
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       CMD01E
     C*
     C*  EXECUTE COMMAND KEYS THAT DID NEED THE OPTIONS VERIFIED
     C*
     C*  TEST FOR CMD6 - ADD RECORD
     C*
     CSR         *INKF     IFEQ *ON
     CSR                   EXSR INZPAR
     CSR                   MOVE '*ADD    '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     CSR         $PRTN     IFNE '*CANCEL '
     CSR         $PRTN     ANDNE'*EXIT   '
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD10 - MOVE RECORD THAT CUSOR IS ON TO TOP
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     MAKE SURE CURSOR IS ON ONE OF THE DISPLAYED RECORDS
     C*
     C*R                   SUB  10        ROW#
     CSR                   SUB  PRCREC    ROW#
     CSR         ROW#      IFLT 1
     CSR         ROW#      ORGT DSPLYD
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0106
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*     REPOSITION RECORD THAT CURSOR IS ON TO THE TOP
     C*
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE UKEY,ROW# $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       CMD01E
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD17 - REPOSITION TO TOP OF DISPLAY
     C*
     CSR         *INKR     IFEQ *ON
     CSR                   MOVE '*TOP    'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*  TEST FOR CMD18 - REPOSITION TO BOTTOM OF DISPLAY
     C*
     CSR         *INKS     IFEQ *ON
     CSR                   MOVE '*BOTTOM 'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO CMD01E
     CSR                   END
     C*
     C*   Process non-standard function keys.
     C*
     CSR                   EXSR ZZCMD
     CSR         CMD01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CMD02    Screen 2 command key routine
     C*
     CSR         CMD02     BEGSR
     C*
     C*  TEST FOR CMD12 - PREVIOUS
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE *ON       CANCEL
     CSR                   EXSR SCR02E
     CSR                   GOTO CMD02E
     CSR                   END
     CSR         CMD02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELADD   Add record to subfile for delete display
     C*
     CSR         DELADD    BEGSR
     CSR                   Z-ADDPRCREC    NR      20
     CSR                   ADD  1         NR
     C*R         RECNO     IFLT 11
     CSR         RECNO     IFLT NR
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  GET RECORD INFO
     C*
     CSR                   MOVE '*GET    '$POCMD
     CSR                   MOVE WKOKYU    $POUKY
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       DELADE
     C*
     C*  SAVE KEY TO RECORD OF FIRST SCREEN LINE
     C*
     CSR         RECNO     IFEQ 1
     CSR                   MOVE WKOKYF    $WKOF
     CSR                   MOVE WKOKYU    $WKOU
     CSR                   END
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     CSR                   MOVE WKOOPT    OPTION
     CSR         UXFLAG    IFEQ '0'
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFL
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFL2
     CSR                   ENDSL
     CSR                   ELSE
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFL1
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFL3
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   END
     CSR         DELADE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  DELDSP   Display subfile of records marked for deletion
     C*
     CSR         DELDSP    BEGSR
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
     CSR         UXFLAG    IFEQ '0'
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFC
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFL2
     CSR                   ENDSL
     CSR                   ELSE
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFC1
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFC1
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT01    Screen 1 enter key routine
     C*
     CSR         ENT01     BEGSR
     C*
     C*  VERIFY AND SAVE OPTIONS
     C*
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ENT01E
     C*
     C*  SEE IF USER IS TRYING TO POSITION TO A CERTAIN SPOT
     C*
     CSR                   MOVE *OFF      REPOS   1
     CSR                   EXSR ZZPOS
     CSR         ERROR     CABEQ*ON       ENT01E
     CSR         REPOS     IFEQ *ON
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ENT01E
     CSR                   END
     C*
     C*  CHECK IF UPC CODE WAS ENTERED.
     C*
417bDC*R         W1UPC     IFNE *BLANKS
417bMCSR         W1UPCD    IFNE *BLANKS
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENT01E
     CSR                   MOVE DSUKEY    $PUKY
     CSR                   EXSR ZZCHEK
     CSR         ERROR     CABEQ*ON       ENT01E
     CSR                   EXSR ZZRCV
     CSR                   MOVE *ON       REFRSH
     CSR                   ENDIF
     C*
     C*  IF NOT POSITIONING THEN EXECUTE THE ENTERED OPTIONS
     C*
     CSR                   EXSR OPTNS
     C*
     C*  IF OPTION WAS NOT TAKEN THEN RETURN LIKE CMD12 WAS ENTERED
     C*
     C*R         OTAKEN    IFEQ *OFF
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   GOTO ENT01E
     C*R                   END
     CSR         ENT01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ENT02    Screen 2 enter key routine
     C*
     CSR         ENT02     BEGSR
     C*
     C*  Save first delete key.
     C*
     CSR         *LIKE     DEFN $PUKY     FRSTKY
     CSR                   MOVE $PUKY     FRSTKY
     C*
     C*  Delete the records that have been selected
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     CSR         WKOOPT    IFEQ ' 4'
     C*
     C*  Call delete program
     C*
     CSR                   EXSR INZPAR
     CSR                   MOVE '*DELETE '$PCMD
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   CALL @DELPG
     CSR                   PARM           $PARMS
     C*
     C*     Error occured - Error message sent back
     C*
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     C*
     C*     Error occured - Error message sent to program msgq
     C*
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ELSE
     C*
     C*     Delete canceled
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     C*
     C*     Delete was successful.
     C*
     CSR         $PRTN     IFEQ '*OK     '
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         CANCEL    IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   END
     C*
     CSR                   END
     CSR                   END
     CSR                   EXSR SCR02E
     CSR         ENT02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGTWAY   Gateway to file handling routines
     C*
     C*    Input Parameters
     C*      $POCMD   *INIT    - Initialize and return
     C*               *GET     - Get record for $POUKY value
     C*               *GETNEXT - Get next record
     C*               *GETPREV - Get previous record
     C*               *WRITPOS - Write position record to display
     C*               *READPOS - Read position record
     C*               *POSTN2  - Position to $POFKY
     C*               *POSTN2U - Position to $POUKY
     C*               *TOP     - Position to top of file
     C*               *BOTTOM  - Position to bottom of file
     C*      $POFKY   Key for positioning within file
     C*      $POUKY   Unique key used for change/delete operations
     C*
     C*    Returned Parameters
     C*      $PORTN   *NOMORE  - Beginning/End of file was reached
     C*               *NOTFND  - Record not found on a GET
     C*               *FOUND   - Record found
     C*               *REPOS   - Repositioning took place
     C*               *ERROR   - Error occured
     C*      $POERM   Error message
     C*
     CSR         FGTWAY    BEGSR
     CSR                   MOVE *BLANKS   $PORTN
     CSR         $POCMD    CASEQ'*GET    'FGET
     CSR         $POCMD    CASEQ'*GETNEXT'FGETN
     CSR         $POCMD    CASEQ'*GETPREV'FGETP
     CSR         $POCMD    CASEQ'*POSTN2 'FPOS2
     CSR         $POCMD    CASEQ'*POSTN2U'FPOS2U
     CSR         $POCMD    CASEQ'*TOP'    ZZPOS2
     CSR         $POCMD    CASEQ'*BOTTOM' ZZPOS2
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGET     Get record using file with unique key
     C*
     C*              In this case the lookup file and the unique key
     C*              file are the same.
     C*
     CSR         FGET      BEGSR
     CSR                   MOVE $POUKY    DSUKEY
     CSR                   EXSR ZZFGET
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOTFND '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETN    Get next record
     C*
     CSR         FGETN     BEGSR
     CSR                   EXSR ZZFGTN
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FGETP    Get previous record
     C*
     CSR         FGETP     BEGSR
     CSR                   EXSR ZZFGTP
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE '*NOMORE '$PORTN
     CSR                   MOVE *BLANKS   $POUKY
     CSR                   MOVE *BLANKS   $POFKY
     CSR                   ELSE
     CSR                   MOVE '*FOUND  '$PORTN
     CSR                   EXSR ZZKEYF
     CSR                   EXSR ZZKEYU
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2    Position to record
     C*
     CSR         FPOS2     BEGSR
     CSR                   MOVE $POFKY    DSFKEY
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*NO '
     CSR         FILEKY    SETLLRECORD
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*NO '
     CSR         FILKY2    SETLLRECORD2
     C*
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*YES'
     CSR         FILKY3    SETLLOQRECA
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*YES'
     CSR         FILKY4    SETLLOQRECB
     C*
     CSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  FPOS2U   Position to record using unique key
     C*
     CSR         FPOS2U    BEGSR
     C*
     C*  GET RECORD FOR UNIQUE KEY
     C*
     CSR                   EXSR FGET
     C*
     C*  POSITION TO RECORD IN LOOKUP FILE
     C*
     CSR                   EXSR FPOS2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  INZPAR   Initialize parameters for calling add/chg/del program
     C*
     CSR         INZPAR    BEGSR
     CSR                   CLEAR$PARMS
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE $PRTKY    $PUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS    Perform options that user entered
     C*
     CSR         OPTNS     BEGSR
     CSR                   MOVE *OFF      OTAKEN  1
     C*
     C*     DO ALL DELETES FIRST (OPTION 4)
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      STOP
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     DOWEQ*OFF
     CSR         WKOOPT    ANDNE' 4'
     CSR         WKOPRT    READEWORKOPT                  79
     CSR                   END
     CSR         *IN79     IFEQ *OFF
     CSR         WKOOPT    ANDEQ' 4'
     CSR                   MOVE *ON       OTAKEN
     CSR                   MOVE WKOKYU    $PUKY
     CSR                   EXSR SCR02I
     CSR                   GOTO OPTNSE
     CSR                   END
     C*
     C*  THEN DO THE OTHER OPTIONS IN THE ORDER THEY WERE ENTERED
     C*     STOP WHEN NO MORE OPTIONS OR USER ENTERS CMD12
     C*
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   MOVE *OFF      CANCEL  1
     CSR                   MOVE *OFF      STOP    1
     CSR         STOP      DOUEQ*ON
     CSR         CANCEL    OREQ *ON
     CSR         WKOPRT    READEWORKOPT                  79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR         WKOOPT    IFNE '  '
     CSR                   MOVE *ON       OTAKEN
     CSR                   EXSR OPTNS2
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR                   MOVE *ON       REFRSH
     CSR         ERROR     IFEQ *OFF
     CSR                   DELETWKOREC
     CSR                   END
     CSR         CANCEL    IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   MOVE '*POSTN2U'$POCMD
     CSR                   MOVE $PUKY     $POUKY
     CSR                   EXSR FGTWAY
     CSR                   MOVE '*REPOS  'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         REFRSH    IFEQ *ON
     CSR                   MOVE '*REFRESH'PAGCMD
     CSR                   EXSR PAG01
     CSR                   MOVE *OFF      REFRSH  1
     CSR                   END
     CSR         OPTNSE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  OPTNS2   Execute individual options
     C*
     CSR         OPTNS2    BEGSR
     CSR                   EXSR INZPAR
     CSR                   MOVE WKOKYU    $PUKY
     C*
     C*   Change
     C*
     CSR         WKOOPT    IFEQ ' 2'
     CSR                   MOVE '*CHANGE '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   View
     C*
     CSR         WKOOPT    IFEQ ' 5'
     CSR                   MOVE '*VIEW   '$PCMD
     CSR                   CALL @CHGPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     C*
     C*   Print
     C*
     CSR         WKOOPT    IFEQ ' 6'
     CSR                   MOVE '*PRINT  '$PCMD
     CSR                   CALL @PRTPG
     CSR                   PARM           $PARMS
     CSR                   ELSE
     CSR                   EXSR ZZOPT
     CSR                   END
     CSR                   END
     CSR                   END
     C*
     CSR         $PRTN     IFEQ '*CANCEL '
     CSR                   MOVE *ON       CANCEL
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVEL$PERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $PRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       CANCEL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG01    Screen 1 page routines
     C*
     CSR         PAG01     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  TOP
     C*
     CSR         PAGCMD    IFEQ '*TOP    '
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  BOTTOM
     C*
     CSR         PAGCMD    IFEQ '*BOTTOM '
     CSR                   MOVE *ON       BOT
     CSR                   Z-ADD0         DSPLYD
     CSR                   EXSR PAG1BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         FKEY,1    IFEQ *LOVAL
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   ELSE
     CSR                   MOVE '*POSTN2 '$POCMD
     CSR                   MOVE FKEY,1    $POFKY
     CSR                   END
     CSR                   EXSR FGTWAY
     C*R         CLERR     CABEQ*ON       PAG01E
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG1FW
     CSR                   ELSE
     C*
     C*  REPOSITIONING
     C*
     CSR         PAGCMD    IFEQ '*REPOS  '
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      FORCEB
     CSR                   EXSR PAG1FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD  8
     CSR         PAG01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG02    Screen 2 page routines
     C*
     CSR         PAG02     BEGSR
     C*
     C*  NEXT PAGE
     C*
     CSR         PAGCMD    IFEQ '*NEXT   '
     CSR                   EXSR PAG2FW
     CSR                   ELSE
     C*
     C*  PREVIOUS PAGE
     C*
     CSR         PAGCMD    IFEQ '*PREV   '
     CSR                   EXSR PAG2BK
     CSR                   ELSE
     C*
     C*  REFRESH SCREEN
     C*
     CSR         PAGCMD    IFEQ '*REFRESH'
     CSR         DELTOP    SETLLWORKOPT
     CSR                   MOVE *OFF      BOT
     CSR                   EXSR PAG2FW
     CSR                   END
     CSR                   END
     CSR                   END
     CSR                   MOVE *BLANKS   PAGCMD
     CSR         PAG02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1FW   Let's see that next page of records
     C*
     CSR         PAG1FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    FKEY
     CSR                   MOVE *LOVAL    UKEY
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     CSR                   MOVE *BLANKS   SAVPO
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETNEXT'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFAC
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR                   ADD  1         P
     CSR                   EXSR SFLADD
     C*R         P         IFGE 10
     CSR         P         IFGE PRCREC
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR         ENDFAC    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG1BK   Let's see the previous page
     C*
     CSR         PAG1BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     C*R         DSPLYD    ADD  10        GOBACK  20
     CSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ *ON
     C*R         GOBACK    IFEQ 10
     CSR         GOBACK    IFEQ PRCREC
     CSR                   MOVE *ON       FORCEB
     CSR                   END
     CSR                   MOVE '*BOTTOM '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ SPECIFIED FLITCHES FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR                   MOVE '*GETPREV'$POCMD
     CSR                   EXSR FGTWAY
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         $PORTN    IFEQ '*NOMORE '
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR         ENDBK     TAG
     CSR                   END
     C*
     C* IF THE TOP WAS REACHED THEN POSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR                   MOVE '*TOP    '$POCMD
     CSR                   EXSR FGTWAY
     CSR                   END
     CSR                   EXSR PAG1FW
     CSR         ENDB      ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2FW   Let's see that next page of delete records
     C*
     CSR         PAG2FW    BEGSR
     C*
     C*  IF WE ARE AT THE BOTTOM THEN DO NOTHING
     C*
     CSR         BOT       CABEQ*ON       ENDF2
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   EXSR SFLCLR
     CSR                   MOVE *LOVAL    $WKOF
     CSR                   MOVE *LOVAL    $WKOU
     CSR                   MOVE *OFF      BOT     1
     CSR                   MOVE *OFF      TOP     1
     CSR                   MOVE *OFF      STOP    1
     CSR                   Z-ADD0         P       20
     C*
     C*  GET 10 RECORDS TO DISPLAY
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    READEWORKOPT                  79
     C*
     C*  OUT OF RECORDS - INFORM USER AND SET FLAG
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   GOTO ENDFW2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER 10 GOOD RECORDS
     C*  OR EXTENDED DESCRIPTION- STOP AFTER 5 GOOD RECORDS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR                   EXSR DELADD
     C*R         P         IFGE 10
     CSR         P         IFGE PRCREC
     CSR                   MOVE *ON       STOP
     CSR         FORCEB    IFEQ *ON
     CSR                   MOVE *ON       BOT
     CSR                   MOVE 'Bottom ' MORELN
     CSR                   ELSE
     CSR                   MOVE 'More...' MORELN
     CSR                   END
     CSR                   END
     CSR                   END
     CSR         ENDFW2    TAG
     CSR                   END
     C*
     C*  SAVE NUMBER OF RECORDS THAT HAVE BEEN DISPLAYED
     C*
     CSR                   Z-ADDP         DSPLYD  20
     CSR                   MOVE *OFF      FORCEB
     CSR         ENDF2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  PAG2BK   Let's see the previous page of delete records
     C*
     CSR         PAG2BK    BEGSR
     C*
     C*  IF WE ARE AT THE TOP THEN DO NOTHING
     C*
     CSR         TOP       CABEQ*ON       ENDB2
     CSR                   MOVE *OFF      FORCEB  1
     C*
     C*  CALCULATE HOW MANY RECORDS TO GO BACKWARDS
     C*
     C*R         DSPLYD    ADD  10        GOBACK  20
     CSR         DSPLYD    ADD  PRCREC    GOBACK  20
     CSR         BOT       IFEQ *ON
     CSR         WKOPRT    SETGTWORKOPT
     CSR                   ADD  1         GOBACK
     CSR                   END
     C*
     C*  INITIALIZE VARIABLES FOR LOOKUP
     C*
     CSR                   Z-ADD0         P
     CSR                   MOVE *OFF      TOP
     CSR                   MOVE *OFF      BOT
     CSR                   MOVE *OFF      STOP
     C*
     C*  READ FILE
     C*
     CSR         STOP      DOUEQ*ON
     CSR         WKOPRT    REDPEWORKOPT                  79
     C*
     C*  HIT TOP OF FILE
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   MOVE *ON       TOP
     CSR                   GOTO ENDBK2
     CSR                   END
     C*
     C*  RECORD READ - STOP AFTER READING 'GOBACK' NUMBER OF GOOD RECS
     C*
     CSR         WKOOPT    IFEQ ' 4'
     CSR                   ADD  1         P
     CSR         P         IFGE GOBACK
     CSR                   MOVE *ON       STOP
     CSR                   END
     CSR                   END
     CSR         ENDBK2    TAG
     CSR                   END
     C*
     C* IF WE HIT THE TOP REPOSITION POINTER TO TOP OF FILE
     C*
     CSR         TOP       IFEQ *ON
     CSR         WKOPRT    SETLLWORKOPT
     CSR                   END
     CSR                   EXSR PAG2FW
     CSR         ENDB2     ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL01   Screen 1 roll up/down routine
     C*
     CSR         ROLL01    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   EXSR SAVOPT
     CSR         ERROR     CABEQ*ON       ROL01E
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG01
     CSR                   GOTO ROL01E
     CSR                   END
     CSR         ROL01E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ROLL02   Screen 2 roll up/down routine
     C*
     CSR         ROLL02    BEGSR
     C*
     C*  TEST FOR ROLLUP
     C*
     CSR         STATUS    IFEQ ROLLUP
     CSR                   MOVE '*NEXT   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     C*
     C*  TEST FOR ROLLDOWN
     C*
     CSR         STATUS    IFEQ ROLLDN
     CSR                   MOVE '*PREV   'PAGCMD
     CSR                   EXSR PAG02
     CSR                   GOTO ROL02E
     CSR                   END
     CSR         ROL02E    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SAVOPT   Verify and save options that were entered
     C*
     CSR         SAVOPT    BEGSR
     C*
     C*  READ ONLY THE CHANGED OPTIONS
     C*
     CSR                   MOVE *OFF      NOMORE  1
     CSR                   MOVEL'N'       WOYES
     CSR         NOMORE    DOUEQ*ON
     CSR                   MOVE *OFF      *IN21
     CSR         UXFLAG    IFEQ '0'
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   READCDSPSFL                   79
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   READCDSPSFL2                  79
     CSR                   ENDSL
     CSR                   ELSE
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   READCDSPSFL1                  79
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   READCDSPSFL3                  79
     CSR                   ENDSL
     CSR                   ENDIF
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       NOMORE
     CSR                   GOTO ENDDO1
     CSR                   END
     C*
     C*  DISPLAY ERROR IF OPTION IS NOT VALID
     C*
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   END
     C*
     C*    LOOK UP OPTION IN PROFILE - ERROR IF NOT FOUND
     C*
     CSR         OPTION    LOKUPZOPT                     50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR ZM0108
     CSR                   END
     CSR                   END
     C*
     C*  SAVE OPTION
     C*
     CSR                   Z-ADDRECNO     Y       30
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              79
     CSR         *IN79     IFEQ *OFF
     CSR         OPTION    IFEQ *BLANKS
     CSR                   DELETWKOREC
     CSR                   ELSE
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   UPDATWKOREC
     CSR                   END
     CSR                   ELSE
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE #USER     WKOUSR
     CSR                   MOVE #PROG     WKOPGM
     CSR                   MOVE FKEY,Y    WKOKYF
     CSR                   MOVE UKEY,Y    WKOKYU
     CSR                   MOVE OPTION    WKOOPT
     CSR                   MOVE *IN21     WKOERR
     CSR                   WRITEWKOREC
     CSR                   END
     CSR                   END
     CSR         ENDDO1    TAG
     CSR                   END
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLADD   Add record to subfile
     C*
     CSR         SFLADD    BEGSR
     C*
     C*    Single line descriptions in use and not a Super P/O.
     CSR         UXFLAG    IFEQ *OFF
     CSR         $SPO      ANDEQ'*NO '
     C*
     CSR         RECNO     IFLT 11
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFL
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFL2
     C*
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Use extended description or this is a Super P/O.
     C*
     CSR         UXFLAG    IFEQ *ON
     CSR         RECNO     IFLT 6
     CSR                   ADD  1         RECNO
     CSR                   Z-ADDRECNO     Y
     C*
     C*  SAVE FILE AND UNIQUE KEYS
     C*
     CSR                   MOVE $POFKY    FKEY,Y
     CSR                   MOVE $POUKY    UKEY,Y
     C*
     C*  WRITE DISPLAY LINE TO SUBFILE
     C*
     CSR                   EXSR ZZFILL
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFL1
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFL3
     C*
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLAD4   Add record to Window subfile 4
     C*
     CSR         SFLAD4    BEGSR
     C*
     CSR                   Z-ADDPDSEQ     HSEQ
     CSR                   MOVE PDITEM    HITEM
     CSR                   MOVE PDVITM    HVITM
     CSR                   ADD  1         RECNO4
     CSR                   WRITEDSPSFL4
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLAD5   Add record to Window subfile 5
     C*
     CSR         SFLAD5    BEGSR
     C*
     CSR                   ADD  1         RECNO4
     CSR                   WRITEDSPSFL5
     C*
     CSR                   ENDSR
417a C*----------------------------------------------------------------
417a C*
417a C*  SFLAD6   Add record to Window subfile 6
417a C*
417a CSR         SFLAD6    BEGSR
417a C*
417a CSR                   ADD  1         RECNO4
417a CSR                   WRITEDSPSFL6
417a C*
417a CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLCLR   Clear display subfile
     C*
     CSR         SFLCLR    BEGSR
     C*
     C*  CLEAR DISPLAY SUBFILE
     C*
     CSR                   MOVE *OFF      *IN01
     CSR                   SELEC
     CSR         UXFLAG    WHEQ *OFF
     CSR         $SPO      ANDEQ'*NO '
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFC
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFC2
     C*
     CSR                   ENDSL
     C*
     CSR                   OTHER
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   WRITEDSPSFC1
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   WRITEDSPSFC3
     C*
     CSR                   ENDSL
     CSR                   ENDSL
     C*
     CSR                   Z-ADD0         RECNO   40
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDSP   Display subfile , Item seq - Single line description.
     C*
     CSR         SFLDSP    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNREC
     CSR                   WRITESCANREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOPT
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE *ON
     CSR         1         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       *IN20
     CSR                   UPDATDSPSFL
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDS1   Display subfile 1 , Item Seq - Extended description.
     C*
     CSR         SFLDS1    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNREC
     CSR                   WRITESCANREC
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOP1
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE '1'
     CSR         1         CHAINDSPSFL1              79
     CSR         *IN79     IFEQ '0'
     CSR                   MOVE '1'       *IN20
     CSR                   UPDATDSPSFL1
     CSR                   END
     CSR                   END
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE '1'       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC1
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDS2   Display subfile 2 - Mfr# Seq - Single line desc.
     C*
     CSR         SFLDS2    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNRC2
     CSR                   WRITESCANREC2
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOP2
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE *ON
417 DC*R         1         CHAINDSPSFL               79
417 MCSR         1         CHAINDSPSFL2              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       *IN20
     CSR                   UPDATDSPSFL2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC2
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLDS3   Display subfile 3 , Mfr# Seq. Extended description
     C*
     CSR         SFLDS3    BEGSR
     C*
     C*  WRITE OPTION AND COMMAND LINES TO DISPLAY
     C*
     CSR                   WRITEOPTREC
     CSR                   WRITECMDREC
     C*
     C*  WRITE 'BOTTOM/MORE...' FIELD TO DISPLAY
     C*
     CSR                   WRITEMORREC
     C*
     C*  WRITE POSITION TO FIELD TO DISPLAY
     C*
     CSR                   WRITEPOSTNRC2
     CSR                   WRITESCANREC2
     C*
     C*  GET ANY EXISTING VALUES FOR THE OPTIONS
     C*
     CSR                   EXSR SFLOP3
     C*
     C*  POSITION CURSOR TO FIRST OPTION WHEN NO ERRORS EXIST
     C*
     CSR         ERROR     IFNE *ON
     CSR         1         CHAINDSPSFL3              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE *ON       *IN20
     CSR                   UPDATDSPSFL3
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  WRITE SUBFILE TO DISPLAY
     C*
     CSR                   MOVE *ON       *IN01
     CSR                   Z-ADD1         RECNO
     CSR                   WRITEDSPSFC3
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOPT   Initialize options for subfile
     C*
     CSR         SFLOPT    BEGSR
     CSR         1         DO   PRCREC    X       30
     CSR         X         CHAINDSPSFL               79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   ENDIF
     CSR                   UPDATDSPSFL
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOP1   Initialize options for subfile 1, extended description
     C*
     CSR         SFLOP1    BEGSR
     CSR         1         DO   05        X       30
     CSR         X         CHAINDSPSFL1              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   ENDIF
     CSR                   UPDATDSPSFL1
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOP2   Initialize options for subfile 2 - Single line Mfr seq.
     C*
     CSR         SFLOP2    BEGSR
     CSR         1         DO   PRCREC    X       30
     CSR         X         CHAINDSPSFL2              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   ENDIF
     CSR                   UPDATDSPSFL2
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SFLOP3   Initialize options for subfile 3, ext. desc. Mfr# Seq.
     C*
     CSR         SFLOP3    BEGSR
     CSR         1         DO   05        X       30
     CSR         X         CHAINDSPSFL3              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE FKEY,X    WKOKYF
     CSR                   MOVE UKEY,X    WKOKYU
     CSR         WKOUNQ    CHAINWORKOPT              78
     CSR         *IN78     IFEQ *OFF
     CSR                   MOVE WKOOPT    OPTION
     CSR                   MOVE WKOERR    *IN21
     CSR                   MOVE WKOERR    *IN20
     CSR                   ELSE
     CSR                   MOVE *BLANKS   OPTION
     CSR                   MOVE *OFF      *IN21
     CSR                   MOVE *OFF      *IN20
     CSR                   ENDIF
     CSR                   UPDATDSPSFL3
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCMS4  Clear message record subfile in WINDOW4
     C*
     CSR         ZMCMS4    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL4
     CSR                   MOVE *ZEROS    MSGK4   40
     CSR                   MOVE '*CLEAR ' #MSGID
     CSR                   MOVE '*NULL  ' #MSGTP
     CSR                   EXSR ZMPMS4
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   WRITEMSGCLR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMDMS4  Display message record subfile in WINDOW4
     C*
     CSR         ZMDMS4    BEGSR
     CSR                   WRITEMSGCLR4
     CSR                   MOVE *ON       *IN97
     CSR         MSGK4     IFGT 0
     CSR                   WRITEMSGCTL4
     CSR                   Z-ADD*ZERO     MSGK4
     CSR                   ENDIF
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMIMS4  Initialization necessary for message subfile in WINDOW4
     C*
     CSR         ZMIMS4    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMS4
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMPMS4  Add message record to subfile in WINDOW4
     C*
     CSR         ZMPMS4    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   ENDIF
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM #PROG     #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK4
     CSR                   WRITEMSGREC4
     CSR                   ENDIF
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMQMS4  Add message record to subfile from pgm queue in WINDOW4
     C*
     CSR         ZMQMS4    BEGSR
     CSR                   ADD  1         MSGK4
     CSR                   WRITEMSGREC4
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM '*PREV'   #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMnnnn  Build and send message nnnn to this program
416cAC*----------------------------------------------------------------
416cAC*    PO13236  Position to x not found on Super P/O.
416cAC*
416cACSR         ZM3236    BEGSR
416cACSR                   MOVE 'PO13236' #MSGID
416cACSR                   MOVE '*DIAG  ' #MSGTP
416cACSR                   MOVEAERRMSG    $MD,1
416cACSR                   EXSR ZMPMSG
416cACSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PO20027  Item not on PO.
     C*
     CSR         ZM027     BEGSR
     CSR                   MOVE 'PO20027' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    PO20029  UPC not on file.
     C*
     CSR         ZM029     BEGSR
     CSR                   MOVE 'PO20029' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT12001  Item does not have a link record.
     C*
     CSR         ZM1201    BEGSR
     CSR                   MOVE 'IT12001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT12212  Item does not have a Piritem record.
     C*
     CSR         ZM2212    BEGSR
     CSR                   MOVE 'IT12212' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    IT12002  Item does not have a pick slot.
     C*
     CSR         ZM1202    BEGSR
     CSR                   MOVE 'IT12002' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0101  Program not found.
     C*
     CSR         ZM0101    BEGSR
     CSR                   MOVE 'PIR0101' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0102  Program not found.
     C*
     CSR         ZM0102    BEGSR
     CSR                   MOVE 'PIR0102' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0103  Program not found while exec. subroutine.
     C*
     CSR         ZM0103    BEGSR
     CSR                   MOVE 'PIR0103' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     C*R                   MOVE CLPRGM    ERRCL1
     C*R                   MOVE CLINFO    ERRCL2
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0104  Pressed an invalid key.
     C*
     CSR         ZM0104    BEGSR
     CSR                   MOVE 'PIR0104' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     CSR         Z40105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMS4
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0106  Invalid cursor position.
     C*
     CSR         ZM0106    BEGSR
     CSR                   MOVE 'PIR0106' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0107  Invalid value for "position To"
     C*
     CSR         ZM0107    BEGSR
     CSR                   MOVE 'PIR0107' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0108  Invalid Option.
     C*
     CSR         ZM0108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*    Error message for WINDOW4.
     CSR         Z40108    BEGSR
     CSR                   MOVE 'PIR0108' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVELOPTION    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMS4
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD    Process non-standard function keys
     C*
     CSR         ZZCMD     BEGSR
     C*
     C*  TEST FOR CMD07 - Sub totals.
     C*
     CSR         *INKG     IFEQ *ON
     C*
     CSR                   MOVE '*SUBTOTL'OVRTYP
     CSR                   EXSR ZZWDW
     C*
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     C*  TEST FOR CMD23 - More options
     C*
     CSR         *INKX     IFEQ *ON
     CSR         VIEWO     IFEQ MAXVWO
     CSR                   Z-ADD1         VIEWO
     CSR                   ELSE
     CSR                   ADD  1         VIEWO
     CSR                   ENDIF
     CSR         VIEWO     MULT 2         V       20
     CSR                   MOVE OPTLN,V   OPTLN2
     CSR                   SUB  1         V
     CSR                   MOVE OPTLN,V   OPTLN1
     CSR                   GOTO ENDCM1
     CSR                   END
     C*
     C*  TEST FOR CMD24 - More Keys
     C*
     CSR         *INKY     IFEQ *ON
     CSR                   ADD  1         K
     CSR         K         IFGT 2
     CSR                   Z-ADD1         K
     CSR                   ENDIF
     C*
     CSR                   SELEC
     CSR         K         WHEQ 1
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   MOVELCMDLN,3   CMDLN1
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVELCMDLN,4   CMDLN1
     CSR                   ENDSL
     CSR         K         WHEQ 2
     CSR                   MOVELCMDLN,5   CMDLN1
     CSR                   ENDSL
     C*
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     CSR                   MOVE *OFF      NOUPC   1
     C*
     C*  UPC not entered.
     C*
417bDC*R         W1UPC     IFEQ *BLANKS
417bMCSR         W1UPCD    IFEQ *BLANKS
     CSR                   MOVE *ON       NOUPC
     CSR                   MOVE *BLANKS   WOUPC  20
     CSR                   ENDIF
     C*
     C*  UPC code not on file.
     C*
417bDC*R         W1UPC     IFNE *BLANKS
417bMCSR         W1UPCD    IFNE *BLANKS
417bDC*R                   MOVE W1UPC     WOUPC
417bAC*
S88 DC*  Extract UPC code from entered string.
S88 DC*
S88 DC**                   MOVE '*UPC    '$CBCMD
S88 DC**                   MOVELW1UPCD    $CBBAR    P
S88 DC*
S88 DC**                   CALL 'CVTBAR'
S88 DC**                   PARM           $CBCMD  8
S88 DC**                   PARM           $CBBAR100
S88 DC**                   PARM           $CBCOD  30
S88 DC**                   PARM           $CBDEC  10
S88 DC**                   PARM           $CBDSC 30
S88 DC**                   PARM           $CBPOS  30
S88 DC**                   PARM           $CBTYP  10
S88 DC**                   PARM           $CBV1  113
S88 DC**                   PARM           $CBV2  50
S88 DC**                   PARM           $CBRTN  8
S88 DC**                   PARM           $CBERM 60
S88 DC*
S88 DC**                   SELEC
S88 DC**         $CBRTN    WHEQ '*OK'
     C*
     C*   Right adjust UPC code for file.
     C*
     CSR                   MOVEL*BLANKS   $CSTR
417bDC*R                   MOVELW1UPC     $CSTR
S88 DC**                   MOVEL$CBV2     $CSTR
S88 MCSR                   MOVELW1UPCD    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*RIGHT  '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVE $CSTR     W1UPC
417a C*   Check if mulitple items exist for one UPC code.
417a C*    UPCCTR = 0, error, upc code not found.
417a C*    UPCCTR = 1, only one upc found, process for item.
417a C*    UPCCTR > 1, multiple upc found, need to select item.
417a CSR                   Z-ADD0         UPCCTR  30
417a CSR         UPCKEY    SETLLUPC
417a CSR         FOREVR    DOWEQFOREVR
417a CSR         UPCKEY    READEUPC                      79
     C*
417a CSR         *IN79     IFEQ *ON
417a CSR                   LEAVE
417a CSR                   ELSE
417a CSR                   ADD  1         UPCCTR
417a CSR                   ENDIF
     C*
417a CSR                   ENDDO
     C*
417aDC**         UPCKEY    CHAINUPC                  79
417aDC**         *IN79     IFEQ *ON
417a CSR         UPCCTR    IFEQ 0
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   EXSR ZM029
     CSR                   MOVE *ON       NOUPC
     CSR                   ENDIF
     C*   Multiple items exist for UPC
417a CSR         UPCCTR    IFGT 1
417a CSR                   MOVE '*UPCSLCT'OVRTYP
417a CSR                   EXSR ZZWDW
417a CSR                   ENDIF
417bAC*
417bAC*    If extract of UPC comes back invalid, treat UPC as if not
417bAC*    on file.
S88 DC**                   OTHER
S88 DC**                   MOVE *ON       ERROR
S88 DC**                   MOVE *ON       *IN29
S88 DC**                   MOVE *ON       *IN09
S88 DC**                   EXSR ZM029
S88 DC*    Log barcode conversion error.
S88 DC**                   MOVEL$CBERM    ERRMSG
S88 DC**                   EXSR ZM0105
S88 DC**                   MOVE *ON       NOUPC
S88 DC**                   ENDSL
     C*
     C*   Verify Item exists on PO.
     C*
     CSR         NOUPC     IFEQ *OFF
     CSR                   SELEC
     C*    Single P/O being processed.
     CSR         $SPO      WHEQ '*NO '
     C*
     CSR                   MOVE UPITEM    WOITM# 15
     CSR         PODKY1    SETLLPODTL1               79
     CSR         PODKY1    READEPODTL1                   79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   EXSR ZM027
     CSR                   ENDIF
     C*
     C*    Super P/O being processed.
     CSR         $SPO      WHEQ '*YES'
     CSR                   MOVE UPITEM    PTINP1
     CSR                   MOVE UPITEM    PDITEM
     CSR                   MOVE '*SLCTITM'OVRTYP
     CSR                   EXSR ZZWDW
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   SELEC
     C*    UPC not found on any P/O.
     CSR         REPOS     WHEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   EXSR ZM027
416aAC*    UPC found and selected for one p/o.
416aACSR         REPOS     WHEQ *ON
416aACSR                   Z-ADDHSEQ      PDSEQ
416aACSR                   MOVE HITEM     PDITEM
416aACSR                   MOVE HVITM     PDVITM
     CSR                   ENDSL
     C*
     CSR                   ENDSL                           Super P/O test
     C*
     C*    Clear position to save fields when working with UPC.
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     C*
     CSR                   ENDIF                           NOUPC = Off
     C*
     CSR                   ENDIF                           W1UPC NE Blanks
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHEK   Screen 1 EXTRA error checking.
     C*
     CSR         ZZCHEK    BEGSR
     CSR         ITKEY2    CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   ITTYPE
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM2212
     CSR                   ENDIF
     C*  Item link record must exist.
     CSR         ITTYPE    IFEQ 'A'
     CSR         ITTYPE    OREQ 'B'
     CSR         ITTYPE    OREQ 'C'
     CSR         ITTYPE    OREQ 'S'
     CSR         ILKEY     CHAINITEMLNK              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM1201
     CSR                   ENDIF
     CSR                   ENDIF
     C*  Fixed item - Pick slot must exist
     CSR         ITSTYP    IFEQ 'F'
     CSR                   SELEC
     CSR         ITTYPE    WHEQ ' '
     CSR                   MOVE $PITEM    BSITEM 15
     CSR                   MOVE 'A '      BSSTAT  2
     CSR                   MOVE 'Y'       BSPICK  1
     CSR         SLKEY3    SETLLSLOT3
     CSR         FOREVR    DOWEQFOREVR
     CSR         SLKEY3    READESLOT3                    79
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         SLPICK    ANDEQ'Y'
     CSR                   GOTO ENDCHK
     CSR                   ENDIF
     C*
     CSR         *IN79     IFEQ *ON
     C*R                   MOVE *ON       ERROR
     C*R                   EXSR ZM1202
     CSR                   GOTO ENDCHK
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     CSR         ITTYPE    WHEQ 'A'
     CSR         ITTYPE    OREQ 'B'
     CSR         ITTYPE    OREQ 'C'
     CSR         ITTYPE    OREQ 'S'
     CSR         ILKEY     CHAINITEMLNK              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE ILITM2    BSITEM 15
     CSR                   ENDIF
     CSR                   MOVE 'A '      BSSTAT  2
     CSR                   MOVE 'Y'       BSPICK  1
     CSR         SLKEY3    SETLLSLOT3
     CSR         FOREVR    DOWEQFOREVR
     CSR         SLKEY3    READESLOT3                    79
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         SLPICK    ANDEQ'Y'
     CSR                   GOTO ENDCHK
     CSR                   ENDIF
     C*
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM1202
     CSR                   GOTO ENDCHK
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     CSR                   ENDSL
     CSR                   ENDIF
     CSR         ENDCHK    ENDSR
     C*----------------------------------------------------------------
     C*
416fAC*  ZZDESG   Check dept-designation file fro putaway method.
416fAC*
416fACSR         ZZDESG    BEGSR
     CSR         ITKEY2    CHAINPIRITEM              79
     CSR         *IN79     IFEQ *ON
     CSR                   GOTO ENDDSG
     CSR                   ENDIF
     C*
     CSR         DDKEYP    SETLLDEPTDSG
     CSR                   MOVE *OFF      PUTTYP  1
     CSR         FOREVR    DOWEQFOREVR
     CSR         DDKEYP    READEDEPTDSG                  79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     CSR         DDDESG    IFEQ ITDESG
     CSR                   MOVE *ON       PUTTYP
     CSR                   LEAVE
     CSR                   ENDIF
     CSR                   ENDDO
416fACSR         ENDDSG    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGET   Get record with unique key.
     C*
     CSR         ZZFGET    BEGSR
     C*
     C*    Code to use when file key and unique key are the same.
     C*
     CSR         FILUKY    CHAINRECORD               79
     C*
     C*    Code to use when file key and unique key are different.
     C*
     C*R         FILUKY    CHAINRECORDU              79
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTN   Get next record
     C*
     CSR         ZZFGTN    BEGSR
     CSR         TRY1      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READ RECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*NO '
     CSR         PARTKY    READERECORD                   79
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*NO '
     CSR         PARTKY    READERECORD2                  79
     C*
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*YES'
     CSR         PRTKY2    READEOQRECA                   79
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*YES'
     CSR         PRTKY2    READEOQRECB                   79
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     C*
     CSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFGTP   Get previous record
     C*
     CSR         ZZFGTP    BEGSR
     CSR         TRY2      TAG
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R                   READPRECORD                   79
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*NO '
     CSR         PARTKY    REDPERECORD                   79
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*NO '
     CSR         PARTKY    REDPERECORD2                  79
     C*
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*YES'
     CSR         PRTKY2    REDPEOQRECA                   79
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     C*
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*YES'
     CSR         PRTKY2    REDPEOQRECB                   79
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     C*
     CSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFILL   Fill display line with values that need
     C*           to be converted.
     C*
     CSR         ZZFILL    BEGSR
     C*
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVE PDVITM    WOMFR
     CSR                   ENDSL
     C*
     CSR         UXFLAG    IFEQ '1'
     CSR         ITKEY     CHAINITEMDSC              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WODSC1
     CSR                   MOVE *BLANKS   WODSC2
     CSR                   ELSE
     CSR                   MOVELIXDSC1    WODSC1
     CSR                   MOVELIXDSC2    WODSC2
     CSR                   ENDIF
     C*  GET PACK DESCRIPTION
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVELITPDSC    WOPDSC
     CSR                   ELSE
     CSR                   MOVE *BLANKS   WOPDSC
     CSR                   ENDIF
     C*
     C*    If no extended description found for the item,
     C*    Load description from item.
     CSR         *IN79     IFEQ *OFF
     CSR         WODSC1    ANDEQ*BLANKS
     CSR         WODSC2    ANDEQ*BLANKS
     CSR                   MOVELITDESC    WODSC1
     CSR                   ENDIF
     C*
     C*  GET TIE HI, PREFERRED OR 1ST RECORD.
     CSR                   MOVE *OFF      DONE    1
     CSR                   Z-ADD0         WOTIE
     CSR                   Z-ADD0         WOHI
     CSR                   Z-ADD0         SVTIE   40
     CSR                   Z-ADD0         SVHI    20
     CSR         PARTK2    SETLLITEMDEF
     CSR         DONE      DOUEQ*ON
     CSR         PARTK2    READEIDREC                    79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       DONE
     CSR                   ELSE
     CSR         SVTIE     IFEQ 0
     CSR         SVHI      ANDEQ0
     CSR                   Z-ADDIDTIE     SVTIE
     CSR                   Z-ADDIDHIGH    SVHI
     CSR                   ENDIF
     CSR         IDPREF    IFEQ 'Y'
     CSR                   Z-ADDIDTIE     WOTIE
     CSR                   Z-ADDIDHIGH    WOHI
     CSR                   MOVE *ON       DONE
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDDO
     CSR         WOTIE     IFEQ 0
     CSR         WOHI      ANDEQ0
     CSR                   Z-ADDSVTIE     WOTIE
     CSR                   Z-ADDSVHI      WOHI
     CSR                   ENDIF                           End - UXFLAG
     C*
     C*    When processing a Super P/O, load the individual P/O number
     C*    in the subfile everytime the individual p/o changes.
     CSR         $SPO      IFEQ '*YES'
     CSR         SAVPO     IFNE PDPO
     CSR                   MOVE 'PO:'     WOPOTX
     CSR                   MOVE PDPO      WOPO#
     CSR                   MOVE PDPO      SAVPO
     C*
     CSR                   ELSE
     CSR                   MOVE *BLANKS   WOPOTX
     CSR                   MOVE *BLANKS   WOPO#
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   ELSE
     C*
     C*    Single line display.
     C*
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVELITDESC    WODSC
     CSR                   ELSE
     CSR                   MOVE *BLANKS   WODSC
     CSR                   END
     CSR                   ENDIF
     C*
     C*   Convert quantity to string.
     C*
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDPDQOR1    $CQTY1
     CSR                   Z-ADDPDQOR2    $CQTY2
     CSR                   Z-ADDPDQOR3    $CQTY3
     CSR                   EXSR ZZCVQY
     C*
     CSR                   SELEC
     C*    Single line display.
     CSR         UXFLAG    WHEQ *OFF
     CSR                   SELEC
     C*    Item display.
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   MOVEL$CQSTR    WOQOR
     C*    Mfr display.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVEL$CQSTR    WOQOR2
     CSR                   ENDSL
     C*
     C*    Extended line display.
     CSR         UXFLAG    WHEQ *ON
     CSR                   SELEC
     C*    Item display.
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   MOVEL$CQSTR    WOQOR
     C*    Mfr display.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVEL$CQSTR    WOQOR2
     CSR                   ENDSL
     CSR                   ENDSL
     C*
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDPDQRC1    $CQTY1
     CSR                   Z-ADDPDQRC2    $CQTY2
     CSR                   Z-ADDPDQRC3    $CQTY3
     CSR                   EXSR ZZCVQY
     C*
     CSR                   SELEC
     C*    Single line display.
     CSR         UXFLAG    WHEQ *OFF
     CSR                   SELEC
     C*    Item display.
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   MOVEL$CQSTR    WOQRC
     C*    Mfr display.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVEL$CQSTR    WOQRC2
     CSR                   ENDSL
     C*
     C*    Extended line display.
     CSR         UXFLAG    WHEQ *ON
     CSR                   SELEC
     C*    Item display.
     CSR         VIEW      WHEQ '*POITEM '
     CSR                   MOVEL$CQSTR    WOQRC
     C*    Mfr display.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR                   MOVEL$CQSTR    WOQRC2
     CSR                   ENDSL
     CSR                   ENDSL
     C*
     C**   See if line has been touched.  Flag accordingly.
     CSR         DETLKY    CHAINPODTL3               84
     CSR         *IN84     IFEQ *ON
     CSR                   MOVEL*BLANKS   TOUCH
     CSR                   ELSE
     CSR                   MOVEL'X'       TOUCH
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL4   Fill window subfile with values to be converted.
     C*
     CSR         ZZFIL4    BEGSR
     C*
     CSR                   MOVE PDPO      WOPO4
     C*
     CSR                   SELEC
     C*    User selected P/O sub-totals.
     CSR         OVRTYP    WHEQ '*SUBTOTL'
     CSR         SVPO      ANDEQPDPO
     C*
     CSR                   ADD  PDQOR1    TQYOR1
     CSR                   ADD  PDQOR2    TQYOR1
     CSR                   ADD  PDQOR3    TQYOR1
     C*
     CSR                   ADD  PDQRC1    TQYRC1
     CSR                   ADD  PDQRC2    TQYRC1
     CSR                   ADD  PDQRC3    TQYRC1
     C*
     C*    User selected sub-totals - P/O changed - convert quantities.
     CSR         OVRTYP    WHEQ '*SUBTOTL'
     CSR         SVPO      ANDNEPDPO
     C*
     C*    End of file - replace low values with last po read.
     CSR         SVPO      IFEQ *LOVAL
     CSR                   MOVE PDPO      SVPO
     CSR                   MOVE PDPO      WOPO4
     CSR                   ELSE
     CSR                   MOVE SVPO      WOPO4
     CSR                   ENDIF
     C*
     CSR         PHKY2     CHAINPOHDR               N77
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ZEROS    PHVEN
     CSR                   ENDIF
     C*
     CSR                   Z-ADDPHVEN     WOVEN
     C*
     C*   Convert Total quantity ordered to string.
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDTQYOR1    $CQTY1
     CSR                   MOVE *ZEROS    $CQTY2
     CSR                   MOVE *ZEROS    $CQTY3
     CSR                   EXSR ZZCVQY
     CSR                   MOVEL$CQSTR    WOQOR
     C*
     C*   Convert Total quantity received to string.
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDTQYRC1    $CQTY1
     CSR                   MOVE *ZEROS    $CQTY2
     CSR                   MOVE *ZEROS    $CQTY3
     CSR                   EXSR ZZCVQY
     CSR                   MOVEL$CQSTR    WOQRC
     C*
     CSR                   OTHER
     C*
     CSR         PHKEY     CHAINPOHDR               N77
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ZEROS    PHVEN
     CSR                   ENDIF
     C*
     CSR                   Z-ADDPHVEN     WOVEN
     C*
     C*   Convert quantity ordered to string.
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDPDQOR1    $CQTY1
     CSR                   Z-ADDPDQOR2    $CQTY2
     CSR                   Z-ADDPDQOR3    $CQTY3
     CSR                   EXSR ZZCVQY
     CSR                   MOVEL$CQSTR    WOQOR
     C*
     C*   Convert quantity received to string.
     CSR                   MOVE '*QTY2STR'$CCMD
     CSR                   MOVE '#PROG   '$CPRG
     CSR                   Z-ADDPDQRC1    $CQTY1
     CSR                   Z-ADDPDQRC2    $CQTY2
     CSR                   Z-ADDPDQRC3    $CQTY3
     CSR                   EXSR ZZCVQY
     CSR                   MOVEL$CQSTR    WOQRC
     C*
     CSR                   ENDSL
     C*
     CSR         ENDFL4    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL5   Fill window subfile with values to be converted.
     C*
     CSR         ZZFIL5    BEGSR
     C*
     CSR                   MOVE PDPO      W5PO
     CSR                   Z-ADDPDSEQ     HSEQ
     C*
     CSR                   SELEC
     C*    When position to item is selected, item number is loaded on
     C*    on first line of subfile record.
     CSR         OVRTYP    WHEQ '*POS2ITM'
     CSR                   MOVE PDITEM    W5VAL1
     CSR                   MOVE PDVITM    W5VAL2
     C*
     C*    When position to Mfr# is selected, Manufacturer is loaded on
     C*    on first line of subfile record.
     CSR         OVRTYP    WHEQ '*POS2MFR'
     CSR                   MOVE PDVITM    W5VAL1
     CSR                   MOVE PDITEM    W5VAL2
     C*
     CSR                   ENDSL
     C*
     C*    Extended item description in use.
     CSR         UXFLAG    IFEQ '1'
     CSR         ITKEY     CHAINITEMDSC              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   W5DESC
     CSR                   ELSE
     CSR                   MOVELIXDSC1    W5DESC
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Get pack description.
     CSR         ITKEY     CHAINPIRITEM              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVELITPDSC    W5PDSC
     CSR                   ELSE
     CSR                   MOVE *BLANKS   W5PDSC
     CSR                   ENDIF
     C*
     C*    If no extended description found for the item,
     C*    Load description from item.
     CSR         *IN79     IFEQ *OFF
     CSR         W5DESC    ANDEQ*BLANKS
     CSR                   MOVELITDESC    W5DESC    P
     CSR                   ENDIF
     C*
     CSR         ENDFL5    ENDSR
     C*----------------------------------------------------------------
417a C*
417a C*  ZZFIL6   Fill window subfile with values to be converted.
417a C*
417a CSR         ZZFIL6    BEGSR
417a C*
417a CSR                   MOVEL'Mfr:'    W6TXT2
417a C*
417a C*    Extended item description in use.
417a CSR         UXFLAG    IFEQ '1'
417A CSR         I6KEY     CHAINITEMDSC              79
417a CSR         *IN79     IFEQ *ON
417a CSR                   MOVE *BLANKS   W6DESC
417a CSR                   ELSE
417a CSR                   MOVELIXDSC1    W6DESC
417a CSR                   ENDIF
417a CSR                   ENDIF
417a C*
417a C*    Get pack description.
417A CSR         I6KEY     CHAINPIRITEM              79
417a CSR         *IN79     IFEQ *OFF
417a CSR                   MOVELITPDSC    W6PDSC
417a CSR                   ELSE
417a CSR                   MOVE *BLANKS   W6PDSC
417a CSR                   ENDIF
417a C*
417a C*    If no extended description found for the item,
417a C*    Load description from item.
417a CSR         *IN79     IFEQ *OFF
417A C***        W6DESC    ANDEQ*BLANKS
417a CSR                   MOVELITDESC    W6DESC    P
417a CSR                   ENDIF
417a C*
417a C*    Get brand.
417A CSR         I6KEY     CHAINITEMMSC              79
417a CSR         *IN79     IFEQ *OFF
417a CSR                   MOVELIMBRND    W6BRND
417a CSR                   ELSE
417a CSR                   MOVE *BLANKS   W6BRND
417a CSR                   ENDIF
417a C*
417a C*    Get pick slot.
417a CSR                   MOVE PDITEM    BSITEM 15
417a CSR                   MOVE 'A '      BSSTAT  2
417a CSR                   MOVE 'Y'       BSPICK  1
417a CSR         SLKEY3    SETLLSLOT3
417a CSR         FOREVR    DOWEQFOREVR
417a CSR         SLKEY3    READESLOT3                    79
417a C*
417a CSR                   MOVE *BLANKS   W6PSLT
417a CSR         *IN79     IFEQ *OFF
417a CSR         SLPICK    ANDEQ'Y'
417a CSR                   MOVE SLDISP    W6PSLT
417a CSR                   ENDIF
417a CSR                   LEAVE
417a CSR                   ENDDO
     C*
417a C*
417a CSR         ENDFL6    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*
     C*  Define keys
     C*
     C*     WORKOPT  (Unique key)
     C*
     CSR         WKOUNQ    KLIST
     CSR                   KFLD           #USER
     CSR                   KFLD           #PROG
     CSR                   KFLD           WKOKYF
     CSR                   KFLD           WKOKYU
     C*
     C*  Define full key for PODTL3 file.
     C*
     CSR         DETLKY    KLIST
     CSR                   KFLD           PDWHSE
     CSR                   KFLD           PDPO
     CSR                   KFLD           PDSEQ
     C*
     C*     WORKOPT  (Partial key)
     C*
     CSR         WKOPRT    KLIST
     CSR                   KFLD           #USER
     CSR                   KFLD           #PROG
     C*
     C*     WORKOPT  (Save key for top record on delete display)
     C*
     CSR         *LIKE     DEFN WKOKYF    $WKOF
     CSR         *LIKE     DEFN WKOKYU    $WKOU
     CSR         DELTOP    KLIST
     CSR                   KFLD           #USER
     CSR                   KFLD           #PROG
     CSR                   KFLD           $WKOF
     CSR                   KFLD           $WKOU
     C*
     C*     USERCODE
     C*
     CSR         USKEY     KLIST
     CSR                   KFLD           #USER
     C*
     C*  Define unique file key.
     C*
     CSR         FILUKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
     CSR                   KFLD           PDITEM
     C*
     C*  Define full key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
     CSR                   KFLD           PDITEM
     C*
     CSR         FILKY2    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
     CSR                   KFLD           PDVITM
     C*
     CSR         FILKY3    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KSPO
     CSR                   KFLD           PDPO
     CSR                   KFLD           PDITEM
     C*
     CSR         FILKY4    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KSPO
     CSR                   KFLD           PDPO
     CSR                   KFLD           PDVITM
     C*
     C*  Define partial key for main file (if needed).
     C*
     CSR         PARTKY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
     C*
     C*  Define partial key for Super P/O file (if needed).
     C*
     CSR         PRTKY2    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KSPO
     C*
     CSR         PRTKY3    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KSPO
     CSR                   KFLD           PDITEM
     C*
     CSR         PRTKY4    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KSPO
     CSR                   KFLD           PDVITM
     C*
     C*  Define key for PIRITEM file.
     C*
     CSR         ITKEY     KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           PDITEM
     C*
417A C*  Define key for PIRITEM file.
417A C*
417A CSR         I6KEY     KLIST
417A CSR                   KFLD           $KWHSE
417A CSR                   KFLD           W6VAL1
     C*
     C*  Define key for PODTL file.
     C*
     CSR         PDKEY     KLIST
     CSR                   KFLD           PDWHSE
     CSR                   KFLD           PDPO
     CSR                   KFLD           PDSEQ
     CSR                   KFLD           PDITEM
     C*
     C*  Define key for POHDR file.
     C*
     CSR         PHKEY     KLIST
     CSR                   KFLD           PDWHSE
     CSR                   KFLD           PDPO
     CSR         PHKY2     KLIST
     CSR                   KFLD           PDWHSE
     CSR                   KFLD           SVPO
     C*
     CSR         ITKEY2    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $PITEM
     C*
     CSR         SLKEY3    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           BSITEM
     CSR                   KFLD           BSSTAT
     CSR                   KFLD           BSPICK
     C*
     C*  Define key for OPTIOND.
     C*
     CSR         *LIKE     DEFN OPDCOD    KYCODE
     CSR         OPKEY2    KLIST
     CSR                   KFLD           KYCODE
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITWHDP
     CSR                   MOVE '*PICK   'KYCODE
     C*
     C*
     C*  Define key for UPC file.
     C*
417bACSR         *LIKE     DEFN UPUPC     W1UPC
     CSR         UPCKEY    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           W1UPC
     C*
417c C*  Define key for ITMEXCP2 file
     C*
417cACSR         *LIKE     DEFN EXITEM    KYITEM
417cACSR         *LIKE     DEFN EXTASK    KYTASK
417cACSR         *LIKE     DEFN EXERID    KYERID
417cACSR         *LIKE     DEFN EXESTA    KYESTA
417c CSR         IX2KEY    KLIST
417c CSR                   KFLD           $KWHSE
417c CSR                   KFLD           KYITEM
417c CSR                   KFLD           KYTASK
417c CSR                   KFLD           KYERID
417c CSR                   KFLD           KYESTA
     C*
     C*  Define key for PODTL1 file.
     C*
     CSR         PODKY1    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           $KPO
     CSR                   KFLD           WOITM#
     C*
     C*     OPTIONS
     C*
     CSR         OPKEY     KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           OCODE
     C*
     C*  Define partial key for item tie/high definition file.
     C*
     CSR         PARTK2    KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           PDITEM
     C*
     C*  ITEMLNK file.
     C*
     CSR         ILKEY     KLIST
     CSR                   KFLD           $KWHSE
     CSR                   KFLD           PDITEM
     C*
 16fACSR         DDKEYP    KLIST
416fACSR                   KFLD           $KWHSE
416fACSR                   KFLD           ITWHDP
     C*
     C*  Setup option and command display lines.
     C*
     CSR                   Z-ADD1         VIEWO   10
     CSR                   Z-ADD2         MAXVWO  10
     CSR                   MOVE OPTLN,1   OPTLN1
     CSR                   MOVE OPTLN,2   OPTLN2
     CSR                   SELEC
     CSR         $SPO      WHEQ '*NO '
     CSR                   MOVE CMDLN,1   CMDLN1
     CSR         $SPO      WHEQ '*YES'
     CSR                   MOVE CMDLN,3   CMDLN1
     CSR                   ENDSL
     CSR                   MOVE '*POITEM 'VIEW    8
     C*
     CSR                   MOVE *OFF      FOREVR  1
     CSR                   MOVE #PROG     $PPRG
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Extra program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Initialize working variables.
     C*
     CSR         *LIKE     DEFN PDPO      SAVPO
     CSR         *LIKE     DEFN PDPO      SVPO
     CSR         *LIKE     DEFN PDPO      SVP2PO
     CSR         *LIKE     DEFN PDITEM    SVP2VL
     CSR                   MOVE *BLANKS   SAVPO
     CSR                   MOVE *ZEROS    TTLRCD 110
     CSR                   MOVE *ZEROS    NRSLCT  30
     CSR                   MOVE *ZEROS    N       30
     CSR                   MOVE *ZEROS    K       30
     CSR                   MOVE *ZEROS    TQYOR1  70
     CSR                   MOVE *ZEROS    TQYRC1  70
     CSR                   Z-ADD1         K
     CSR                   MOVE *ZEROS    RECNO4  50
     CSR                   MOVE *OFF      OPTSLT  1
     CSR                   MOVE *OFF      OPEN1   1
     CSR                   MOVE *OFF      OPEN2   1
     CSR                   MOVE *OFF      FIRST   1
416FACSR                   MOVE *BLANKS   SVMPUT  1
     C*
     C*   Get warehouse description.
     C*
     CSR         $KWHSE    CHAINWAREHS               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *BLANKS   WHDESC
     CSR                   END
417a C*
417a C*  Convert today's date into century format.
417a C*
417a CSR                   MOVE '*CURCMD '$CVCMD
417a CSR                   CALL @CVTDT
417a CSR                   PARM           $CVTDT
417a CSR                   Z-ADD$CVD8O    TODAY   80
     C*
     C*   Load P/O for display.
     C*
     CSR                   MOVE *BLANKS   OVRTYP  8
     CSR                   SELEC
     CSR         $SPO      WHEQ '*YES'
     CSR                   MOVE $KSPO     WOPO
     C*
     C*    Process file override for OPNQRYF
     CSR                   MOVE '*POITEM 'OVRTYP
     CSR                   EXSR ZZOVR
     C*
     C*    Process OPNQRYF.
     CSR                   EXSR ZZQRY
     CSR                   EXSR ZZOPN
     C*
     CSR                   OTHER
     CSR                   MOVE $KPO      WOPO
     CSR                   ENDSL
     C*
     CSR                   EXSR ZZXOPT
     CSR                   EXSR ZZTRCV
     CSR                   EXSR CLRSCH
     CSR                   EXSR SCR01I
     C*
     C*    Get User's employee number to be written to PORCV file
     C*    if any records are flagged as touched.
     C*
     CSR                   MOVEL#USER     $CODE  10
     CSR                   Z-ADD*ZEROS    $WHSE   30
     CSR                   Z-ADD*ZEROS    $EMP#   50
     CSR                   MOVEL*BLANKS   $FNAM  15
     CSR                   MOVEL*BLANKS   $INIT   1
     CSR                   MOVEL*BLANKS   $LNAM  20
     CSR                   MOVEL*BLANKS   $WHDP   5
     CSR                   MOVEL*BLANKS   $STYP   1
     CSR                   MOVEL*BLANKS   $SHFT   6
     CSR                   MOVEL*BLANKS   $CREW   6
     CSR                   MOVEL*BLANKS   $NHRS  31
     CSR                   MOVEL*BLANKS   $RTN    8
     CSR                   CALL 'GETUSER'
     CSR                   PARM           $CODE
     CSR                   PARM           $WHSE
     CSR                   PARM           $EMP#
     CSR                   PARM           $FNAM
     CSR                   PARM           $INIT
     CSR                   PARM           $LNAM
     CSR                   PARM           $WHDP
     CSR                   PARM           $STYP
     CSR                   PARM           $SHFT
     CSR                   PARM           $CREW
     CSR                   PARM           $NHRS
     CSR                   PARM           $RTN
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCVQY   Convert quantity to string or string to quantity.
     C*
     CSR         ZZCVQY    BEGSR
     CSR                   CALL 'CVTQTY'
     CSR                   PARM           $CCMD   8
     CSR                   PARM           $CPRG  10
     CSR                   PARM           $CQTY1  70
     CSR                   PARM           $CQTY2  70
     CSR                   PARM           $CQTY3  70
     CSR                   PARM           $CUM1   2
     CSR                   PARM           $CUM2   2
     CSR                   PARM           $CUM3   2
     CSR                   PARM           $CQSTR 10
     CSR                   PARM           $CUSTR 17
     CSR                   PARM           $CRTN   8
     CSR                   PARM           $CERM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYF   Create key for file being used
     C*
     CSR         ZZKEYF    BEGSR
     CSR                   MOVE DSFKEY    $POFKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZKEYU   Create unique key for file
     C*             (to be used in delete and change programs)
     C*
     CSR         ZZKEYU    BEGSR
     CSR                   MOVE DSUKEY    $POUKY
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPT    Process non-standard options.
     C*              Note: Error handling is done in routine OPTNS2.
     C*
     CSR         ZZOPT     BEGSR
     C*
     C*   Work with tie/high
     C*
     CSR         WKOOPT    IFEQ ' 8'
     CSR                   Z-ADDPDWHSE    $SWHSE  30
     CSR                   CALL 'IT141'
     CSR                   PARM           $SWHSE
     CSR                   PARM           $PITEM
     CSR                   ENDIF
     C*
     C*   Transactions.
     C*
     CSR         WKOOPT    IFEQ ' 9'
     CSR                   EXSR ZZPUTO
     CSR                   MOVE OPMPUT    $LMPUT  1
     CSR                   MOVE $PUKY     $LUKY
     CSR                   MOVE *BLANKS   $LRTN
     CSR                   CALL 'PO140'
     CSR                   PARM           $LUKY
     CSR                   PARM           $LRTN
     CSR                   PARM           $LMPUT
     CSR                   EXSR ZZTRCV
     CSR                   ENDIF
     C*
     C*   Receive item
     C*
     CSR         WKOOPT    IFEQ ' 1'
     CSR                   EXSR ZZCHEK
     CSR         ERROR     CABEQ*ON       ENDOPT
     C*
     CSR                   SELEC
     C*    No positioning used. Check if item/Mfr# on multiple p/o's.
     C*    If found on multiple p/o's, display pop-up window.
     C*    Note: This is ONLY for Super P/O's.
     CSR         SVP2PO    WHEQ *BLANKS
     CSR         SVP2VL    ANDEQ*BLANKS
     CSR         $SPO      ANDEQ'*YES'
     C*
     C*    Position to used, but different P/O selected.
     CSR         SVP2PO    ORGT *BLANKS
     CSR         SVP2PO    ANDNE$PPO
     C*
     C*    Position to used, but different Item selected.
     CSR         SVP2VL    ORGT *BLANKS
     CSR         SVP2VL    ANDNE$PITEM
     C*
     C*    Super P/O being processed.
     CSR                   MOVE $PITEM    PTINP1
     CSR                   MOVE $PITEM    PDITEM
     CSR                   MOVE '*SLCTITM'OVRTYP
     C*
     CSR                   EXSR ZZWDW
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   MOVE *BLANKS   W1MFR
     CSR                   SELEC
     C*    New P/O selected. Go to Receiving.
     CSR         REPOS     WHEQ *ON
     CSR                   MOVE WOPO4     $PPO
     CSR                   Z-ADDHSEQ      $PSEQ
     CSR                   MOVE HITEM     $PITEM
     CSR                   MOVE HVITM     $PVITM
     CSR                   EXSR ZZRCV
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     CSR                   MOVE *OFF      REPOS
     CSR                   ENDSL
     C*
     C*    User used Position to and has selected same item.
     CSR         SVP2PO    WHEQ $PPO
     CSR         SVP2VL    ANDEQ$PITEM
     C*
     C*    User processing Single P/O.
     CSR         $SPO      OREQ '*NO '
     C*
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     C*
     CSR                   EXSR ZZRCV
     CSR                   ENDSL
     CSR                   ENDIF
     C*
     C*   Quick Receive item
     C*
     CSR         WKOOPT    IFEQ ' 7'
     CSR                   EXSR ZZCHEK
     CSR         ERROR     CABEQ*ON       ENDOPT
     C*
     CSR                   SELEC
     C*    No positioning used. Check if item/Mfr# on multiple p/o's.
     C*    If found on multiple p/o's, display pop-up window.
     C*    Note: This is ONLY for Super P/O's.
     CSR         SVP2PO    WHEQ *BLANKS
     CSR         SVP2VL    ANDEQ*BLANKS
     CSR         $SPO      ANDEQ'*YES'
     C*
     C*    Position to used, but different P/O selected.
     CSR         SVP2PO    ORGT *BLANKS
     CSR         SVP2PO    ANDNE$PPO
     C*
     C*    Position to used, but different Item selected.
     CSR         SVP2VL    ORGT *BLANKS
     CSR         SVP2VL    ANDNE$PITEM
     C*
     C*    Super P/O being processed.
     CSR                   SELEC
     CSR         VIEW      WHEQ '*POITEM '
     CSR         VIEW      OREQ '*POMFR  '
     CSR                   MOVE $PITEM    PTINP1
     CSR                   MOVE $PITEM    PDITEM
     CSR                   MOVE '*SLCTITM'OVRTYP
     CSR                   ENDSL
     CSR                   EXSR ZZWDW
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   MOVE *BLANKS   W1MFR
     CSR                   SELEC
     C*    New P/O selected. Go to Receiving.
     CSR         REPOS     WHEQ *ON
     CSR                   MOVE WOPO4     $PPO
     CSR                   Z-ADDHSEQ      $PSEQ
     CSR                   MOVE HITEM     $PITEM
     CSR                   MOVE HVITM     $PVITM
     CSR                   EXSR ZZRCV
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     CSR                   MOVE *OFF      REPOS
     CSR                   ENDSL
     C*
     C*    User used Position to and has selected same item.
     CSR         SVP2PO    WHEQ $PPO
     CSR         SVP2VL    ANDEQ$PITEM
     C*
     C*    User processing Single P/O.
     CSR         $SPO      OREQ '*NO '
     C*
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     C*
     CSR                   EXSR ZZRCV
     CSR                   ENDSL
     CSR                   ENDIF
     C*
     C*   Enter HACCP information.
     C*
     CSR         WKOOPT    IFEQ '11'
     CSR                   MOVE '*ITEM   '$PCMD
     CSR                   CALL 'PO170'
     CSR                   PARM           $PARMS
     CSR                   ENDIF
     C*
     C*   Work with slots
     C*
     CSR         WKOOPT    IFEQ '12'
     CSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   MOVE PDITEM    $LITM
     CSR                   CALL 'IT130'
     CSR                   PARM           $LUKY
     CSR                   PARM           $LRTN
     CSR                   ENDIF
     C*
     C*   Display Directed Putaway Receiving log.
     C*
     CSR         WKOOPT    IFEQ '99'
     CSR                   Z-ADD$KWHSE    $LWHSE
     CSR                   MOVE $KPO      $LPO
     CSR                   MOVE PDITEM    $LITEM
     CSR                   CALL 'PO135'
     CSR                   PARM           $LPARM
     CSR                   PARM           $LRTN
     CSR                   ENDIF
     C*
     C*   Display PORCV entries.
     C*
     CSR         WKOOPT    IFEQ '13'
     CSR                   MOVE $PUKY     $LUKY
     CSR                   MOVE *BLANKS   $LRTN
     CSR                   CALL 'PO138'
     CSR                   PARM           $LUKY
     CSR                   PARM           $LRTN
     CSR                   ENDIF
417 AC*
417 AC*   Maintain Receiving Exceptions.
417 AC*
417 ACSR         WKOOPT    IFEQ '14'
417 ACSR                   MOVE '*CHANGE '$LCMD
417 ACSR                   MOVE $PUKY     $LUKY
417 ACSR                   MOVE *BLANKS   $LRTN
417 ACSR                   CALL 'PO240'
417 ACSR                   PARM           $LPARM
417 ACSR                   PARM           $LRTN
417 ACSR                   ENDIF
     C*
     C*     Mark as touched/checked
     C*
     CSR         WKOOPT    IFEQ ' X'
     C*
     C*    Once answered yes process others in subfile without
     C*    promptiong each time...
     C*
     CSR         WOYES     IFEQ 'N'
     CSR                   EXFMTVERIFY
     CSR                   ENDIF
     CSR         WOYES     IFEQ 'Y'
     C**
     C**  Get key to
     C*   Read PORCV.  If not found then add...
     CSR                   MOVE $PUKY     DSUKEY
     CSR         DETLKY    SETLLPORCV
     CSR         DETLKY    READEPORCV                    55
     CSR         *IN55     IFEQ *ON
     CSR                   Z-ADDPDWHSE    PORWHS
     CSR                   MOVELPDPO      PORPO
     CSR                   Z-ADDPDSEQ     PORSEQ
     CSR         #JOBDT    MULT 10000.01  WRKDTE  60
     CSR         20000000  ADD  WRKDTE    PORDTE
     CSR                   Z-ADD#JOBTM    PORTIM
     CSR                   MOVEL#USER     PORUSR
     CSR                   Z-ADD$EMP#     POREMP
     CSR                   Z-ADD0         PORTRN
416eDC**                   Z-ADD0         PORLIC
416e CSR                   MOVE *BLANKS   PORLIC
     CSR                   Z-ADD0         PORLBL
     CSR                   MOVEL'X'       PORACT
416eACSR                   Z-ADD0         POREDT
416eACSR                   Z-ADD0         PORETI
     CSR                   WRITEPORREC
416bACSR                   ELSE
416bAC*    Release lock if record found.
416bACSR                   UNLCKPORCV
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR         ENDOPT    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOPN    Process file OPEN.
     C*
     CSR         ZZOPN     BEGSR
     C*
     C*   Process file Open for P/O by item view.
     CSR                   SELEC
     CSR         OVRTYP    WHEQ '*POITEM '
     C*
     CSR                   OPEN PO120A
     CSR                   MOVE *ON       OPEN1
     C*
     C*   Process file Open for P/O by Mfr view.
     CSR         OVRTYP    WHEQ '*POMFR  '
     C*
     CSR                   OPEN PO120B
     CSR                   MOVE *ON       OPEN1
     C*
     C*   Process file Open for Position To P/O by item view.
     CSR         OVRTYP    WHEQ '*POS2ITM'
     CSR         OVRTYP    OREQ '*SLCTITM'
     C*
     CSR                   OPEN PO120C
     CSR                   MOVE *ON       OPEN2
     C*
     C*   Process file Open for Position To P/O by Mfr view.
     CSR         OVRTYP    WHEQ '*POS2MFR'
     CSR         OVRTYP    OREQ '*SLCTMFR'
     C*
     CSR                   OPEN PO120D
     CSR                   MOVE *ON       OPEN2
     C*
     CSR                   ENDSL
     C*
     CSR         ENDOPN    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZOVR    Process file overrides.
     C*
     CSR         ZZOVR     BEGSR
     C*
     C*   Process file override for P/O by item view.
     CSR                   SELEC
     CSR         OVRTYP    WHEQ '*POITEM '
     C*
     C*      If query file already open then close it.
     C*
     CSR                   MOVELCLS1,1    QCMD      P
     CSR                   CALL 'QCMDEXC'              78
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     CSR         OPEN1     IFEQ *ON
     CSR                   CLOSEPO120A                 78
     CSR                   CLOSEPO120B                 78
     CSR                   ENDIF
     C*
     C*      Override database file.
     C*
     C*          OVRDBF FILE(PO120A) TOFILE(POSPO) SHARE(*YES)
     C*
     CSR                   MOVELOVR,1     QCMD      P
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     C*   Process file override for P/O by Mfr view.
     CSR         OVRTYP    WHEQ '*POMFR  '
     C*
     C*      If query file already open then close it.
     C*
     CSR                   MOVELCLS1,1    QCMD      P
     CSR                   CALL 'QCMDEXC'              78
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     CSR         OPEN1     IFEQ *ON
     CSR                   CLOSEPO120A                 78
     CSR                   CLOSEPO120B                 78
     CSR                   ENDIF
     C*
     C*      Override database file.
     C*
     C*          OVRDBF FILE(PO120B) TOFILE(POSPO) SHARE(*YES)
     C*
     CSR                   MOVELOVR,2     QCMD      P
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD
     CSR                   PARM 80        QLEN
     C*
     C*   Process file override for Position To P/O by item view.
     CSR         OVRTYP    WHEQ '*POS2ITM'
     CSR         OVRTYP    OREQ '*SLCTITM'
     C*
     C*      If query file already open then close it.
     C*
     CSR                   MOVELCLS1,2    QCMD      P
     CSR                   CALL 'QCMDEXC'              78
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     CSR         OPEN2     IFEQ *ON
     CSR                   CLOSEPO120C                 78
     CSR                   CLOSEPO120D                 78
     CSR                   ENDIF
     C*
     C*      Override database file.
     C*          OVRDBF FILE(PO120C) TOFILE(POSPO2) SHARE(*YES)
     C*
     CSR                   MOVELOVR,3     QCMD      P
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD
     CSR                   PARM 80        QLEN
     C*
     C*   Process file override for Position To P/O by Mfr view.
     CSR         OVRTYP    WHEQ '*POS2MFR'
     CSR         OVRTYP    OREQ '*SLCTMFR'
     C*
     C*      If query file already open then close it.
     C*
     CSR                   MOVELCLS1,2    QCMD      P
     CSR                   CALL 'QCMDEXC'              78
     CSR                   PARM           QCMD  256
     CSR                   PARM 80        QLEN   155
     C*
     CSR         OPEN2     IFEQ *ON
     CSR                   CLOSEPO120C                 78
     CSR                   CLOSEPO120D                 78
     CSR                   ENDIF
     C*
     C*      Override database file.
     C*
     C*          OVRDBF FILE(PO120D) TOFILE(POSPO2) SHARE(*YES)
     C*
     CSR                   MOVELOVR,4     QCMD      P
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD
     CSR                   PARM 80        QLEN
     C*
     CSR                   ENDSL
     C*
     CSR         ENDOVR    ENDSR
     C*  --------------------------------------------------------------
     C*
     C*  ZZPOS    Position to a different record.
     C*
     CSR         ZZPOS     BEGSR
     C*
     C*  See if user is trying to position to item or Mfr#
     CSR                   SELEC
     C*  Position to Item with a Single P/O.
     CSR         PTINP1    WHNE *BLANKS
     CSR         VIEW      ANDEQ'*POITEM '
     CSR         $SPO      ANDEQ'*NO '
     CSR                   Z-ADD*LOVAL    PDSEQ
     CSR                   MOVE PTINP1    PDITEM
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   MOVE *ON       REPOS
     C*
     C*  Position to mfr# with a Single P/O.
     CSR         W1MFR     WHNE *BLANKS
     CSR         VIEW      ANDEQ'*POMFR  '
     CSR         $SPO      ANDEQ'*NO '
     CSR                   MOVE W1MFR     PDVITM
     CSR                   MOVE *BLANKS   W1MFR
     CSR                   MOVE *ON       REPOS
     C*
     C*    With a Super P/O.
     C*
     C*    Position to Item - Display Pop-up Window.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POITEM '
     CSR         PTINP1    ANDNE*BLANKS
     CSR         PTINP2    ANDEQ*BLANKS
     CSR                   MOVE PTINP1    PDITEM
     CSR                   MOVE '*POS2ITM'OVRTYP
     CSR                   EXSR ZZWDW
     CSR                   MOVE *BLANKS   PTINP1
     C*
     C*    Position to Mfr# - Display Pop-up Window.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POMFR  '
     CSR         W1MFR     ANDNE*BLANKS
     CSR         PTINP2    ANDEQ*BLANKS
     CSR                   MOVE W1MFR     PDVITM
     CSR                   MOVE '*POS2MFR'OVRTYP
     CSR                   EXSR ZZWDW
     CSR                   MOVE *BLANKS   W1MFR
     C*
     C*    Position to P/O and/or Item - No Window.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POITEM '
     CSR         PTINP1    ANDNE*BLANKS
     CSR         PTINP2    ANDNE*BLANKS
     C*
     CSR         $SPO      OREQ '*YES'
     CSR         VIEW      ANDEQ'*POITEM '
     CSR         PTINP1    ANDEQ*BLANKS
     CSR         PTINP2    ANDNE*BLANKS
     CSR                   Z-ADD*LOVAL    PDSEQ
     CSR                   MOVE PTINP1    PDITEM
     CSR                   MOVE *BLANKS   PTINP1
     CSR                   MOVE PTINP2    PDPO
     CSR                   MOVE *BLANKS   PTINP2
     CSR                   MOVE *ON       REPOS
     C*
     C*    Position to Mfr# with a Super P/O - No Window.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POMFR  '
     CSR         W1MFR     ANDNE*BLANKS
     CSR         PTINP2    ANDNE*BLANKS
     C*
     CSR         $SPO      OREQ '*YES'
     CSR         VIEW      ANDEQ'*POMFR  '
     CSR         PTINP1    ANDEQ*BLANKS
     CSR         PTINP2    ANDNE*BLANKS
     CSR                   MOVE W1MFR     PDVITM
     CSR                   MOVE *BLANKS   W1MFR
     CSR                   MOVE PTINP2    PDPO
     CSR                   MOVE *BLANKS   PTINP2
     CSR                   MOVE *ON       REPOS
     C*
     CSR                   ENDSL
     CSR         ENDZPS    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPOS2   Position to record
     C*
     CSR         ZZPOS2    BEGSR
     C*
     C*    Code to use when we are not using a partial key.
     C*
     C*R         $POCMD    IFEQ '*TOP'
     C*R         *LOVAL    SETLLRECORD
     C*R                   ELSE
     C*R         $POCMD    IFEQ '*BOTTOM'
     C*R         *HIVAL    SETLLRECORD
     C*R                   END
     C*R                   END
     C*
     C*    Code to use when we do have a partial key to use.
     C*
     CSR                   SELEC
     C*
     C*    Single P/O in Item sequence.
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*NO '
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Single P/O in Mfr. sequence.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*NO '
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PARTKY    SETLLRECORD2
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PARTKY    SETGTRECORD2
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Super P/O in Item sequence.
     CSR         VIEW      WHEQ '*POITEM '
     CSR         $SPO      ANDEQ'*YES'
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PRTKY2    SETLLOQRECA
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PRTKY2    SETGTOQRECA
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Super P/O in Mfr. sequence.
     CSR         VIEW      WHEQ '*POMFR  '
     CSR         $SPO      ANDEQ'*YES'
     C*
     CSR         $POCMD    IFEQ '*TOP'
     CSR         PRTKY2    SETLLOQRECB
     CSR                   ELSE
     CSR         $POCMD    IFEQ '*BOTTOM'
     CSR         PRTKY2    SETGTOQRECB
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDSL
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZPUTO   Get Put away option.
     C*             Directed or Manual put away
     C*
     CSR         ZZPUTO    BEGSR
     C*
     CSR         ITKEY2    CHAINPIRITEM              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '*PICK   'KYCODE
     CSR         OPKEY2    CHAINOPTIOND              79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE 'N'       OPMPUT
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZQRY    Process OPNQRYF.
     C*
     CSR         ZZQRY     BEGSR
     C*
     C*    Run OPNQRYF to select records for Super P/O by P/O. by Item.
     CSR                   SELEC
     CSR         OVRTYP    WHEQ '*POITEM '
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY1,2    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAA80       QRY1,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY1,1    QCMD      P
     CSR         QCMD      CAT  QRY1,2:0  QCMD
     CSR         QCMD      CAT  QRY1,3:1  QCMD
     CSR         QCMD      CAT  QRY1,4:1  QCMD
     CSR         QCMD      CAT  QRY1,5:1  QCMD
     C*
     CSR         OVRTYP    WHEQ '*POMFR  '
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY2,2    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAA80       QRY2,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY2,1    QCMD      P
     CSR         QCMD      CAT  QRY2,2:0  QCMD
     CSR         QCMD      CAT  QRY2,3:1  QCMD
     CSR         QCMD      CAT  QRY2,4:1  QCMD
     CSR         QCMD      CAT  QRY2,5:1  QCMD
     C*
     C*    Run OPNQRYF to Position to Item(s) on Super P/O.
     CSR         OVRTYP    WHEQ '*POS2ITM'
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY3,6    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAPTINP1    A80,54
     CSR                   MOVEAA80       QRY3,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY3,1    QCMD      P
     CSR         QCMD      CAT  QRY3,2:0  QCMD
     CSR         QCMD      CAT  QRY3,3:1  QCMD
     CSR         QCMD      CAT  QRY3,4:1  QCMD
     CSR         QCMD      CAT  QRY3,5:1  QCMD
     C*
     C*    Run OPNQRYF to Position to Mfr#(s) on Super P/O.
     CSR         OVRTYP    WHEQ '*POS2MFR'
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY4,6    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAW1MFR     A80,54
     CSR                   MOVEAA80       QRY4,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY4,1    QCMD      P
     CSR         QCMD      CAT  QRY4,2:0  QCMD
     CSR         QCMD      CAT  QRY4,3:1  QCMD
     CSR         QCMD      CAT  QRY4,4:1  QCMD
     CSR         QCMD      CAT  QRY4,5:1  QCMD
     C*
     C*    Run OPNQRYF to select item from Super P/O.
     CSR         OVRTYP    WHEQ '*SLCTITM'
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY3,2    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAPTINP1    A80,54
     CSR                   MOVEAA80       QRY3,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY3,1    QCMD      P
     CSR         QCMD      CAT  QRY3,2:0  QCMD
     CSR         QCMD      CAT  QRY3,3:1  QCMD
     CSR         QCMD      CAT  QRY3,4:1  QCMD
     CSR         QCMD      CAT  QRY3,5:1  QCMD
     C*
     CSR         OVRTYP    WHEQ '*SLCTMFR'
     C*
     C*    Load QRYSLT selection values.
     CSR                   MOVEAQRY4,2    A80
     CSR                   MOVEA$WHSEA    A80,10
     CSR                   MOVEA$KSPO     A80,28
     CSR                   MOVEAW1MFR     A80,54
     CSR                   MOVEAA80       QRY4,2
     C*
     C*    Build command string for query.
     CSR                   MOVELQRY4,1    QCMD      P
     CSR         QCMD      CAT  QRY4,2:0  QCMD
     CSR         QCMD      CAT  QRY4,3:1  QCMD
     CSR         QCMD      CAT  QRY4,4:1  QCMD
     CSR         QCMD      CAT  QRY4,5:1  QCMD
     C*
     CSR                   ENDSL
     C*
     C*    Process OPNQRYF to select records.
     CSR                   CALL 'QCMDEXC'
     CSR                   PARM           QCMD
     CSR                   PARM 256       QLEN
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZRCV    Receive item
     C*
     CSR         ZZRCV     BEGSR
     C*
     CSR                   EXSR ZZPUTO
     C*
     CSR         WKOOPT    IFEQ ' 7'
     CSR                   MOVE '*QUICK  '$LCMD
     CSR                   ELSE
     CSR                   MOVE '*CHANGE '$LCMD
     CSR                   ENDIF
     C*
     CSR                   MOVE $PUKY     $LUKY
     CSR                   MOVE W1UPC     $LUPC
     CSR                   MOVE *BLANKS   W1UPC
417bACSR                   MOVE *BLANKS   W1UPCD
     CSR                   Z-ADD0         $LRSQT
     C*
416fACSR                   MOVE OPMPUT    SVMPUT
416fDC**         OPMPUT    IFEQ 'N'
     C*
416fAC*  Note: For every item check the DEPTDSG file for designation
416fAC*        code.  If the item's desig code is in the file, then
416fAC*        use opposite putaway method than the default for the
416fAC*        department (OPMPUT).
416fAC*
416fAC*        PUTTYP=*ON - Desig code found in file. Use opp. method.
416fAC*        PUTTYP=*OFF - DSesig code not found.
     C*
     C*
416fACSR                   EXSR ZZDESG
     C*
416fACSR         PUTTYP    IFEQ *ON
416fACSR         OPMPUT    ANDEQ'N'
416fACSR                   MOVE 'Y'       SVMPUT
416fACSR                   ENDIF
     C*
416fACSR         PUTTYP    IFEQ *ON
416fACSR         OPMPUT    ANDEQ'Y'
416fACSR                   MOVE 'N'       SVMPUT
416fACSR                   ENDIF
     C*
416fMCSR         SVMPUT    IFEQ 'N'
     CSR                   CALL 'PO132'
     CSR                   PARM           $LPARM
     CSR                   PARM           $LUPC  20
     CSR                   PARM           $LRSQT  70
     C*R                   ADD  $LRSQT    WOSRC
     CSR                   EXSR ZZTRCV
     CSR                   ELSE
     CSR                   CALL 'PO232'
     CSR                   PARM           $LPARM
     CSR                   PARM           $LUPC  20
     CSR                   PARM           $LRSQT  70
     C*R                   ADD  $LRSQT    WOSRC
     CSR                   EXSR ZZTRCV
     CSR                   ENDIF
     CSR         $LRTN     IFEQ '*OK     '
     C*    Recalculate session total received.
     C*
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $LMSG     #MSGK
     CSR                   EXSR ZMQMSG
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZTRCV   Calculate total qty received for PO
     C*
     CSR         ZZTRCV    BEGSR
     C*
     CSR                   SELEC
     CSR         $SPO      WHEQ '*NO '
     C*
     CSR                   MOVE *ZEROS    WOSRC
     CSR         PARTKY    SETLLRECORD
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         PARTKY    READERECORD                   79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR                   ADD  PDQRC1    WOSRC
     CSR                   ADD  PDQRC2    WOSRC
     CSR                   ADD  PDQRC3    WOSRC
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     C*    Process Super P/O. Accumulate receiving totals.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POITEM '
     C*
     CSR                   MOVE *ZEROS    WOSRC
     CSR         PRTKY2    SETLLOQRECA
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         PRTKY2    READEOQRECA                   79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     CSR                   ADD  PDQRC1    WOSRC
     CSR                   ADD  PDQRC2    WOSRC
     CSR                   ADD  PDQRC3    WOSRC
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     C*    Process Super P/O. Accumulate receiving totals.
     CSR         $SPO      WHEQ '*YES'
     CSR         VIEW      ANDEQ'*POMFR  '
     C*
     CSR                   MOVE *ZEROS    WOSRC
     CSR         PRTKY2    SETLLPO120B
     CSR                   MOVE *OFF      STOP
     CSR         STOP      DOUEQ*ON
     CSR         PRTKY2    READEPO120B                   79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       STOP
     CSR                   ELSE
     CSR         *IN79     IFEQ *OFF
     CSR         PDKEY     CHAINPODTL                77
     CSR                   ENDIF
     CSR                   ADD  PDQRC1    WOSRC
     CSR                   ADD  PDQRC2    WOSRC
     CSR                   ADD  PDQRC3    WOSRC
     CSR                   ENDIF
     CSR                   ENDDO
     CSR                   ENDSL
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUHDR   Update Super P/O status upon exit.
     C*
     CSR         ZZUHDR    BEGSR
     C*
     CSR                   MOVE *ON       FULL    1
     CSR                   MOVE *OFF      PART    1
     CSR                   MOVE *OFF      RECV    1
     CSR         PRTKY2    SETLLPUJREC
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY2    READEPUJREC                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR                   OTHER
     C*
     CSR         *IN79     IFEQ *OFF
     CSR         PDQRC1    IFLT PDQOR1
     CSR                   MOVE *ON       PART
     CSR                   MOVE *OFF      FULL
     CSR                   ENDIF
     C*
     CSR         PDQRC2    IFLT PDQOR2
     CSR                   MOVE *ON       PART
     CSR                   MOVE *OFF      FULL
     CSR                   ENDIF
     C*
     CSR         PDQRC3    IFLT PDQOR3
     CSR                   MOVE *ON       PART
     CSR                   MOVE *OFF      FULL
     CSR                   ENDIF
     C*
     CSR         PDQRC1    IFGT 0
     CSR                   MOVE *ON       RECV
     CSR                   ENDIF
     C*
     CSR         PDQRC2    IFGT 0
     CSR                   MOVE *ON       RECV
     CSR                   ENDIF
     C*
     CSR         PDQRC3    IFGT 0
     CSR                   MOVE *ON       RECV
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR         RECV      IFEQ *OFF
     CSR                   MOVE *OFF      FULL
     CSR                   MOVE *OFF      PART
     CSR                   ENDIF
     C*
     C*    Update Super P/O header with new status.
     CSR         PRTKY2    CHAINPOHDR                79
     CSR         *IN79     IFEQ *OFF
     CSR                   SELEC
     C*    Super P/O partially received.
     CSR         PART      WHEQ *ON
     CSR                   MOVE '1'       PHSTAT
     C*
     C*    Super P/O Fully received.
     CSR         FULL      WHEQ *ON
     CSR                   MOVE '2'       PHSTAT
     C*
     C*    Super P/O still Open.
     CSR         PART      WHEQ *OFF
     CSR         FULL      ANDEQ*OFF
     CSR                   MOVE '0'       PHSTAT
     CSR                   ENDSL
     CSR                   UPDATPHREC
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZWDW    Build Pop-Up window for selection of item/Mfr.
     C*
     CSR         ZZWDW     BEGSR
     C*
     CSR                   MOVE *BLANKS   SVP2PO
     CSR                   MOVE *BLANKS   SVP2VL
     CSR                   MOVE *BLANKS   OPTION
     C*
     CSR                   SELEC
     CSR         OVRTYP    WHEQ '*POS2ITM'
     CSR         OVRTYP    OREQ '*POS2MFR'
     CSR         OVRTYP    OREQ '*SLCTITM'
     CSR         OVRTYP    OREQ '*SLCTMFR'
     C*    Condition heading in window.
     CSR                   MOVE *ON       *IN41
     C*    Process file override.
     CSR                   EXSR ZZOVR
     C*    Process OPNQRYF.
     CSR                   EXSR ZZQRY
     C*    Open file for processing.
     CSR                   EXSR ZZOPN
     CSR                   ENDSL
     C*
     C********************************************************************
     C*
     CSR                   MOVE *ZEROS    RECNO4
417b CSR                   MOVE *OFF      REPOS
     C*
     CSR                   SELEC
     C*    User chose to Select one Item.
     CSR         OVRTYP    WHEQ '*SLCTITM'
     C*
     C*    Find out if item on more than one P/O.
     C*    If the item is on only ONE P/O, then position to the P/O
     C*    and item.
     CSR                   Z-ADD1         N
     CSR                   MOVE *ZEROS    TTLRCD
     CSR         PRTKY3    SETLLOQRECC
     CSR         1         DO   2         N
     CSR         PRTKY3    READEOQRECC                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR         N         ANDEQ1
     CSR                   LEAVE
     C*
     C*    Item found on more than one P/O.
     CSR         N         WHEQ 2
     CSR         *IN79     IFEQ *ON
     CSR                   Z-ADD1         TTLRCD
     CSR                   ELSE
     CSR                   Z-ADDN         TTLRCD
     CSR                   ENDIF
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   SELEC
     C*    Item NOT found on any P/O. Don't reposition the screen.
     CSR         TTLRCD    WHLT 1
     CSR                   MOVE *OFF      REPOS
     C*
     C*    Item on only ONE P/O. Position to the item.
     CSR         TTLRCD    WHEQ 1
     CSR                   MOVE PDPO      WOPO4
     CSR                   Z-ADDPDSEQ     HSEQ
     CSR                   MOVE PDITEM    HITEM
     CSR                   MOVE PDVITM    HVITM
     CSR                   MOVE PDPO      $KPO
     CSR                   MOVE PDPO      SVP2PO
     CSR                   MOVE PTINP1    SVP2VL
     CSR                   MOVE *ON       REPOS
     C*
     C*    Item on more than ONE P/O. Display select window.
     CSR         TTLRCD    WHGT 1
     C*
     CSR                   MOVELTITL01    W4TITL    P
     CSR                   WRITEWINDOW4
     C*    Clear subfile.
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC4
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE 'Item:'   SLCTXT
     CSR                   MOVE PTINP1    SLCVAL
     C*
     C*    Fill subfile.
     CSR         PRTKY3    SETLLOQRECC
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY3    READEOQRECC                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR                   OTHER
     CSR                   EXSR ZZFIL4
     CSR                   EXSR SFLAD4
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     C*    Now that subfile is loaded, Display it to the user.
     CSR                   EXSR ZZWDW2
     C*
     CSR                   ENDSL                           TTLRCD Select
     C*
     C********************************************************************
     C*
     C*    User chose to Select one Mfr#.
     CSR         OVRTYP    WHEQ '*SLCTMFR'
     C*
     C*    Find out if Mfr# on more than one P/O.
     C*    If the Mfr# is on only ONE P/O, then position to the P/O
     C*    and Mfr#.
     CSR                   Z-ADD1         N
     CSR                   MOVE *ZEROS    TTLRCD
     CSR         PRTKY4    SETLLOQRECD
     CSR         1         DO   2         N
     CSR         PRTKY4    READEOQRECD                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR         N         ANDEQ1
     CSR                   LEAVE
     C*
     C*    Item found on more than one P/O.
     CSR         N         WHEQ 2
     CSR         *IN79     IFEQ *ON
     CSR                   Z-ADD1         TTLRCD
     CSR                   ELSE
     CSR                   Z-ADDN         TTLRCD
     CSR                   ENDIF
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   SELEC
     C*    Mfr# NOT found on any P/O. Don't reposition the screen.
     CSR         TTLRCD    WHLT 1
     CSR                   MOVE *OFF      REPOS
     C*
     C*    Mfr# on only ONE P/O. Position to the Mfr#.
     CSR         TTLRCD    WHEQ 1
     CSR                   MOVE PDPO      WOPO4
     CSR                   Z-ADDPDSEQ     HSEQ
     CSR                   MOVE PDITEM    HITEM
     CSR                   MOVE PDVITM    HVITM
     CSR                   MOVE PDPO      $KPO
     CSR                   MOVE PDPO      SVP2PO
     CSR                   MOVE W1MFR     SVP2VL
     CSR                   MOVE *ON       REPOS
     C*
     C*    Mfr# on more than ONE P/O. Display select window.
     CSR         TTLRCD    WHGT 1
     C*
     CSR                   MOVELTITL01    W4TITL    P
     CSR                   WRITEWINDOW4
     C*    Clear subfile.
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC4
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE 'Mfr :'   SLCTXT
     CSR                   MOVE W1MFR     SLCVAL
     C*
     C*    Fill subfile.
     CSR         PRTKY4    SETLLOQRECD
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY4    READEOQRECD                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     CSR                   OTHER
     C*
     CSR                   EXSR ZZFIL4
     CSR                   EXSR SFLAD4
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     C*    Now that subfile is built, Display it to the user.
     CSR                   EXSR ZZWDW2
     C*
     CSR                   ENDSL                           TTLRCD Select
     C*
     C********************************************************************
     C*
     C*    User chose to Position to Item.
     CSR         OVRTYP    WHEQ '*POS2ITM'
416dAC*
416dAC*    Find out if item on more than one P/O.
416dAC*    If the item is on only ONE P/O, then position to the P/O
416dAC*    and item and do not display pop-up window.
416dACSR                   Z-ADD1         N
416dACSR                   MOVE *ZEROS    TTLRCD
416dACSR         PRTKY3    SETLLOQRECC
416dACSR         1         DO   2         N
416dACSR         PRTKY3    READEOQRECC                   79
416dACSR                   SELEC
416dACSR         *IN79     WHEQ *ON
416dACSR         N         ANDEQ1
416dACSR                   LEAVE
416dAC*
416dAC*    Item found on more than one P/O.
416dACSR         N         WHEQ 2
416dACSR         *IN79     IFEQ *ON
416dACSR                   Z-ADD1         TTLRCD
416dACSR                   ELSE
416dACSR                   Z-ADDN         TTLRCD
416dACSR                   ENDIF
416dACSR                   ENDSL
416dACSR                   ENDDO
416dAC*
416dACSR                   SELEC
416dAC*    Item on only ONE P/O. Position to the item. No Window.
416dACSR         TTLRCD    WHEQ 1
416dACSR                   MOVE PDPO      WOPO4
416dACSR                   Z-ADDPDSEQ     HSEQ
416dACSR                   MOVE PDITEM    HITEM
416dACSR                   MOVE PDVITM    HVITM
416dACSR                   MOVE PDPO      $KPO
416dACSR                   MOVE PDPO      SVP2PO
416dACSR                   MOVE PTINP1    SVP2VL
416dACSR                   MOVE *ON       REPOS
416dAC*
416dAC*    Item on more than ONE P/O or item not found. Display window.
416dACSR         TTLRCD    WHGT 1
416dACSR         TTLRCD    ORLT 1
     C*
     CSR                   MOVELTITL03    W4TITL    P
     CSR                   WRITEWINDOW4
     C*    Clear subfile.
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC5
     CSR                   MOVE *ON       *IN01
     C*    Load headings.
     CSR                   MOVELHDR01     W5TXT1    P
     CSR                   MOVEL'Mfr:'    W5TXT2
     C*
     C*    Fill subfile.
     CSR         PRTKY3    SETLLOQRECC
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY2    READEOQRECC                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR                   OTHER
     CSR                   EXSR ZZFIL5
     CSR                   EXSR SFLAD5
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     C*    Now that subfile is loaded, Display it to the user.
416cACSR                   SELEC
416cAC*    When 2 or more records are loaded in subfile. Display window.
416cACSR         RECNO4    WHGE 2
     CSR                   EXSR ZZWDW4
416cAC*
416cAC*    Only one item loaded. Position to that p/o/item in main sfl.
416cACSR         RECNO4    WHEQ 1
416cACSR                   MOVE PDPO      WOPO4
416cACSR                   Z-ADDPDSEQ     HSEQ
416cACSR                   MOVE PDITEM    HITEM
416cACSR                   MOVE PDVITM    HVITM
416cACSR                   MOVE PDPO      $KPO
416cACSR                   MOVE PDPO      SVP2PO
416cACSR                   MOVE PTINP1    SVP2VL
416cACSR                   MOVE *ON       REPOS
416cAC*
416cAC*    No items loaded. Send error message.
416cACSR         RECNO4    WHLE 0
416caCSR                   MOVE 'item'    ERP2TP
416cACSR                   MOVE $KSPO     ERSPO
416cACSR                   MOVE PTINP1    ERP2VL
416cACSR                   EXSR ZM3236
416cAC*
416cACSR                   ENDSL
416dAC*
416dACSR                   ENDSL                           TTLRCD selec
     C*
     C********************************************************************
     C*
     C*    User chose to Position to Mfr#.
     CSR         OVRTYP    WHEQ '*POS2MFR'
416dAC*
416dAC*    Find out if Mfr# on more than one P/O.
416dAC*    If the Mfr# is on only ONE P/O, then position to the P/O
416dAC*    and Mfr#.
416dACSR                   Z-ADD1         N
416dACSR                   MOVE *ZEROS    TTLRCD
416dACSR         PRTKY4    SETLLOQRECD
416dACSR         1         DO   2         N
416dACSR         PRTKY4    READEOQRECD                   79
416dACSR                   SELEC
416dACSR         *IN79     WHEQ *ON
416dACSR         N         ANDEQ1
416dACSR                   LEAVE
416dAC*
416dAC*    Item found on more than one P/O.
416dACSR         N         WHEQ 2
416dACSR         *IN79     IFEQ *ON
416dACSR                   Z-ADD1         TTLRCD
416dACSR                   ELSE
416dACSR                   Z-ADDN         TTLRCD
416dACSR                   ENDIF
416dACSR                   ENDSL
416dACSR                   ENDDO
416dAC*
416dACSR                   SELEC
416dAC*    Mfr# on only ONE P/O. Position to the Mfr#.
416dACSR         TTLRCD    WHEQ 1
416dACSR                   MOVE PDPO      WOPO4
416dACSR                   Z-ADDPDSEQ     HSEQ
416dACSR                   MOVE PDITEM    HITEM
416dACSR                   MOVE PDVITM    HVITM
416dACSR                   MOVE PDPO      $KPO
416dACSR                   MOVE PDPO      SVP2PO
416dACSR                   MOVE W1MFR     SVP2VL
416dACSR                   MOVE *ON       REPOS
416dAC*
416dAC*    Mfr# on more than ONE P/O or not found. Display window.
416dACSR         TTLRCD    WHGT 1
416dACSR         TTLRCD    ORLT 1
     C*
     CSR                   MOVELTITL04    W4TITL    P
     CSR                   WRITEWINDOW4
     C*    Clear subfile.
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC5
     CSR                   MOVE *ON       *IN01
     C*    Load headings.
     CSR                   MOVELHDR02     W5TXT1    P
     CSR                   MOVEL'Itm:'    W5TXT2
     C*
     C*    Fill subfile.
     CSR         PRTKY4    SETLLOQRECD
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY2    READEOQRECD                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     CSR                   OTHER
     C*
     CSR                   EXSR ZZFIL5
     CSR                   EXSR SFLAD5
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     C*    Now that subfile is built, Display it to the user.
416cACSR                   SELEC
416cAC*    When 2 or more records are loaded in subfile. Display window.
416cACSR         RECNO4    WHGE 2
     CSR                   EXSR ZZWDW4
416cAC*
416cAC*    Only one item loaded. Position to that p/o/item in main sfl.
416cACSR         RECNO4    WHEQ 1
416cACSR                   MOVE PDPO      WOPO4
416cACSR                   Z-ADDPDSEQ     HSEQ
416cACSR                   MOVE PDITEM    HITEM
416cACSR                   MOVE PDVITM    HVITM
416cACSR                   MOVE PDPO      $KPO
416cACSR                   MOVE PDPO      SVP2PO
416cACSR                   MOVE PTINP1    SVP2VL
416cACSR                   MOVE *ON       REPOS
416cAC*
416cAC*    No items loaded. Send error message.
416cACSR         RECNO4    WHLE 0
416caCSR                   MOVE 'mfg#'    ERP2TP
416cACSR                   MOVE $KSPO     ERSPO
416cACSR                   MOVE W1MFR     ERP2VL
416cACSR                   EXSR ZM3236
416cAC*
416cACSR                   ENDSL
416dAC*
416dACSR                   ENDSL                           TTLRCD selec
     C*
     C********************************************************************
     C*
     C*    User chose to see sub-total by p/o.
     CSR         OVRTYP    WHEQ '*SUBTOTL'
     C*
     C*    Condition heading in window.
     CSR                   MOVE *OFF      *IN41
     CSR                   MOVELTITL02    W4TITL    P
     CSR                   WRITEWINDOW4
     C*    Clear subfile.
     CSR                   MOVE *OFF      *IN01
     CSR                   WRITEDSPSFC4
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE 'SPO :'   SLCTXT
     CSR                   MOVEL$KSPO     SLCVAL    P
     CSR                   MOVE *BLANKS   SVPO
     CSR                   MOVE *ZEROS    TQYOR1
     CSR                   MOVE *ZEROS    TQYRC1
     CSR                   MOVE *OFF      FIRST
     C*    Protect option field - Display only.
     CSR                   MOVE *ON       *IN90
     C*
     C*    Fill subfile.
     CSR         PRTKY2    SETLLPUJREC
     CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY2    READEPUJREC                   79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     C*
     C*    End of p/o detail, convert totals.
     CSR                   MOVE *LOVAL    SVPO
     CSR                   EXSR ZZFIL4
     CSR                   EXSR SFLAD4
     CSR                   LEAVE
     C*
     CSR                   OTHER
     C*
     CSR         FIRST     IFEQ *OFF
     CSR                   MOVE *ON       FIRST
     CSR                   MOVE PDPO      SVPO
     CSR                   ENDIF
     C*
     CSR                   EXSR ZZFIL4
     C*
     CSR                   SELEC
     CSR         SVPO      WHNE PDPO
     C*    Write total record for P/O to subfile.
     CSR                   EXSR SFLAD4
     CSR                   MOVE PDPO      SVPO
     C*    Clear total fields.
     CSR                   MOVE *ZEROS    TQYOR1
     CSR                   MOVE *ZEROS    TQYRC1
     C*    Add current record values to total.
     CSR                   EXSR ZZFIL4
     CSR                   ENDSL
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     C*    Now that subfile is built, Display it to the user.
     CSR                   EXSR ZZWDW2
     CSR                   MOVE *OFF      *IN90
417a C********************************************************************
417a C*
417a C*    Multiple Items exist for UPC, select item.
417a CSR         OVRTYP    WHEQ '*UPCSLCT'
417aAC*
417a C*
417a CSR                   MOVELTITL05    W4TITL    P
417a CSR                   WRITEWINDOW4
417a C*    Clear subfile.
417a CSR                   MOVE *OFF      *IN01
417a CSR                   WRITEDSPSFC6
417a CSR                   MOVE *ON       *IN01
417a C*    Load headings.
417a CSR                   MOVELHDR01     W6TXT1    P
417a CSR                   MOVEL'Itm:'    W6TXT2
417aAC*    Process for one po
417aACSR         $SPO      IFEQ '*NO'
417aACSR         UPCKEY    SETLLUPC
417a CSR         FOREVR    DOWEQFOREVR
417aACSR         UPCKEY    READEUPC                      79
417aACSR         *IN79     IFEQ *ON
417aACSR                   LEAVE
417aACSR                   ENDIF
417a C*
417a CSR                   MOVE UPITEM    WOITM# 15
417a CSR         PODKY1    SETLLPODTL1               78
417a CSR         FOREVR    DOWEQFOREVR
     CSR         PODKY1    READEPODTL1                   78
     CSR         *IN78     IFEQ *ON
417a C*
417a CSR                   MOVE *BLANKS   W6PO
417a CSR                   Z-ADD0         HSEQ
417a CSR                   MOVE WOITM#    PDITEM
417a CSR                   MOVE WOITM#    W6VAL1
417a CSR                   MOVE *BLANKS   W6VAL2
     CSR                   LEAVE
     CSR                   ELSE
417a C*
417a CSR                   MOVE PDPO      W6PO
417a CSR                   Z-ADDPDSEQ     HSEQ
417a CSR                   MOVE PDITEM    W6VAL1
417a CSR                   MOVE PDVITM    W6VAL2
     CSR                   LEAVE
     CSR                   ENDIF
     C*
417a CSR                   ENDDO
417a CSR                   EXSR ZZFIL6
417a CSR                   EXSR SFLAD6
417AACSR                   ENDDO
417a C*
417a C*    Now that subfile is built, Display it to the user.
417a CSR                   EXSR ZZWDW6
417AACSR                   ENDIF
417a C*
417aAC*    Process for SUPER po
417aACSR         $SPO      IFEQ '*YES'
417aACSR         UPCKEY    SETLLUPC
417a CSR         FOREVR    DOWEQFOREVR
417aACSR         UPCKEY    READEUPC                      79
417aACSR         *IN79     IFEQ *ON
417aACSR                   LEAVE
417aACSR                   ENDIF
417a CSR                   MOVE UPITEM    WOITM# 15
417a CSR                   MOVE *OFF      PRTUPC  1
417a C*    Get regular PO#
417a CSR         PRTKY2    SETLLPOSPO                77
417a CSR         FOREVR    DOWEQFOREVR
     CSR         PRTKY2    READEPOSPO                    77
     CSR         *IN77     IFEQ *ON
417aACSR                   LEAVE
417aACSR                   ELSE
417a CSR                   MOVE PUPO      $KPO
417aACSR                   ENDIF
417a C*
417a CSR         PODKY1    SETLLPODTL1               78
417a CSR         FOREVR    DOWEQFOREVR
     CSR         PODKY1    READEPODTL1                   78
     CSR         *IN78     IFEQ *ON
417a C*
417a CSR                   MOVE *BLANKS   W6PO
417a CSR                   Z-ADD0         HSEQ
417a CSR                   MOVE WOITM#    PDITEM
417a CSR                   MOVE WOITM#    W6VAL1
417a CSR                   MOVE *BLANKS   W6VAL2
     CSR                   LEAVE
     CSR                   ELSE
417a C*
417a CSR                   MOVE PDPO      W6PO
417a CSR                   Z-ADDPDSEQ     HSEQ
417a CSR                   MOVE PDITEM    W6VAL1
417a CSR                   MOVE PDVITM    W6VAL2
     CSR                   LEAVE
     CSR                   ENDIF
     C*
417a CSR                   ENDDO
417a CSR         *IN78     IFEQ *OFF
417a CSR                   EXSR ZZFIL6
417a CSR                   EXSR SFLAD6
417a CSR                   MOVE *ON       PRTUPC
417AACSR                   ENDIF
417a CSR                   ENDDO
417a CSR         PRTUPC    IFEQ *OFF
417a CSR                   EXSR ZZFIL6
417a CSR                   EXSR SFLAD6
417a CSR                   MOVE *ON       PRTUPC
417AACSR                   ENDIF
417AACSR                   ENDDO
417a C*
417a C*    Now that subfile is built, Display it to the user.
417a CSR                   EXSR ZZWDW6
417AACSR                   ENDIF
     C*
     CSR                   ENDSL                           Ovrtyp Select
     C********************************************************************
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZWDW2   Display Pop-Up window for selection of item/Mfr.
     C*
     CSR         ZZWDW2    BEGSR
     C*
     CSR         RECNO4    IFEQ *ZEROS
     CSR                   WRITEBLANK4
     CSR                   MOVE *ON       *IN56
     CSR                   ELSE
     CSR                   MOVE *OFF      *IN56
     CSR                   ENDIF
     C*
     CSR                   MOVE *ON       *IN57
     CSR         FOREVR    DOWEQFOREVR
     C*
     C*   Overlay screen with error messages
     CSR                   EXSR ZMDMS4
     C*
     CSR                   EXFMTDSPSFC4
     C*
     C*   Initialize error subfile
     CSR                   EXSR ZMCMS4
     C*
     CSR                   SELEC
     C*    F12=Cancel selected.
     CSR         *INKL     WHEQ *ON
     CSR                   MOVE *OFF      *INKL
     CSR                   LEAVE
     C*
     C*    F5=Refresh selected.
     CSR         *INKE     WHEQ *ON
     CSR                   EXSR CLRSCH
     CSR         1         DO   05        X
     CSR         X         CHAINDSPSFL4              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL4
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR                   OTHER
     C*
     C*    Process subfile.
     CSR                   EXSR ZZWDW3
     C*
     C*    User selected record from list.
     CSR         OPTSLT    IFEQ *ON
     CSR         ERROR     ANDEQ*OFF
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZWDW3   Process subfile looking for selection.
     C*
     CSR         ZZWDW3    BEGSR
     C*
     C*    Read ONLY the changed options.
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ZEROS    NRSLCT
     CSR                   MOVE *OFF      OPTSLT
     CSR         FOREVR    DOWEQFOREVR
     CSR                   READCDSPSFL4                  79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR                   OTHER
     C*
     C*    Display error if option is not valid.
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE *ON       *IN21
     CSR                   UPDATDSPSFL4
     C*
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   ENDIF
     C*
     C*    Look up option in profile - Error if not found.
     CSR         OPTION    LOKUPZOPT4                    50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR Z40108
     CSR                   ENDIF
     C*
     C*    Count number of entries when Option=1
     CSR         OPTION    IFEQ ' 1'
     CSR                   ADD  1         NRSLCT
     CSR                   MOVE WOPO4     PDPO
     CSR                   MOVE WOPO4     $KPO
     CSR                   MOVE WOPO4     SVP2PO
     CSR                   MOVE SLCVAL    SVP2VL
     C*    If number selected greater than 1, Then display message.
     CSR                   SELEC
     CSR         NRSLCT    WHEQ 1
     CSR                   MOVE *ON       OPTSLT
     CSR                   MOVE *ON       REPOS
     CSR         NRSLCT    WHGE 2
     CSR                   MOVE *ON       ERROR
     CSR                   MOVELERR01     ERRMSG    P
     CSR                   EXSR Z40105
     CSR                   MOVE *OFF      OPTSLT
     CSR                   MOVE *OFF      REPOS
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDIF                           IF: Opt ne ' '
     C*
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZWDW4   Display Pop-Up window for Position to item/Mfr.
     C*
     CSR         ZZWDW4    BEGSR
     C*
     CSR         RECNO4    IFEQ *ZEROS
     CSR                   WRITEBLANK5
     CSR                   MOVE *ON       *IN56
     CSR                   ELSE
     CSR                   MOVE *OFF      *IN56
     CSR                   ENDIF
     C*
     CSR                   MOVE *ON       *IN57
     CSR         FOREVR    DOWEQFOREVR
     C*
     C*   Overlay screen with error messages
     CSR                   EXSR ZMDMS4
     C*
     CSR                   EXFMTDSPSFC5
     C*
     C*   Initialize error subfile
     CSR                   EXSR ZMCMS4
     C*
     CSR                   SELEC
     C*    F12=Cancel selected.
     CSR         *INKL     WHEQ *ON
     CSR                   MOVE *OFF      *INKL
     CSR                   LEAVE
     C*
     C*    F5=Refresh selected.
     CSR         *INKE     WHEQ *ON
     CSR                   EXSR CLRSCH
     CSR         1         DO   05        X
     CSR         X         CHAINDSPSFL5              79
     CSR         *IN79     IFEQ *OFF
     CSR                   MOVE '  '      OPTION
     CSR                   UPDATDSPSFL5
     CSR                   ENDIF
     CSR                   ENDDO
     C*
     CSR                   OTHER
     C*
     C*    Process subfile.
     CSR                   EXSR ZZWDW5
     C*
     C*    User selected record from list.
     CSR         OPTSLT    IFEQ *ON
     CSR         ERROR     ANDEQ*OFF
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZWDW5   Process subfile5 looking for selection.
     C*
     CSR         ZZWDW5    BEGSR
     C*
     C*    Read ONLY the changed options.
     CSR                   MOVE *OFF      ERROR
     CSR                   MOVE *ZEROS    NRSLCT
     CSR                   MOVE *OFF      OPTSLT
     CSR         FOREVR    DOWEQFOREVR
     CSR                   READCDSPSFL5                  79
     CSR                   SELEC
     CSR         *IN79     WHEQ *ON
     CSR                   LEAVE
     C*
     CSR                   OTHER
     C*
     C*    Display error if option is not valid.
     CSR         OPTION    IFNE *BLANKS
     CSR                   MOVE *ON       *IN21
     CSR                   UPDATDSPSFL5
     C*
     CSR                   MOVEAOPTION    A2
     CSR         A2,2      IFEQ ' '
     CSR                   MOVE A2,1      A2,2
     CSR                   MOVE ' '       A2,1
     CSR                   MOVEAA2        OPTION
     CSR                   ENDIF
     C*
     C*    Look up option in profile - Error if not found.
     CSR         OPTION    LOKUPZOPT4                    50
     CSR         *IN50     IFEQ *OFF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   EXSR Z40108
     CSR                   ENDIF
     C*
     C*    Count number of entries when Option=1
     CSR         OPTION    IFEQ ' 1'
     CSR                   ADD  1         NRSLCT
     CSR                   MOVE W5PO      PDPO
     CSR                   MOVE W5PO      $KPO
     CSR                   MOVE W5PO      SVP2PO
     CSR                   Z-ADDHSEQ      PDSEQ
     CSR                   SELEC
     CSR         OVRTYP    WHEQ '*POS2ITM'
     CSR                   MOVE W5VAL1    PDITEM
     CSR                   MOVE W5VAL1    SVP2VL
     CSR                   MOVE W5VAL2    PDVITM
     CSR         OVRTYP    WHEQ '*POS2MFR'
     CSR                   MOVE W5VAL1    PDVITM
     CSR                   MOVE W5VAL2    PDITEM
     CSR                   MOVE W5VAL2    SVP2VL
     CSR                   ENDSL
     C*    If number selected greater than 1, Then display message.
     CSR                   SELEC
     CSR         NRSLCT    WHEQ 1
     CSR                   MOVE *ON       OPTSLT
     CSR                   MOVE *ON       REPOS
     CSR         NRSLCT    WHGE 2
     CSR                   MOVE *ON       ERROR
     CSR                   MOVELERR01     ERRMSG    P
     CSR                   EXSR Z40105
     CSR                   MOVE *OFF      OPTSLT
     CSR                   MOVE *OFF      REPOS
     CSR                   ENDSL
     CSR                   ENDIF
     CSR                   ENDIF                           IF: Opt ne ' '
     C*
     CSR                   ENDSL
     CSR                   ENDDO
     C*
     CSR                   ENDSR
417a C*----------------------------------------------------------------
417a C*
417a C*  ZZWDW6   Display Pop-Up window for UPC multiple items.
417a C*
417a CSR         ZZWDW6    BEGSR
417a C*
417a CSR         RECNO4    IFEQ *ZEROS
417a CSR                   WRITEBLANK5
417a CSR                   MOVE *ON       *IN56
417a CSR                   ELSE
417a CSR                   MOVE *OFF      *IN56
417a CSR                   ENDIF
417a C*
417a CSR                   MOVE *ON       *IN57
417a CSR         FOREVR    DOWEQFOREVR
417a C***        REFRSH    CABEQ*ON       JMP1
417a C*
417a C*   Overlay screen with error messages
417a CSR                   EXSR ZMDMS4
417a C*
417a CSR                   EXFMTDSPSFC6
417a C*
417a C*   Initialize error subfile
417a CSR                   EXSR ZMCMS4
417a C*
417a CSR                   SELEC
417a C*    F12=Cancel selected.
417a CSR         *INKL     WHEQ *ON
417a CSR                   MOVE *OFF      *INKL
417a CSR                   LEAVE
417a C*
417a C*    F5=Refresh selected.
417a CSR         *INKE     WHEQ *ON
417a CSR         REFRSH    OREQ *ON
417a CSR                   MOVE *OFF      REFRSH
417a CSR                   EXSR CLRSCH
417a CSR         1         DO   05        X
417a CSR         X         CHAINDSPSFL6              79
417a CSR         *IN79     IFEQ *OFF
417a CSR                   MOVE '  '      OPTION
417a CSR                   UPDATDSPSFL6
417a CSR                   ENDIF
417a CSR                   ENDDO
417a C*
417a CSR                   OTHER
417a C*
417a C*    Process subfile.
417f CSR                   EXSR ZZWDWX
417a CSR                   EXSR ZZWDW7
417a C*
417a C*    User selected record from list.
417a CSR         OPTSLT    IFEQ *ON
417a CSR         ERROR     ANDEQ*OFF
417a CSR                   LEAVE
417a CSR                   ENDIF
417a C*
417f C*    User did NOT select record from list.
417f CSR         OPTSLT    IFEQ *OFF
417f CSR         ERROR     ANDEQ*OFF
417f CSR                   LEAVE
417f CSR                   ENDIF
417a C*
417a CSR                   ENDSL
417a CSR         REFRSH    IFEQ *ON
417a CSR                   MOVE *OFF      REFRSH
417a CSR                   EXSR CLRSCH
417a CSR         1         DO   05        X
417a CSR         X         CHAINDSPSFL6              79
417a CSR         *IN79     IFEQ *OFF
417a CSR                   MOVE '  '      OPTION
417a CSR                   UPDATDSPSFL6
417a CSR                   ENDIF
417a CSR                   ENDDO
417a CSR                   ITER
417a CSR                   ENDIF
417a CSR                   ENDDO
417a C*
417a CSR                   ENDSR
     C*----------------------------------------------------------------
417a C*
417a C*  ZZWDW7   Process subfile6 looking for selection 1.
417a C*
417a CSR         ZZWDW7    BEGSR
417a C*
417a C*    Read ONLY the changed options.
417a CSR                   MOVE *OFF      ERROR
417a CSR                   MOVE *ZEROS    NRSLCT
417a CSR                   MOVE *OFF      OPTSLT
417a CSR         FOREVR    DOWEQFOREVR
417a CSR                   READCDSPSFL6                  79
417a CSR                   SELEC
417a CSR         *IN79     WHEQ *ON
417a CSR                   LEAVE
417a C*
417a CSR                   OTHER
417a C*
417a C*    Display error if option is not valid.
417a CSR         OPTION    IFNE *BLANKS
417a CSR                   MOVE *ON       *IN21
417a CSR                   UPDATDSPSFL6
417a C*
417a CSR                   MOVEAOPTION    A2
417a CSR         A2,2      IFEQ ' '
417a CSR                   MOVE A2,1      A2,2
417a CSR                   MOVE ' '       A2,1
417a CSR                   MOVEAA2        OPTION
417a CSR                   ENDIF
417a C*
417a C*    Look up option in profile - Error if not found.
417eDC*R         OPTION    LOKUPZOPT4                    50
417eMCSR         OPTION    LOKUPZOPT6                    50
417a CSR         *IN50     IFEQ *OFF
417a CSR                   MOVE *ON       ERROR
417a CSR                   MOVE *BLANKS   ERRMSG
417a CSR                   EXSR Z40108
417a CSR                   ENDIF
417a C*
417a C*    Count number of entries when Option=1
417a CSR         OPTION    IFEQ ' 1'
417a CSR                   ADD  1         NRSLCT
417a CSR                   MOVE W6PO      PDPO
417g CSR         W6PO      IFNE *BLANKS
417a CSR                   MOVE W6PO      $KPO
417g CSR                   ENDIF
417a CSR                   MOVE W6PO      SVP2PO
417a CSR                   MOVE W6VAL1    UPITEM
417a CSR                   MOVE W6VAL1    PDITEM
417a CSR                   Z-ADDHSEQ      PDSEQ
417a CSR                   MOVE W6VAL2    PDVITM
417a C*    If number selected greater than 1, Then display message.
417a CSR                   SELEC
417a CSR         NRSLCT    WHEQ 1
417a CSR                   MOVE *ON       OPTSLT
417a CSR                   MOVE *ON       REPOS
417a CSR         NRSLCT    WHGE 2
417a CSR                   MOVE *ON       ERROR
417a CSR                   MOVELERR01     ERRMSG    P
417a CSR                   EXSR Z40105
417a CSR                   MOVE *OFF      OPTSLT
417a CSR                   MOVE *OFF      REPOS
417a CSR                   ENDSL
417a CSR                   ENDIF
417a C*
417a C*
417a CSR                   ENDIF                           IF: Opt ne ' '
417a C*
417a CSR                   ENDSL
417a CSR                   ENDDO
417a C*
417a CSR                   ENDSR
417f C*----------------------------------------------------------------
417f C*
417f C*  ZZWDWX   Process subfile6 looking for selection X
417f C*
417f CSR         ZZWDWX    BEGSR
417f C*
417f C*    Read ONLY the changed options.
417f CSR                   MOVE *OFF      ERROR
417f CSR                   MOVE *ZEROS    NRSLCT
417f CSR                   MOVE *OFF      OPTSLT
417f CSR         FOREVR    DOWEQFOREVR
417f CSR                   READCDSPSFL6                  79
417f CSR                   SELEC
417f CSR         *IN79     WHEQ *ON
417f CSR                   LEAVE
417f C*
417f CSR                   OTHER
417f C*
417f C*    Display error if option is not valid.
417f CSR         OPTION    IFNE *BLANKS
417f CSR                   MOVE *ON       *IN21
417f CSR                   UPDATDSPSFL6
417f C*
417f CSR                   MOVEAOPTION    A2
417f CSR         A2,2      IFEQ ' '
417f CSR                   MOVE A2,1      A2,2
417f CSR                   MOVE ' '       A2,1
417f CSR                   MOVEAA2        OPTION
417f CSR                   ENDIF
417f C*
417f C*    Look up option in profile - Error if not found.
417eDC*R         OPTION    LOKUPZOPT4                    50
417fMCSR         OPTION    LOKUPZOPT6                    50
417f CSR         *IN50     IFEQ *OFF
417f CSR                   MOVE *ON       ERROR
417f CSR                   MOVE *BLANKS   ERRMSG
417f CSR                   EXSR Z40108
417f CSR                   ENDIF
417f C*
417f C*    Process exceptions Option=X
417f CSR         OPTION    IFEQ ' X'
417fACSR                   MOVE W6VAL1    KYITEM
417faCSR                   MOVEL'RCV'     KYTASK    P
417fACSR                   MOVEL'RDUPUPC' KYERID    P
417fACSR                   MOVE '1 '      KYESTA
417f CSR         IX2KEY    SETLLITMEXCP2
417f CSR         FOREVR    DOWEQFOREVR
417f CSR         IX2KEY    READEITMEXCP2                 79
     C*
417f CSR         *IN79     IFEQ *ON
417f CSR                   MOVE *ON       DOEX    1
417f CSR                   LEAVE
417f CSR                   ELSE
417f CSR                   MOVE *OFF      DOEX
417f CSR                   LEAVE
417f CSR                   ENDIF
     C*
417f CSR                   ENDDO
     C*
417f CSR         DOEX      IFEQ *ON
417fACSR                   MOVE W6VAL1    PDITEM
417f CSR         ITKEY     CHAINPIRITEM              79
417f CSR         *IN79     IFEQ *OFF
417fACSR                   MOVE ITWHDP    EXWHDP
417fACSR                   MOVE ITSTYP    EXSTYP
417fACSR                   ELSE
417fACSR                   MOVE *BLANKS   EXWHDP
417fACSR                   MOVE *BLANKS   EXSTYP
417fACSR                   ENDIF
417f C**                   ADD  1         NRSLCT
417fACSR                   Z-ADD$KWHSE    EXWHSE
417fACSR                   MOVE W6VAL1    EXITEM
417fACSR                   MOVE *BLANKS   EXFDIS
417fACSR                   MOVE *BLANKS   EXTDIS
417fACSR                   Z-ADDTODAY     EXGDTE
417fACSR                   TIME           EXGTIM
417fMCSR                   Z-ADD0         EXQTY
417faCSR                   MOVEL'RCV'     EXTASK    P
417fACSR                   MOVE #USER     EXGBY
417fACSR                   MOVEL'RDUPUPC' EXERID    P
417fACSR                   MOVE '1 '      EXESTA
417fACSR                   MOVE W1UPC     DSUPC
417fACSR                   MOVE DSFDIS    EXFDIS
417fACSR                   MOVE DSTDIS    EXTDIS
417fACSR                   WRITEEXREC
417f CSR                   ENDIF
417g C**                   MOVE *ON       REFRSH
417g C**                   MOVE *OFF      *IN21
417g C**                   LEAVE
417f CSR                   ENDIF
417f C*
417f CSR                   ENDIF                           IF: Opt ne ' '
417f C*
417f CSR                   ENDSL
417f CSR                   ENDDO
417f C*
417f CSR                   ENDSR
417f C*----------------------------------------------------------------
     C*
     C*  ZZXOPT   Get use extended description option
     C*
     CSR         ZZXOPT    BEGSR
     C*
     C*   Get extended description option.
     CSR                   Z-ADD10        PRCREC  20
     CSR                   MOVE *OFF      UXFLAG  1
     CSR                   MOVE '*ITEMMNT'OCODE   8
     C*
     CSR         OPKEY     CHAINOPTIONS              79
     CSR         *IN79     IFEQ *OFF
     CSR         OPXDSC    IFEQ 'Y'
     CSR                   MOVE *ON       UXFLAG
     CSR                   Z-ADD5         PRCREC
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*   If processing a Super P/O, Force display to be displayed
     C*   in 2-line mode.
     CSR         $SPO      IFEQ '*YES'
     CSR         UXFLAG    ANDEQ'0'
     CSR                   MOVE '1'       UXFLAG
     CSR                   Z-ADD5         PRCREC
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*
     O*----------------------------------------------------------------
     O*
     O*  Compile time tables
     O*
**  ZOPT - Valid options
 1 2 4 5 7 8 91112131499 X
**  ZOPT4 - Valid options for WINDOW4
 1
**  ZOPT6 - Valid options for DSPSFL6
 1 X
**  OPTLN - Option display line
  1=Receive  2=Change  4=Delete  5=View  7=Quick receive  8=Work w/tie/high
  9=Transactions  11=HACCP info  12=Work w/slots 13=View receiving  X=Check
  14=Rcv exceptions  99=View directed putaway tracking

**  CMDLN - Command display line
F3=Exit  F5=Refresh  F6=Create  F9=PO/Mfr Code  F12=Cancel  F23=More options
F3=Exit  F5=Refresh  F6=Create  F9=PO/Item      F12=Cancel  F23=More options
F3=Exit  F5=Refresh  F6=Create  F7=Subtotals  F9=PO/Mfr Code   F24=More keys
F3=Exit  F5=Refresh  F6=Create  F7=Subtotals  F9=PO/Item       F24=More keys
F12=Cancel  F23=More options                                   F24=More keys
**   OVRDBF statements
OVRDBF FILE(PO120A) TOFILE(POSPO) SHARE(*YES) LVLCHK(*NO)
OVRDBF FILE(PO120B) TOFILE(POSPO) SHARE(*YES) LVLCHK(*NO)
OVRDBF FILE(PO120C) TOFILE(POSPO2) SHARE(*YES) LVLCHK(*NO)
OVRDBF FILE(PO120D) TOFILE(POSPO2) SHARE(*YES) LVLCHK(*NO)
**   OPNQRYF statements for PO120A - whse/spo/po/item seq.
OPNQRYF FILE((POSPO) (PODTL)) FORMAT(PO120A) QRYSLT('
PUWHSE = 999 *AND PUSPO = "123456789"')
KEYFLD((1/PUWHSE) (1/PUSPO) (1/PUPO) (2/PDITEM))
JFLD((1/PUWHSE 2/PDWHSE *EQ) (1/PUPO 2/PDPO *EQ))
OPTIMIZE(*FIRSTIO) JDFTVAL(*NO) SEQONLY(*NO)
**   OPNQRYF statements for PO120B - whse/spo/po/vitm seq.
OPNQRYF FILE((POSPO) (PODTL)) FORMAT(PO120B) QRYSLT('
PUWHSE = 999 *AND PUSPO = "123456789"')
KEYFLD((1/PUWHSE) (1/PUSPO) (1/PUPO) (2/PDVITM))
JFLD((1/PUWHSE 2/PDWHSE *EQ) (1/PUPO 2/PDPO))
OPTIMIZE(*FIRSTIO) JDFTVAL(*NO) SEQONLY(*NO)
**   OPNQRYF statements for PO120C - whse/spo/item/po seq.
OPNQRYF FILE((POSPO2) (PODTL)) FORMAT(PO120C) QRYSLT('
PUWHSE = 999 *AND PUSPO = "123456789" *AND PDITEM = "123456789012345"')
KEYFLD((1/PUWHSE) (1/PUSPO) (2/PDITEM) (1/PUPO))
JFLD((1/PUWHSE 2/PDWHSE *EQ) (1/PUPO 2/PDPO))
OPTIMIZE(*FIRSTIO) JDFTVAL(*NO)
PUWHSE = 999 *AND PUSPO = "123456789" *AND PDITEM >="123456789012345"')
**   OPNQRYF statements for PO120D - whse/spo/vitm/po seq.
OPNQRYF FILE((POSPO2) (PODTL)) FORMAT(PO120D) QRYSLT('
PUWHSE = 999 *AND PUSPO = "123456789" *AND PDVITM  ="123456789012345"')
KEYFLD((1/PUWHSE) (1/PUSPO) (2/PDVITM) (1/PUPO))
JFLD((1/PUWHSE 2/PDWHSE *EQ) (1/PUPO 2/PDPO))
OPTIMIZE(*FIRSTIO) JDFTVAL(*NO)
PUWHSE = 999 *AND PUSPO = "123456789" *AND PDVITM >="123456789012345"')
**   CLOF statement.
CLOF POSPO
CLOF POSPO2
