     F*----------------------------------------------------------------
     F*   Copyright (C) 1996 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  PL210     Create pallet pattern - Parameters
     F*  11 April 1996
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
213 AF*    05/21/96  HNK  2.13
     F*      - Overhang and increment parameters removed.
     F*      - Options file added to get overhang and increment
     F*        parameters.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FPL210FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     FPALLET  IF  E           K        DISK
213 AFOPTIONS IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1   8 60
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  24 $LPAL
     I*
213 AI*----------------------------------------------------------------
213 AI*  *PATTERN  -  Tie pattern options.
213 AI*----------------------------------------------------------------
213 AI*
213 AI* Fields
213 AI*
213 AI*    OPHANG  -  Pallet overhang.
213 AI*    OPDINC  -  Dimension increment.
213 AI*
213 AI* Data structure
213 AI*
213 AIOPDATA      DS
213 AI                                        1   32OPHANG
213 AI                                        4   62OPDINC
213 AI                                      117 117 OPTEND
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  30 ERFLD
     I                                       31  40 ERFROM
     I                                       41  50 ERTO
     I*
     I                                        1  20 ERTFLD
     I                                       21  40 ERFFLD
     I                                    P  41  450ERT#
     I                                    P  46  500ERF#
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
    DC*                    MOVE *BLANKS   $PRTN
    DC*                    MOVE *BLANKS   $PERM
     C*
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR                   SELEC
     C*
     CSR         NXTSCR    WHEQ '01 '
     C*R                   EXFMTSCREEN1                50
     CSR                   EXFMTSCREEN1
     C*
     CSR                   ENDSL
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     30
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
MSG MCSR                   EXSR ZMCPMQ
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     CSR                   EXSR ZZFIL1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZNXT1
     CSR         ERROR     CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so get next screen.
     C*
     C*                    EXSR SCR02I
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0112  Invalid range entered.
     C*
     CSR         ZM0112    BEGSR
     CSR                   MOVE 'PIR0112' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR1001  Invalid code.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEADESC,1    ERRMSG
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   MOVE #MSGK     $LMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0119  Field 1 must be greater than field 2
     C*
     CSR         ZM0119    BEGSR
     CSR                   MOVE 'PIR0119' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify pallet code.
     C*
     CSR         W1PAL     CHAINPALLET               79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   EXSR ZM1001
     CSR                   ENDIF
213 DC*
213 DC*  Verify overhang is within range.
213 DC*
213 DC*R         W1HANG    IFLT 0
213 DC*R         W1HANG    ORGT 9.99
213 DC*R                   MOVE *ON       ERROR
213 DC*R                   MOVE *ON       *IN22
213 DC*R                   MOVE *ON       *IN02
213 DC*R                   MOVE *BLANKS   ERRMSG
213 DC*R                   MOVELDESC,2    ERFLD
213 DC*R                   MOVEL'0'       ERFROM
213 DC*R                   MOVEL'9.99'    ERTO
213 DC*R                   EXSR ZM0112
213 DC*R                   ENDIF
     C*
     C*  Verify from length is within range.
     C*
     CSR         W1LENF    IFLT 1
     CSR         W1LENF    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,3    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify to length is within range.
     C*
     CSR         W1LENT    IFLT 1
     CSR         W1LENT    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,4    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify from length is not greater than to length.
     C*
     CSR         W1LENF    IFGT W1LENT
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,4    ERTFLD
     CSR                   MOVELDESC,3    ERFFLD
     CSR                   Z-ADDW1LENF    ERT#
     CSR                   Z-ADDW1LENT    ERF#
     CSR                   EXSR ZM0119
     CSR                   ENDIF
213 DC*
213 DC*  Verify length increment is within range.
213 DC*
213 DC*R         W1INCL    IFLT .5
213 DC*R         W1INCL    ORGT 9.99
213 DC*R                   MOVE *ON       ERROR
213 DC*R                   MOVE *ON       *IN25
213 DC*R                   MOVE *ON       *IN05
213 DC*R                   MOVE *BLANKS   ERRMSG
213 DC*R                   MOVELDESC,5    ERFLD
213 DC*R                   MOVEL'.5'      ERFROM
213 DC*R                   MOVEL'9.99'    ERTO
213 DC*R                   EXSR ZM0112
213 DC*R                   ENDIF
     C*
     C*  Verify from width is within range.
     C*
     CSR         W1WDTF    IFLT 1
     CSR         W1WDTF    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN06
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,6    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify to width is within range.
     C*
     CSR         W1WDTT    IFLT 1
     CSR         W1WDTT    ORGT 999.99
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,7    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'999.99'  ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     C*  Verify from width is not greater than to width.
     C*
     CSR         W1WDTF    IFGT W1WDTT
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,7    ERTFLD
     CSR                   MOVELDESC,6    ERFFLD
     CSR                   Z-ADDW1WDTF    ERT#
     CSR                   Z-ADDW1WDTT    ERF#
     CSR                   EXSR ZM0119
     CSR                   ENDIF
213 DC*
213 DC*  Verify width increment is within range.
213 DC*
213 DC*R         W1INCW    IFLT .5
213 DC*R         W1INCW    ORGT 9.99
213 DC*R                   MOVE *ON       ERROR
213 DC*R                   MOVE *ON       *IN28
213 DC*R                   MOVE *ON       *IN08
213 DC*R                   MOVE *BLANKS   ERRMSG
213 DC*R                   MOVELDESC,8    ERFLD
213 DC*R                   MOVEL'.5'      ERFROM
213 DC*R                   MOVEL'9.99'    ERTO
213 DC*R                   EXSR ZM0112
213 DC*R                   ENDIF
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ '1'
     CSR                   MOVE '1'       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     CSR                   SELEC
     C*
     C*     Pallet.
     C*
     CSR         ROW#      WHEQ 7
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   MOVE W1PAL     $LPAL
     CSR                   CALL 'PL900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LPAL     W1PAL
     CSR                   ENDIF
     C*
     CSR                   OTHER
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   GOTO ENDCM1
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     CSR                   MOVE *BLANKS   W1PAL
213 DC*R                   Z-ADD0         W1HANG
     CSR                   Z-ADD0         W1LENF
     CSR                   Z-ADD0         W1LENT
213 DC*R                   Z-ADD0         W1INCL
     CSR                   Z-ADD0         W1WDTF
     CSR                   Z-ADD0         W1WDTT
213 DC*R                   Z-ADD0         W1INCW
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
213 AC*
213 AC*  Define key for options file.
213 AC*
213 ACSR                   Z-ADD0         $PWHSE
213 ACSR         OPTNKY    KLIST
213 ACSR                   KFLD           $PWHSE  30
213 ACSR                   KFLD           OPCODE
     C*
     CSR                   MOVE #PROG     $LPRG
     CSR                   MOVE #PROG     #PGMQ
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
213 AC*
213 AC*   Get tie pattern options.
213 AC*
213 ACSR                   MOVE '*PATTERN'OPCODE
213 ACSR         OPTNKY    CHAINOPTIONS              79
213 ACSR         *IN79     IFEQ *ON
213 ACSR                   Z-ADD1         OPHANG
213 ACSR                   Z-ADD.5        OPDINC
213 ACSR                   ENDIF
     C*
     C*   Select first screen to display.
     C*
     CSR                   EXSR SCR01I
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZNXT1   What to do next when screen 1 input is ok.
     C*
     CSR         ZZNXT1    BEGSR
     C*
     CSR                   Z-ADDW1LENF    $PPKGL
     CSR         $PPKGL    DOUGTW1LENT
     CSR                   Z-ADDW1WDTF    $PPKGW
     CSR         $PPKGW    DOUGTW1WDTT
     C*
     CSR                   CALL 'PL215'
     CSR                   PARM W1PAL     $PPAL   6
     CSR                   PARM PLLEN     $PPALL  30
     CSR                   PARM PLWDTH    $PPALW  30
213 MCSR                   PARM OPHANG    $PHANG  32
     CSR                   PARM           $PPKGL  52
     CSR                   PARM           $PPKGW  52
     CSR                   PARM           $PQTY   30
     CSR                   PARM           $PRTN   8
     C*
213 MCSR                   ADD  OPDINC    $PPKGW
     CSR                   ENDDO
213 MCSR                   ADD  OPDINC    $PPKGL
     CSR                   ENDDO
     C*
     CSR                   ENDSR
     O*----------------------------------------------------------------
     O*
     O*  COMPILE TIME TABLES
     O*
**
Pallet code
Overhang
Package from length
Package to length
Length increment
Package from width
Package to width
Width increment
