     F*----------------------------------------------------------------
     F*   Copyright (C) 1997 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  UT816     Recalculate item quantity from slots - BATCH
     F*  10 March, 1999
     F*  Roxanne Harrison
     F*  Created using UT812
     F*
     F*  Revisions
     F*
412 AF*    09/16/99  DAS  4.12
     F*      - Revised to include SLTFR quantities in UPDQTY routine.
     F*
415 AF*    07/02/01  DAS  4.15
     F*      - Revised to write record to LABEL file to record that
     F*        an item's warehouse qty was recalculated.
     F*
     F*----------------------------------------------------------------
     F*
     F*  Notes
     F*
     F*    - The screen for this program must be compiled with
     F*      defer write equal to *NO.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FUT816FM CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FPIRITEM IF  E           K        DISK
     FSLOT3   IF  E           K        DISK
     FITEMQTY UF  E           K        DISK                      A
415 AFLABEL   O   E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
415 AI*----------------------------------------------------------------
415 AI*  Called programs
415 AI*
415 AI              'CVTDTE'              C         @CVTDT
415 AI*----------------------------------------------------------------
415 AI*  Called program parameters
415 AI*
415 AI$CVTDT      DS
415 AI                                        1   8 $CVCMD
415 AI                                        9  18 $CVPRG
415 AI                                       19  24 $CVD6I
415 AI                                       25  32 $CVD8I
415 AI                                       33  380$CVD6O
415 AI                                       39  460$CVD8O
415 AI                                       47  64 $CVSTO
415 AI                                       65  72 $CVRTN
415 AI                                       73 132 $CVERM
415 AI                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PWHS   Warehouse
     C*      $PITEM  Item number or *ALL.
     C*      $PJTYP  0 - Batch
     C*              1 - Interactive
     C*      $PPRG   Program to send messages back to.
     C*
     C*    Returned Parameters
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PMSG   Error message id.
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PWHS  155
     C                     PARM           $PITEM 15
     C                     PARM           $PJTYP  1
     C                     PARM           $PPRG  10
     C                     PARM           $PRTN   8
     C                     PARM           $PMSG   4
     C*
     C                     Z-ADD$PWHS     $PWHSE  30
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C*
     C* Recalculate.
     C*
     C           $PITEM    IFEQ '*ALL'
     C                     EXSR ALLITM
     C                     ELSE
     C                     EXSR ONEITM
     C                     ENDIF
     C*
     C                     MOVE *ON       *INLR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize variables
     C*
     CSR                   MOVE *ON       FOREVR  1
     CSR                   MOVE *OFF      ERROR   1
     C*
     C*   Define keys
     C*
     CSR         KEYWH     KLIST
     CSR                   KFLD           $PWHSE
     C*
     CSR         KEYIT     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITITEM
     C*
     C*   Open display file if this program is being run interactively.
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   OPEN UT816FM
     CSR                   ENDIF
     C*
     C*   Initialize message handling
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZMIMSG
     CSR                   ENDIF
     C*
     C*   Fool the compiler.
     C*
     CSR                   MOVE *BLANKS   DUMMY   1
     CSR         DUMMY     IFNE *BLANKS
     CSR                   READ UT816FM                  50
     CSR                   ENDIF
415 AC*
415 AC*  Convert today's date into century format.
415 AC*
415 ACSR                   MOVE '*CURCMD '$CVCMD
415 ACSR                   CALL @CVTDT
415 ACSR                   PARM           $CVTDT
415 ACSR                   Z-ADD$CVD8O    TODAY   80
415 ACSR                   TIME           LSTTIM  60
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ALLITM  Recalculate all items.
     C*
     CSR         ALLITM    BEGSR
     C*
     CSR         KEYWH     SETLLPIRITEM
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYWH     READEPIRITEM                  79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     CSR         $PJTYP    IFEQ *ON
     CSR                   MOVE ITITEM    W1ITEM
     CSR                   WRITESCREEN1
     CSR                   ENDIF
     C*
     C*      Get item quantity record.
     C*
     CSR                   EXSR GETQTY
     CSR         ERROR     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*      Recalculate quantity.
     C*
     CSR                   EXSR UPDQTY
     CSR         ERROR     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     CSR         ERROR     IFNE *ON
     CSR                   MOVEL'*ALL'    ERITEM    P
CR1 DC*R                   EXSR ZM01
     CSR                   MOVE '*OK     '$PRTN
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  GETQTY  Get quantity record.
     C*
     CSR         GETQTY    BEGSR
     C*
     CSR         KEYIT     CHAINITEMQTY              78
     C*
     C*     If record doesn't exist try and create it.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   CLEARIQREC
     CSR                   Z-ADD$PWHSE    IQWHSE
     CSR                   MOVE ITITEM    IQITEM
     CSR                   WRITEIQREC                  77
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE ITITEM    ERITEM
CR1 DC*R                   EXSR ZM21
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   GOTO ENDGET
     CSR                   ENDIF
     CSR         KEYIT     CHAINITEMQTY              78
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE ITITEM    ERITEM
CR1 DC*R                   EXSR ZM21
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   GOTO ENDGET
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*   Record found - Zero quantities.
     C*
     CSR                   EXSR ZERO
     C*
     CSR         ENDGET    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ONEITM  Recalculate quantity for one item.
     C*
     CSR         ONEITM    BEGSR
     CSR         $PJTYP    IFEQ *ON
     CSR                   MOVE $PITEM    W1ITEM
     CSR                   WRITESCREEN1
     CSR                   ENDIF
     C*
     C*     Verify item number.
     C*
     CSR                   MOVE $PITEM    ITITEM
     CSR         KEYIT     CHAINPIRITEM              78
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PITEM    ERITEM
CR1 DC*R                   EXSR ZM22
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   GOTO ENDONE
     CSR                   ENDIF
     C*
     C*     Get item quantity record.
     C*
     CSR                   EXSR GETQTY
     CSR         ERROR     CABEQ*ON       ENDONE
     C*
     C*     Recalculate quantities.
     C*
     CSR                   EXSR UPDQTY
     CSR         ERROR     IFNE *ON
     CSR                   MOVE ITITEM    ERITEM
     CSR                   MOVE '*OK     '$PRTN
CR1 DC*R                   EXSR ZM01
     CSR                   ENDIF
     C*
     CSR         ENDONE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  UPDQTY  Update item quantities from slot quantities.
     C*
     CSR         UPDQTY    BEGSR
     C*
     C*  Loop through slots for item and update quantities.
     C*
     CSR         KEYIT     SETLLSLOT3
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYIT     READESLOT3                    78
     CSR         *IN78     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     C*    Skip verified and zeroed slots.
     C*
     CSR         SLSTAT    IFEQ 'V'
     CSR         SLSTAT    OREQ 'Z'
     CSR                   ITER
     CSR                   ENDIF
     C*
     C*    Update stock quantities.
     C*
     CSR                   ADD  SLSTK1    IQSTK1
     CSR                   ADD  SLRCV1    IQSTK1
412 ACSR                   SUB  SLTFR1    IQSTK1
     CSR                   ADD  SLSTK2    IQSTK2
     CSR                   ADD  SLRCV2    IQSTK2
412 ACSR                   SUB  SLTFR2    IQSTK2
     CSR                   ADD  SLSTK3    IQSTK3
     CSR                   ADD  SLRCV3    IQSTK3
412 ACSR                   SUB  SLTFR3    IQSTK3
     C*
     C*    Update allocated quantities.
     C*
     CSR                   ADD  SLALC1    IQALC1
     CSR                   ADD  SLPCK1    IQALC1
     CSR                   ADD  SLALC2    IQALC2
     CSR                   ADD  SLPCK2    IQALC2
     CSR                   ADD  SLALC3    IQALC3
     CSR                   ADD  SLPCK3    IQALC3
     C*
     C*    Update hold quantities.
     C*
     CSR         SLSTAT    IFNE 'A'
     CSR                   ADD  SLSTK1    IQHLD1
     CSR                   ADD  SLRCV1    IQHLD1
     CSR                   ADD  SLSTK2    IQHLD2
     CSR                   ADD  SLRCV2    IQHLD2
     CSR                   ADD  SLSTK3    IQHLD3
     CSR                   ADD  SLRCV3    IQHLD3
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     C*  Update item quantity record.
     C*
     CSR                   UPDATIQREC                  77
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE IQITEM    ERITEM
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
CR1 DC*R                   EXSR ZM23
     CSR                   ENDIF
415 AC*
415 AC*  Write out tracking record to LABEL file.
415 AC*
415 ACSR                   Z-ADDIQWHSE    LBWHSE
415 ACSR                   MOVE IQITEM    LBITEM
415 ACSR                   MOVE 'Q'       LBTYPE
415 ACSR                   MOVEL'*UT812*' LBDSP2    P
415 ACSR                   MOVE 'C'       LBSTAT
415 ACSR                   TIME           LBSTIM
415 ACSR         LBSTIM    IFLT LSTTIM
415 ACSR                   MOVE '*CURCMD '$CVCMD
415 ACSR                   CALL @CVTDT
415 ACSR                   PARM           $CVTDT
415 ACSR                   Z-ADD$CVD8O    TODAY   80
415 ACSR                   Z-ADDLBSTIM    LSTTIM
415 ACSR                   ENDIF
415 ACSR                   Z-ADDTODAY     LBSDTE
415 ACSR                   Z-ADDTODAY     LBRDTE
415 ACSR                   CALL 'PIRLBL#'
415 ACSR                   PARM           LBLBL#
415 ACSR                   WRITELBREC
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZERO    Zero item quantities.
     C*
     CSR         ZERO      BEGSR
     C*
     CSR                   Z-ADD0         IQSTK1
     CSR                   Z-ADD0         IQSTK2
     CSR                   Z-ADD0         IQSTK3
     CSR                   Z-ADD0         IQALC1
     CSR                   Z-ADD0         IQALC2
     CSR                   Z-ADD0         IQALC3
     CSR                   Z-ADD0         IQHLD1
     CSR                   Z-ADD0         IQHLD2
     CSR                   Z-ADD0         IQHLD3
     C*
     CSR                   ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCSBF  Clear message subfile.
     C*
     CSR         ZMCSBF    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   UT81201  Item recalculated successfully.
     C*
     CSR         ZM01      BEGSR
     CSR                   MOVE 'UT81201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81221  Item not recalculated - No ITEMQTY record.
     C*
     CSR         ZM21      BEGSR
     CSR                   MOVE 'UT81221' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81222  Item not recalculated - Item does not exist.
     C*
     CSR         ZM22      BEGSR
     CSR                   MOVE 'UT81222' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81223  Item not recalculated - Error updating ITEMQTY.
     C*
     CSR         ZM23      BEGSR
     CSR                   MOVE 'UT81223' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
