     F*----------------------------------------------------------------
     F*   Copyright (C) 1994 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
416 MF** OP130     PIR options - Receiving
416 MF*  OP130     PIR options - Receiving Priorities
     F*  29 October 1994
     F*  Dave Sommerville
     F*
     F*  Revisions
     F*
212 AF*    04/26/96  DAS  2.12
212 AF*      - Revised label program parameter list.
212 AF*      - Changed call to label program to use *CLOSE instead of
212 AF*        *FLUSH.
217 AF*    11/06/96  RH   2.17
     F*      - Added W1PASL & W1PFRC fields.
     F*      - Changed label program parameters from $P to $R,
     F*        $PCMD is used in program flow.
221 AF*    05/14/97  RH   2.21
     F*      - Added W1PLCN field.
     F*
409 AI*    04/09/98  HNK/DAS 4.09
     I*      - Added OPPCHM to receiving options.
     I*      - Added OPPMIX to receiving options.
412 AF*    08/19/99  MLB  4.12
     F*      - Add assign pick slots automatically for fixed items;
     F*        SC1 field (OPAPCK)
413 AF*    10/13/99  RH   4.13
     F*      - Move default "N" to OPAPCK in ZZDFT1.
     F*
414 AF*    10/09/00  DAS  4.14
     F*      - Added force marking of PO detai lines;
     F*        Field OPFRCM.
     F*
416 AF*    09/24/01  DAS  4.16
     F*      - Renamed this set of options to "Receiving Priorities'
     F*      - Created new program for "Receiving Options", OP135.
     F*      - Took fields OPFRCM, OPPLCN and OPLPGM out of this
     F*        program and moved them into OP135.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  01 - 20   FIELD POSITION TO
     F*  21 - 40   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT KEY)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FOP130FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FOPTIONS UF  E           K        DISK                      A
     F            OPREC                             KRENAMERECORD
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
412 DE*                   DESC    1  12 50
414 DE*                   DESC    1  13 50
414 ME                    DESC    1  14 50
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$PARMS      DS
     I                                        1   8 $PCMD
     I                                        9  18 $PPRG
     I                                       19  68 $PUKY
     I                                       69  76 $PRTN
     I                                       77 136 $PERM
     I                                       77  80 $PMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$PWHSE
     I*----------------------------------------------------------------
     I*  *RCVLBL  -  Receiving options
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    OPLPGM  -  Receiving label program.
     I*    OPUPCT  -  Ideal slot usage percentage.
     I*    OPPDEF  -  PIR minimum number of slots priority.
     I*    OPPBLD  -  PIR same build code priority.
     I*    OPPACT  -  PIR same activity zone priority.
     I*    OPFDEF  -  Fixed minimum number or slots priority.
     I*    OPFASL  -  Fixed same aisle priority.
     I*    OPFSID  -  Fixed same side priority.
     I*    OPFLVL  -  Fixed highest level priority.
217 AI*    OPPASL  -  PIR same aisle priority.
217 AI*    OPPFRC  -  Force PIR same aisle priority.
221 AI*    OPPLCN  -  Use generic license plates.
409 AI*    OPPCHM  -  Check chimney (Y,N)
409 AI*    OPPMIX  -  Allow mixed expiration dates in fixed home slot(Y,N)
412 AI*    OPAPCK  -  Assign pick slots automatically for fixed items(Y,N)
414 AI*    OPFRCM  -  Force marking of all P.O. detail lines (Y,N)
     I*
     I* Data structure
     I*
     IOPDATA      DS
     I                                        1  10 OPLPGM
     I                                       11  130OPUPCT
     I                                       14  140OPPDEF
     I                                       15  150OPPBLD
     I                                       16  160OPPACT
     I                                       17  170OPFDEF
     I                                       18  180OPFASL
     I                                       19  190OPFSID
     I                                       20  200OPFLVL
     I                                       21  210OPPASL
     I                                       22  22 OPPFRC
221 AI                                       23  23 OPPLCN
409 AI                                       24  24 OPPCHM
409 AI                                       25  25 OPPMIX
412 AI                                       26  26 OPAPCK
414 AI                                       27  27 OPFRCM
     I                                      117 117 OPTEND
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                    P   1   10ERPRTY
     I                                    P   2   20ERPRT2
     I*
     I                                        1  30 ERFLD
     I                                       31  40 ERFROM
     I                                       41  50 ERTO
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PCMD   *ADD     - Create new record.
     C*              *EDIT    - Edit record.
     C*              *PRINT   - Print record.
     C*              *VIEW    - View record.
     C*      $PPRG   Program to send messages back to.
     C*      $PUKY   Contains unique key for everything but *ADD.
     C*
     C*    Returned Parameters
     C*      $PUKY   Contains new unique key for *ADD.
     C*              Unchanged for everything else.
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PERM   Error message or pointer to message in pgmq.
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PARMS
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     MOVE *BLANKS   $PERM
     C                     EXSR ZZINZ2
     C           ERROR     IFEQ *ON
     C                     MOVE 'EOJ'     NXTSCR
     C                     END
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     RETRN
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     303132
     CSR                   SETOF                     333435
     CSR                   SETOF                     363738
     CSR                   SETOF                     3940
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
     CSR                   EXSR ZMCMSG
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR                   MOVE *ON       *IN90
     CSR                   ENDIF
     C*
     C*  Get field defaults if this is an add.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR                   EXSR ZZDFT1
     CSR                   ELSE
     C*
     C*  Otherwise get existing record(s).
     C*
     CSR                   MOVE *ON       *IN91
     CSR                   EXSR ZZGET1
     CSR                   EXSR ZZFIL1
     CSR                   END
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR         $PCMD     IFNE '*VIEW   '
     CSR                   EXSR SCR01I
     CSR                   END
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR         *LOVAL    SETLLRECORD
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR         $PCMD     IFEQ '*ADD    '
     CSR         $PCMD     OREQ '*CHANGE '
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZUPD
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     CSR                   MOVE '*AFTER  'CMDCHK
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Everything went fine so get out of program.
     C*
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize special keys
     C*
     C                     Z-ADD0         ENTER   50
     C                     Z-ADD2         COMAND  50
     C                     Z-ADD01122     ROLLUP  50
     C                     Z-ADD01123     ROLLDN  50
     C                     Z-ADD01124     CLEAR   50
     C                     Z-ADD01125     HELP    50
     C*
     C*  Initialize message handling
     C*
     C                     EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7971  Error in writing a record.
     C*
     CSR         ZM71      BEGSR
     CSR                   MOVE 'PIR7971' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR7972  Error in updating a record.
     C*
     CSR         ZM72      BEGSR
     CSR                   MOVE 'PIR7972' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7973  Record does not exist.
     C*
     CSR         ZM73      BEGSR
     CSR                   MOVE 'PIR7973' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*     PIR7974  Record is locked.
     C*
     CSR         ZM74      BEGSR
     CSR                   MOVE 'PIR7974' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     C*R                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0112  Invalid range entered.
     C*
     CSR         ZM0112    BEGSR
     CSR                   MOVE 'PIR0112' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR13022  Error occured during call to program.
     C*
     CSR         ZM22      BEGSR
     CSR                   MOVE 'OP13022' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
416 DC**                   MOVEAW1PROG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR13023  Duplicate priority entered.
     C*
     CSR         ZM23      BEGSR
     CSR                   MOVE 'OP13023' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   OR13024  Side priority is greate than aisle priority.
     C*
     CSR         ZM24      BEGSR
     CSR                   MOVE 'OP13024' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
416 DC**
416 DC** Call program to make sure it is a valid receiving label pgm.
416 DC**
416 DC**         W1PROG    IFNE *BLANKS
416 DC**                   CALL W1PROG                 50
416 DC**                   PARM '*CLOSE  '$RCMD   8
416 DC**                   PARM 0         $RTRN#  70
416 DC**                   PARM 0         $RWHSE  30
416 DC**                   PARM           $RWHDP  5
416 DC**                   PARM           $RSTYP  1
416 DC**                   PARM           $RDISP 12
416 DC**                   PARM           $RPSLT 12
416 DC**                   PARM 0         $RQTY   50
416 DC**                   PARM           $RUM    2
416 DC**                   PARM 0         $RTIE   40
416 DC**                   PARM 0         $RHIGH  20
416 DC**                   PARM           $RITEM 15
416 DC**                   PARM           $RDESC 30
416 DC**                   PARM           $RPDSC 15
416 DC**                   PARM           $RUPC  15
416 DC**                   PARM 0         $RVEN  110
416 DC**                   PARM           $RVITM 15
416 DC**                   PARM           $RPO    9
416 DC**                   PARM 0         $RRCVD  60
416 DC**                   PARM 0         $REXPD  60
416 DC**                   PARM           $RDEV  10
416 DC**                   PARM           $RFORM 10
416 DC**
416 DC**         *IN50     IFEQ *ON
416 DC**                   MOVE *ON       ERROR
416 DC**                   MOVE *ON       *IN21
416 DC**                   MOVE *ON       *IN01
416 DC**                   EXSR ZM22
416 DC**                   END
416 DC**                   END
     C*
     C*  Verify slot usage percentage.
     C*
     CSR         W1UPCT    IFLT 1
     CSR         W1UPCT    ORGT 100
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'100'     ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
416 DC**
416 DC** Verify force marking of PO detail lines.
416 DC**
416 DC**         W1FRCM    IFNE 'Y'
416 DC**         W1FRCM    ANDNE'N'
416 DC**                   MOVE *ON       ERROR
416 DC**                   MOVE *ON       *IN34
416 DC**                   MOVE *ON       *IN14
416 DC**                   MOVE *BLANKS   ERRMSG
416 DC**                   MOVELDESC,14   ERRMSG
416 DC**                   EXSR ZM1005
416 DC**                   ENDIF
     C*
     C*  Verify PIR priorities.
     C*
     CSR         W1PDEF    IFLT 1
217 MCSR         W1PDEF    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,3    ERFLD
     CSR                   MOVEL'1'       ERFROM
217 MCSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1PBLD    IFLT 1
217 MCSR         W1PBLD    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,4    ERFLD
     CSR                   MOVEL'1'       ERFROM
217 MCSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1PACT    IFLT 1
217 MCSR         W1PACT    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,5    ERFLD
     CSR                   MOVEL'1'       ERFROM
217 MCSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
217 ACSR         W1PASL    IFLT 1
217 ACSR         W1PASL    ORGT 4
217 ACSR                   MOVE *ON       ERROR
217 ACSR                   MOVE *ON       *IN30
217 ACSR                   MOVE *ON       *IN10
217 ACSR                   MOVE *BLANKS   ERRMSG
217 ACSR                   MOVELDESC,10   ERFLD
217 ACSR                   MOVEL'1'       ERFROM
217 ACSR                   MOVEL'4'       ERTO
217 ACSR                   EXSR ZM0112
217 ACSR                   ENDIF
     C*
217 ACSR         W1PFRC    IFNE 'Y'
217 ACSR         W1PFRC    ANDNE'N'
217 ACSR                   MOVE *ON       ERROR
217 ACSR                   MOVE *ON       *IN31
217 ACSR                   MOVE *ON       *IN11
217 ACSR                   MOVE *BLANKS   ERRMSG
217 ACSR                   MOVELDESC,11   ERRMSG
217 ACSR                   EXSR ZM1005
217 ACSR                   ENDIF
     C*
416 DC**         W1PLCN    IFNE 'Y'
416 DC**         W1PLCN    ANDNE'N'
416 DC**                   MOVE *ON       ERROR
416 DC**                   MOVE *ON       *IN32
416 DC**                   MOVE *ON       *IN12
416 DC**                   MOVE *BLANKS   ERRMSG
416 DC**                   MOVELDESC,12   ERRMSG
416 DC**                   EXSR ZM1005
416 DC**                   ENDIF
     C*
     C*  Verify Fixed priorities.
     C*
     CSR         W1FSID    IFLT 1
     CSR         W1FSID    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN06
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,7    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1FASL    IFLT 1
     CSR         W1FASL    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,6    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1FDEF    IFLT 1
     CSR         W1FDEF    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN28
     CSR                   MOVE *ON       *IN08
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,8    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1FLVL    IFLT 1
     CSR         W1FLVL    ORGT 4
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,9    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'4'       ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         ERROR     CABEQ*ON       ENDCK1
     C*
     C*  Verify that each PIR priority is unique.
     C*
     CSR         W1PDEF    IFEQ W1PBLD
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN04
     CSR                   Z-ADDW1PDEF    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1PDEF    IFEQ W1PACT
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   Z-ADDW1PDEF    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
217 ACSR         W1PDEF    IFEQ W1PASL
217 ACSR                   MOVE *ON       ERROR
217 ACSR                   MOVE *ON       *IN23
217 ACSR                   MOVE *ON       *IN30
217 ACSR                   MOVE *ON       *IN10
217 ACSR                   Z-ADDW1PDEF    ERPRTY
217 ACSR                   EXSR ZM23
217 ACSR                   ENDIF
     C*
     CSR         W1PBLD    IFEQ W1PACT
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN05
     CSR                   Z-ADDW1PBLD    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
217 ACSR         W1PBLD    IFEQ W1PASL
217 ACSR                   MOVE *ON       ERROR
217 ACSR                   MOVE *ON       *IN24
217 ACSR                   MOVE *ON       *IN30
217 ACSR                   MOVE *ON       *IN10
217 ACSR                   Z-ADDW1PBLD    ERPRTY
217 ACSR                   EXSR ZM23
217 ACSR                   ENDIF
     C*
217 ACSR         W1PACT    IFEQ W1PASL
217 ACSR                   MOVE *ON       ERROR
217 ACSR                   MOVE *ON       *IN25
217 ACSR                   MOVE *ON       *IN30
217 ACSR                   MOVE *ON       *IN10
217 ACSR                   Z-ADDW1PACT    ERPRTY
217 ACSR                   EXSR ZM23
217 ACSR                   ENDIF
     C*
     C*  Verify that each fixed priority is unique.
     C*
     CSR         W1FASL    IFEQ W1FSID
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   Z-ADDW1FASL    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1FASL    IFEQ W1FDEF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN28
     CSR                   MOVE *ON       *IN08
     CSR                   Z-ADDW1FASL    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1FASL    IFEQ W1FLVL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   Z-ADDW1FASL    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1FSID    IFEQ W1FDEF
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN28
     CSR                   MOVE *ON       *IN08
     CSR                   Z-ADDW1FSID    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1FSID    IFEQ W1FLVL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   Z-ADDW1FSID    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     CSR         W1FDEF    IFEQ W1FLVL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN28
     CSR                   MOVE *ON       *IN29
     CSR                   MOVE *ON       *IN09
     CSR                   Z-ADDW1FDEF    ERPRTY
     CSR                   EXSR ZM23
     CSR                   ENDIF
     C*
     C*  Verify that the side priority is greater that the aisle.
     C*
     CSR         W1FSID    IFLT W1FASL
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN26
     CSR                   MOVE *ON       *IN27
     CSR                   MOVE *ON       *IN07
     CSR                   Z-ADDW1FSID    ERPRTY
     CSR                   Z-ADDW1FASL    ERPRT2
     CSR                   EXSR ZM24
     CSR                   ENDIF
412 AC*
412 AC*  Verify allow pick slots to be assigned automatically.
412 AC*
412 ACSR         W1APCK    IFNE 'Y'
412 ACSR         W1APCK    ANDNE'N'
412 ACSR                   MOVE *ON       ERROR
412 ACSR                   MOVE *ON       *IN33
412 ACSR                   MOVE *ON       *IN13
412 ACSR                   MOVE *BLANKS   ERRMSG
412 ACSR                   MOVELDESC,13   ERRMSG
412 ACSR                   EXSR ZM1005
412 ACSR                   ENDIF
     C*
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     CSR                   END
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   END
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZDFT1   Get default values for add.
     C*
     CSR         ZZDFT1    BEGSR
416 DC**                   MOVEL'RLBL01'  OPLPGM
     CSR                   Z-ADD60        OPUPCT
     CSR                   Z-ADD1         OPPDEF
     CSR                   Z-ADD2         OPPBLD
     CSR                   Z-ADD3         OPPACT
217 ACSR                   Z-ADD4         OPPASL
217 ACSR                   MOVE 'N'       OPPFRC
     CSR                   Z-ADD1         OPFASL
     CSR                   Z-ADD2         OPFSID
     CSR                   Z-ADD3         OPFDEF
     CSR                   Z-ADD4         OPFLVL
413 ACSR                   MOVE 'N'       OPAPCK
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
416 DC**                   MOVE OPLPGM    W1PROG
     CSR                   Z-ADDOPUPCT    W1UPCT
     CSR                   Z-ADDOPPDEF    W1PDEF
     CSR                   Z-ADDOPPBLD    W1PBLD
     CSR                   Z-ADDOPPACT    W1PACT
217 ACSR                   Z-ADDOPPASL    W1PASL
217 ACSR                   MOVE OPPFRC    W1PFRC
     CSR                   Z-ADDOPFASL    W1FASL
     CSR                   Z-ADDOPFSID    W1FSID
     CSR                   Z-ADDOPFDEF    W1FDEF
     CSR                   Z-ADDOPFLVL    W1FLVL
416 DC**                   MOVE OPPLCN    W1PLCN
412 ACSR                   MOVE OPAPCK    W1APCK
416 DC**                   MOVE OPFRCM    W1FRCM
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     CSR                   Z-ADD$PWHSE    OPWHSE
     CSR                   MOVE '*RCVLBL 'OPCODE
     C*
     CSR                   MOVE *OFF      TMPFLG  1
     C*
     CSR         BEGGT1    TAG
     C*
     C*   Get record from main file.
     C*
     CSR         $PCMD     IFEQ '*VIEW   '
     CSR         FILEKY    CHAINRECORD              N7978
     CSR                   ELSE
     CSR         FILEKY    CHAINRECORD               7978
     CSR                   ENDIF
     C*
     C*  Record locked.
     C*
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM74
     CSR                   GOTO ENDGT1
     CSR                   END
     C*
     C*  Record not found - Create it.
     C*
     CSR         *IN79     IFEQ *ON
     CSR         TMPFLG    IFEQ *OFF
     CSR                   MOVE *ON       TMPFLG
     CSR                   EXSR ZZDFT1
     CSR                   WRITERECORD
     CSR                   GOTO BEGGT1
     CSR                   ELSE
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   EXSR ZM73
     CSR                   GOTO ENDGT1
     CSR                   END
     CSR                   END
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     C*  Define key for main file.
     C*
     CSR         FILEKY    KLIST
     CSR                   KFLD           OPWHSE
     CSR                   KFLD           OPCODE
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Get and verify warehouse description.
     C*
     CSR                   Z-ADD$PWHSE    WHCODE
     CSR         WHCODE    IFEQ 0
     CSR                   MOVE *BLANKS   WHDESC
     CSR         'All ware'CAT  'houses':0WHDESC
     CSR                   ELSE
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   MOVE $PPRG     $LPRG
     CSR                   Z-ADDWHCODE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR         $LRTN     OREQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $LRTN     $PRTN
     CSR                   MOVE $LERM     $PERM
     CSR                   GOTO ENDIN2
     CSR                   ELSE
     CSR                   MOVEL$LERM     WHDESC
     CSR                   END
     CSR                   END
     C*
     C*   Select first screen to display.
     C*
     CSR                   MOVE #PROG     $LPRG
     CSR                   EXSR SCR01I
     CSR         ENDIN2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZUPD    Update record.
     C*
     CSR         ZZUPD     BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Move screen fields to record fields
     C*
416 DC**                   MOVE W1PROG    OPLPGM
     CSR                   Z-ADDW1UPCT    OPUPCT
     CSR                   Z-ADDW1PDEF    OPPDEF
     CSR                   Z-ADDW1PBLD    OPPBLD
     CSR                   Z-ADDW1PACT    OPPACT
217 ACSR                   Z-ADDW1PASL    OPPASL
217 ACSR                   MOVE W1PFRC    OPPFRC
     CSR                   Z-ADDW1FASL    OPFASL
     CSR                   Z-ADDW1FSID    OPFSID
     CSR                   Z-ADDW1FDEF    OPFDEF
     CSR                   Z-ADDW1FLVL    OPFLVL
416 DC**                   MOVE W1PLCN    OPPLCN
412 ACSR                   MOVE W1APCK    OPAPCK
416 DC**                   MOVE W1FRCM    OPFRCM
     C*
     C*   Update record (it was read and locked in ZZGET1)
     C*
     CSR                   UPDATRECORD                 79
     CSR         *IN79     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM72
     CSR                   GOTO ENDUPD
     CSR                   END
     C*
     CSR         ENDUPD    ENDSR
     C*
     O*----------------------------------------------------------------*********
     O*
     O*  COMPILE TIME TABLES
     O*
**
Receiving Label Program
Slot Usage Percentage
PIR Minimum Slot Priority
PIR Build Code Priority
PIR Activity Zone Priority
Fixed Aisle Priority
Fixed Side Priority
Fixed Minimum Slot Priority
Fixed Level Priority
PIR Aisle Priority
Force PIR Aisle Priority
Use Generic License
Auto assign pick slot
Force marking PO detail lines
