     F*----------------------------------------------------------------
     F*   Copyright (C) 1997 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  UT842     Recalculate item cube - Recalc
     F*  28 November 2000
     F*  Roxanne Harrison
     F*
     F*  Revisions
     F*    11/28/00  RRH  4.15
     F*      - Created
     F*    05/13/04  RH   4.17a
     F*      - Add option to ignore items w/o dimensions, cube will
     F*        not be recalculated.
     F*
510 AF*    08/15/07  MLB  5.10
     F*      - Fix: Add code to 4.17a mod so that only items that are
     F*        missing any part of the item dimensions will be skipped.
     F*
411 AF*----------------------------------------------------------------
     F*  Quantity Types Notes
     F*
     F*   Standard & Breakdown
     F*     - Slots only contain items of these types.
     F*     - The total quantities of any corresponding Contract items
     F*       must be total. The resulting Stock quantities must be
     F*       added to the allocated quantity in order to reserve the
     F*       the stock. The resulting allocated quantities must be
     F*       subtracted from the allocated quantity so we can
     F*       prevent double allocation (once from the Contract stock
     F*       quantity and second from the slot allocated quantity).
     F*
     F*   Alias, Contract and Same Slot Breakdown (SSB)
     F*     - These items are skipped.
     F*     - Alias & SSB item quantities are kept by the Base item.
     F*     - Contract item quantities are taken literally and can not
     F*       be calculated from slots.
     F*
     F*----------------------------------------------------------------
     F*
     F*  Notes
     F*
     F*    - The screen for this program must be compiled with
     F*      defer write equal to *NO.
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   Field input error (reverse display)
     F*  90        View mode (protect all fields)
     F*  91        Change mode (protect key fields)
     F*  97        Alawys on (used for SFLEND keyword)
     F*  98        Error on screen (sound alarm)
     F*  99        Universal record indicator (very temporary usage)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FUT842FM CF  E                    WORKSTN                        UC
     F                                              KINFDS INFDS
     F                                        MSGK  KSFILE MSGREC
     FPIRITEM UF  E           K        DISK
     FOPTIONS IF  E           K        DISK
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  15 ERITEM
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  *ITEMMNT  -  Item maintenance options.
     I*----------------------------------------------------------------
     I*
     I* Fields
     I*
     I*    OPSTYP  -  Default section type
     I*    OPWHDP  -  Default warehouse department
     I*    OPUM1   -  Default normal unit of measure
     I*    OPDUM   -  Unit of measure for dimensions
     I*    OPCUM   -  Unit of measure for cube
     I*    OPCDIV  -  Divisor for cube
     I*    OPCAUT  -  Automaticaly calculate cube when zero (Y/N)
     I*    OPCWRN  -  Display cube warning (Y/N)
     I*    OPCRNG  -  Display cube warning range percentage
     I*    OPWUM   -  Unit of measure for weight
     I*
     I* Data structure
     I*
     IOPDATA      DS
     I                                        1   1 OPSTYP
     I                                        2   6 OPWHDP
     I                                        7   8 OPUM1
     I                                        9  23 OPDUM
     I                                       24  43 OPCUM
     I                                       44  522OPCDIV
     I                                       53  53 OPCAUT
     I                                       54  54 OPCWRN
     I                                       55  573OPCRNG
     I                                       58  72 OPWUM
     I                                      117 117 OPTEND
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      $PWHS   Warehouse
     C*      $PITEM  Item number or *ALL.
417a C*      $IITM   Y - Ignore items w/o dimensions
417a C*              N - Recalculate cube for items w/o dimensions
     C*      $PJTYP  0 - Batch
     C*              1 - Interactive
     C*      $PPRG   Program to send messages back to.
     C*
     C*    Returned Parameters
     C*      $PRTN   blank    - No problem encountered.
     C*              *ERROR   - Error occured. Message in $PERM
     C*              *PGMQ    - Error occured. Message sent to pgmq.
     C*      $PMSG   Error message id.
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PWHS  155
     C                     PARM           $PITEM 15
417a C                     PARM           $PIITM  1
     C                     PARM           $PJTYP  1
     C                     PARM           $PPRG  10
     C                     PARM           $PRTN   8
     C                     PARM           $PMSG   4
     C*
     C                     Z-ADD$PWHS     $PWHSE  30
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C*  Get item maint. options.
     C                     MOVE '*ITEMMNT'OPCODE
     C           OPTNKY    CHAINOPTIONS              79
     C           *IN79     IFEQ *ON
     C                     CLEAROPDATA
     C                     END
     C*
     C* Recalculate.
     C*
     C           $PITEM    IFEQ '*ALL'
     C                     EXSR ALLITM
     C                     ELSE
     C                     EXSR ONEITM
     C                     ENDIF
     C*
     C                     MOVE *ON       *INLR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize variables
     C*
     CSR                   MOVE *ON       FOREVR  1
     CSR                   MOVE *OFF      ERROR   1
     C*
     CSR         *LIKE     DEFN ITCUBE    ACTCUB
     C*   Define keys
     C*
     C*  Define key for options file.
     C*
     CSR         OPTNKY    KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           OPCODE
     C*
     CSR         KEYWH     KLIST
     CSR                   KFLD           $PWHSE
     C*
     CSR         KEYIT     KLIST
     CSR                   KFLD           $PWHSE
     CSR                   KFLD           ITITEM
     C*
     C*   Open display file if this program is being run interactively.
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   OPEN UT842FM
     CSR                   ENDIF
     C*
     C*   Initialize message handling
     C*
     CSR         $PJTYP    IFEQ *ON
     CSR                   EXSR ZMIMSG
     CSR                   ENDIF
     C*
     C*   Fool the compiler.
     C*
     CSR                   MOVE *BLANKS   DUMMY   1
     CSR         DUMMY     IFNE *BLANKS
     CSR                   READ UT842FM                  50
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ALLITM  Recalculate all items.
     C*
     CSR         ALLITM    BEGSR
     C*
     CSR         KEYWH     SETLLPIRITEM
     CSR         FOREVR    DOUNEFOREVR
     CSR         KEYWH     READEPIRITEM                  79
     CSR         *IN79     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     CSR         $PJTYP    IFEQ *ON
     CSR                   MOVE ITITEM    W1ITEM
     CSR                   WRITESCREEN1
     CSR                   ENDIF
     C*
     C*      Ignore Alias, Contract and Same Slot Breakdown items.
     C*
     CSR         ITTYPE    IFEQ 'A'
     CSR         ITTYPE    OREQ 'C'
     CSR         ITTYPE    OREQ 'S'
     CSR                   ITER
     CSR                   ENDIF
417a C*
417a C*      Ignore items without dimensions.
417a C*
417a CSR         $PIITM    IFEQ 'Y'
510  C*
510  C           ITULEN    IFEQ 0
510  C           ITUWDT    OREQ 0
510  C           ITUHGT    OREQ 0
417a CSR                   ITER
510  C                     ENDIF
510  C*
417a CSR                   ENDIF
     C*
     C*      Recalculate cube.
     C*
     CSR                   EXSR CALCUB
     CSR         ERROR     IFEQ *ON
     CSR                   LEAVE
     CSR                   ENDIF
     C*
     CSR                   ENDDO
     C*
     CSR         ERROR     IFNE *ON
     CSR                   MOVEL'*ALL'    ERITEM    P
     CSR                   EXSR ZM01
     CSR                   MOVE '*OK     '$PRTN
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ONEITM  Recalculate quantity for one item.
     C*
     CSR         ONEITM    BEGSR
     CSR         $PJTYP    IFEQ *ON
     CSR                   MOVE $PITEM    W1ITEM
     CSR                   WRITESCREEN1
     CSR                   ENDIF
     C*
     C*     Verify item number.
     C*
     CSR                   MOVE $PITEM    ITITEM
     CSR         KEYIT     CHAINPIRITEM              78
     CSR         *IN78     IFEQ *ON
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE $PITEM    ERITEM
     CSR                   EXSR ZM22
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   GOTO ENDONE
     CSR                   ENDIF
     C*
     C*      Ignore Alias, Contract and Same Slot Breakdown items.
     C*
     CSR         ITTYPE    IFEQ 'A'
     CSR         ITTYPE    OREQ 'C'
     CSR         ITTYPE    OREQ 'S'
     CSR                   GOTO ENDONE
     CSR                   ENDIF
417a C*
417a C*      Ignore items without dimensions.
417a C*
417a CSR         $PIITM    IFEQ 'Y'
417a CSR                   GOTO ENDONE
417a CSR                   ENDIF
     C*
     C*      Recalculate cube.
     C*
     CSR                   EXSR CALCUB
     CSR         ERROR     IFNE *ON
     CSR                   MOVE ITITEM    ERITEM
     CSR                   MOVE '*OK     '$PRTN
     CSR                   EXSR ZM01
     CSR                   ENDIF
     C*
     CSR         ENDONE    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  CALCUB  Calculate item cube.
     C*
     CSR         CALCUB    BEGSR
     C*
     C*      Recalculate cube.
     C*
     CSR         OPCDIV    IFEQ 0
     CSR                   Z-ADD0         ACTCUB
     CSR                   ELSE
     CSR         ITULEN    MULT ITUWDT    TMPCUB 156
     CSR                   MULT ITUHGT    TMPCUB
     CSR         TMPCUB    DIV  OPCDIV    ACTCUB    H
     CSR                   Z-ADDACTCUB    ITCUBE
     CSR                   ENDIF
     C*
     C*  Update item record.
     C*
     CSR                   UPDATITREC                  77
     CSR         *IN77     IFEQ *ON
     CSR                   MOVE ITITEM    ERITEM
     CSR                   MOVE '*PGMQ   '$PRTN
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM22
     CSR                   ENDIF
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCMSG    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK    40
     CSR                   WRITEMSGCLR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCPMQ  Clear program message queue.
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMCSBF  Clear message subfile.
     C*
     CSR         ZMCSBF    BEGSR
     CSR                   MOVE *OFF      *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR         MSGK      IFGT 0
     CSR                   WRITEMSGCTL
     CSR                   Z-ADD*ZERO     MSGK
     CSR                   END
     CSR                   ENDSR
     C*
     C*    ZMIMSG  Initialization necessary for message subfile
     C*
     CSR         ZMIMSG    BEGSR
     CSR                   MOVE #PROG     #PGMQ  10
     CSR                   EXSR ZMCMSG
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR         #MSGID    IFNE '*CLEAR '
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   END
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     CSR                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*
     C*    ZMQMSG  Add message record to subfile from program queue
     C*
     CSR         ZMQMSG    BEGSR
     CSR                   ADD  1         MSGK
     CSR                   WRITEMSGREC
     CSR                   ENDSR
     C*
     C*    ZMSMSG  Send program message to a different program msgq
     C*
     CSR         ZMSMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM $PPRG     #PGMQ2 10
     CSR                   PARM           #MSGK   4
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   UT81201  Item recalculated successfully.
     C*
     CSR         ZM01      BEGSR
     CSR                   MOVE 'UT81201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   UT81222  Item not recalculated - Item does not exist.
     C*
     CSR         ZM22      BEGSR
     CSR                   MOVE 'UT81222' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMSMSG
     CSR                   MOVE #MSGK     $PMSG
     CSR                   ENDSR
