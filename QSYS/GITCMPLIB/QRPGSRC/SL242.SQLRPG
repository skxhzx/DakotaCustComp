     F*----------------------------------------------------------------
     F*   Copyright (C) 1996 BFC Software, Inc. - All Rights Reserved
     F*   BFC Software, Inc.
     F*   799 Roosevelt Rd.  Bldg 6, Suite 108
     F*   Glen Ellyn, IL  60137
     F*   (708) 790-8383
     F*----------------------------------------------------------------
     F*
     F*  SL242     Change designation code for a group of slots
     F*  Hemant Kapadia
     F*
     F*  Revisions
     F*
     F*
     F*----------------------------------------------------------------
     F*  Notes
     F*       The format for this program needs to be compiled with
     F*       DFRWRT=*NO so that status messages can be displayed.
     F*
     F*
     F*----------------------------------------------------------------
     F*  Indicator usage
     F*
     F*  21 - 30   FIELD INPUT ERROR (REVERSE DISPLAY)
     F*  90        VIEW MODE (PROTECT INPUT FIELDS)
     F*  91        CHANGE MODE (PROTECT LOG NUMBER)
     F*  97        ALWAYS ON (USED FOR SFLEND KEYWORD)
     F*  98        ERROR ON SCREEN (SOUND BUZZER)
     F*  99        UNIVERSAL RECORD INDICATOR (VERY TEMPORARY USAGE)
     F*
     F*----------------------------------------------------------------
     F*  File Specs
     F*
     FSL242FM CF  E                    WORKSTN
     F                                              KINFDS INFDS
     E*----------------------------------------------------------------
     E*  Table and array definitions
     E*
     E                    A10        10  1
     E                    $MD       128  1
     E                    DESC    1   3 60
     I*----------------------------------------------------------------
     I*  Program parameters
     I*
     I$LPARM      DS
     I                                        1   8 $LCMD
     I                                        9  18 $LPRG
     I                                       19  68 $LUKY
     I                                       69  76 $LRTN
     I                                       77 136 $LERM
     I                                       77  80 $LMSG
     I*
     I*   Redefine key
     I*
     I                                       19  210$LWHSE
     I                                       22  26 $LWHDP
     I*----------------------------------------------------------------
     I*  Called programs
     I*
     I              'CVTDTE'              C         @CVTDT
     I*----------------------------------------------------------------
     I*  Called program parameters
     I*
     I$CVTDT      DS
     I                                        1   8 $CVCMD
     I                                        9  18 $CVPRG
     I                                       19  24 $CVD6I
     I                                       25  32 $CVD8I
     I                                       33  380$CVD6O
     I                                       39  460$CVD8O
     I                                       47  64 $CVSTO
     I                                       65  72 $CVRTN
     I                                       73 132 $CVERM
     I                                       73  76 $CVMSG
     I*----------------------------------------------------------------
     I*  Data structure for error message parameters
     I*
     I$MDT        DS
     I                                        1  50 ERRMSG
     I*
     I                                        1  30 ERFLD
     I                                       31  40 ERFROM
     I                                       41  50 ERTO
     I*
     I                                    P   1   30ERCNT
214 AI                                    P   4   60CGCNT
     I*
     I            DS
     I                                    P   1   20$EC
     I*----------------------------------------------------------------
     I*  Message control
     I*
     I              'PIRMSGF   '          C         #MSGF
     I*
     I            DS
     I                                        1 128 #MSGDT
     I                                        1 128 $MD
     I*----------------------------------------------------------------
     I*  Program info data structure
     I*
     I           SDS
     I                                     *PROGRAM #PROG
     I                                      244 253 #JOB
     I                                      254 263 #USER
     I                                      264 269 #JOBN
     I                                      276 2810#JOBDT
     I                                      282 2870#JOBTM
     I*----------------------------------------------------------------
     I*  Workstation exception data structure
     I*
     IINFDS       DS
     I                                     *STATUS  STATUS
     I                                      370 370 ROWIN
     I                                      371 371 COLIN
     I*----------------------------------------------------------------
     I*  Workstation exception redefinition data structure
     I*
     I            DS
     I                                    B   1   20ROW#
     I                                        2   2 ROW
     I                                    B   3   40COL#
     I                                        4   4 COL
     I*----------------------------------------------------------------
     C*  Parameters
     C*
     C*    Input Parameters
     C*      None
     C*
     C*    Returned Parameters
     C*      $PRTN   *EXIT    - CMD3 was entered
     C*              *CANCEL  - CMD12 was entered
     C*
     C*----------------------------------------------------------------
     C*  Let the show begin .....
     C*
     C           *ENTRY    PLIST
     C                     PARM           $PRTN   8
     C*----------------------------------------------------------------
     C*  Main line
     C*
     C                     MOVE *ON       *IN97
     C                     MOVE *OFF      *IN90
     C                     MOVE *OFF      *IN91
     C                     MOVE *OFF      ERROR
     C                     MOVE *BLANKS   $PRTN
     C                     EXSR ZMCPMQ
     C                     EXSR ZZINZ2
     C*
     C           NXTSCR    DOWNE'EOJ'
     C                     EXSR DSPSCR
     C           NXTSCR    CASEQ'01 '     SC1
     C           NXTSCR    CASEQ'02 '     SC2
     C           NXTSCR    CASEQ'03 '     SC3
     C                     END
     C                     END
     C*
     C*   Do some clean up before leaving.
     C*
     C                     EXSR ZSCLR
     C                     MOVE *ON       *INLR
     C*----------------------------------------------------------------
     C*  DSPSCR - Display screen
     C*
     CSR         DSPSCR    BEGSR
     C*
     C*   Set ON alarm indicator if error occured
     C*
     CSR         ERROR     IFEQ *ON
     CSR                   MOVE *ON       *IN98
     CSR                   END
     C*
     C*   Overlay screen with error messages
     C*
     C                     EXSR ZMDMSG
     C*
     C*  Overlay screen with screen to be processed.
     C*
     CSR         NXTSCR    IFEQ '01 '
     CSR                   EXFMTSCREEN1                50
     CSR                   END
     C*
     CSR         NXTSCR    IFEQ '02 '
     CSR                   EXFMTSCREEN2                50
     CSR                   END
     C*
     CSR         NXTSCR    IFEQ '03 '
     CSR                   EXFMTSCREEN3                50
     CSR                   END
     C*
     C*   Initialize error indicators and fields
     C*
     CSR                   SETOF                     010203
     CSR                   SETOF                     040506
     CSR                   SETOF                     070809
     CSR                   SETOF                     101112
     CSR                   SETOF                     131415
     CSR                   SETOF                     161718
     CSR                   SETOF                     1920
     CSR                   SETOF                     212223
     CSR                   SETOF                     242526
     CSR                   SETOF                     272829
     CSR                   SETOF                     30
     CSR                   SETOF                     98
     CSR                   MOVE *OFF      WARN    1
     CSR                   MOVE *OFF      ERROR   1
     CSR                   MOVE *OFF      CMDTKN  1
     CSR                   Z-ADD0         E       20
     C*
     C*   Initialize error subfile
     C*
    MCSR                   EXSR ZMCPMQ
     C*
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*     Screen initialization and wrap-up routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  Screen 01 initialization
     C*
     CSR         SCR01I    BEGSR
     CSR                   MOVE '01 '     NXTSCR  3
     C*
     C*  Get existing record.
     C*
     CSR                   EXSR ZZFIL1
     CSR         END01I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 02 initialization
     C*
     CSR         SCR02I    BEGSR
     CSR                   MOVE '02 '     NXTSCR  3
     C*
     C*  Get existing record.
     C*
     CSR                   EXSR ZZFIL2
     CSR         END02I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  Screen 03 initialization
     C*
     CSR         SCR03I    BEGSR
     CSR                   MOVE '03 '     NXTSCR  3
     C*
     CSR                   EXSR ZZFIL3
     CSR         END03I    ENDSR
     C*----------------------------------------------------------------
     C*
     C*              Screen Processing Routines
     C*
     C*----------------------------------------------------------------
     C*
     C*  SC1  -  Screen 1
     C*
     CSR         SC1       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     CSR         *INKC     IFEQ *ON
     CSR                   MOVE '*EXIT   '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F5 - Refresh
     C*
     CSR         *INKE     IFEQ *ON
     CSR                   EXSR SCR01I
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   MOVE 'EOJ'     NXTSCR
     CSR                   GOTO ENDSC1
     CSR                   END
     C*
     C*  Test for other command keys
     C*
     CSR                   EXSR ZZCMD1
     CSR         CMDTKN    CABEQ*ON       ENDSC1
     C*
     C*  Some other key pressed.
     C*
     C*     Check input and write/update record.
     C*
     CSR                   EXSR ZZCHK1
     CSR         ERROR     CABEQ*ON       ENDSC1
     CSR                   EXSR ZZNXT1
     CSR         ENDSC1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC2  -  Screen 2
     C*
     CSR         SC2       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     C*R         *INKC     IFEQ *ON
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   MOVE '*EXIT   '$PRTN
     C*R                   GOTO ENDSC2
     C*R                   END
     C*
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC2
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD2
     CSR         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Some other key pressed.
     C*
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     C*R                   MOVE '*AFTER  'CMDCHK
     C*R                   EXSR ZZCMD2
     C*R         CMDTKN    CABEQ*ON       ENDSC2
     C*
     C*  Everything went fine so get out of program.
     C*
     C*R                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  SC3  -  Screen 3
     C*
     CSR         SC3       BEGSR
     C*
     C*  Test for F3 - Exit
     C*
     C*R         *INKC     IFEQ *ON
     C*R                   MOVE 'EOJ'     NXTSCR
     C*R                   MOVE '*EXIT   '$PRTN
     C*R                   GOTO ENDSC3
     C*R                   END
     C*
     C*
     C*  Test for F12 - Previous
     C*
     CSR         *INKL     IFEQ *ON
     CSR                   MOVE '01 '     NXTSCR
     CSR                   MOVE '*CANCEL '$PRTN
     CSR                   GOTO ENDSC3
     CSR                   ENDIF
     C*
     C*  Test for other command keys BEFORE verification and update.
     C*
     CSR                   MOVE '*BEFORE 'CMDCHK  8
     CSR                   EXSR ZZCMD3
     CSR         CMDTKN    CABEQ*ON       ENDSC3
     C*
     C*  Some other key pressed.
     C*
     C*
     C*  Test for other command keys AFTER verification and update.
     C*
     C*R                   MOVE '*AFTER  'CMDCHK
     C*R                   EXSR ZZCMD3
     C*R         CMDTKN    CABEQ*ON       ENDSC3
     C*
     C*  Everything went fine so get out of program.
     C*
     C*R                   MOVE 'EOJ'     NXTSCR
     CSR         ENDSC3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*          SUBROUTINES IN ALPHABETICAL ORDER
     C*
     C*----------------------------------------------------------------
     C*
     C*  *INZSR  Initialization subrotine
     C*
     CSR         *INZSR    BEGSR
     C*
     C*  Initialize message handling
     C*
    DC*                    EXSR ZMIMSG
     C*
     C*   Call user added initialization routine.
     C*
     C                     EXSR ZZINZ
     C                     ENDSR
     C*---------------------------------------------------------------
     C*
     C*  SUBROUTINE ZMxxxx  Control message display subfile
     C*
     C*    ZMCMSG  Clear message record subfile
     C*
     CSR         ZMCPMQ    BEGSR
     CSR                   MOVE '*CLEAR ' #MSGID  7
     CSR                   MOVE '*NULL  ' #MSGTP  7
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*
     C*    ZMDMSG  Display message record subfile
     C*
     CSR         ZMDMSG    BEGSR
     CSR                   MOVE *ON       *IN97
     CSR                   WRITEMSGCTL
     CSR                   ENDSR
     C*
     C*    ZMPMSG  Add message record to subfile
     C*
     CSR         ZMPMSG    BEGSR
     CSR         $MSGF     IFEQ *BLANKS
     CSR                   MOVE #MSGF     $MSGF  10
     CSR                   END
     CSR                   CALL 'PUTMSG'
     CSR                   PARM           $MSGF
     CSR                   PARM           #MSGID
     CSR                   PARM           #MSGTP
     CSR                   PARM           #MSGDT
     CSR                   PARM           #PGMQ
     CSR                   PARM           #MSGK
     CSR                   MOVE *BLANKS   #MSGDT
     CSR                   MOVE *BLANKS   $MSGF
     CSR                   ENDSR
     C*
     C*    ZSCLR   Clear screen
     C*
     CSR         ZSCLR     BEGSR
     C*R                   WRITECLRSCR
     CSR                   MOVE *ON       SCLEAR  1
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*    ZMnnnn  Build and send message nnnn to this program
     C*----------------------------------------------------------------
     C*   PIR9905  Cursor not in correct position for lookup.
     C*
     CSR         ZM9905    BEGSR
     CSR                   MOVE 'PIR9905' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVE *BLANKS   $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*      0105
     C*
     CSR         ZM0105    BEGSR
     CSR                   MOVE 'PIR0105' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD,1
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR0112  Invalid range entered.
     C*
     CSR         ZM0112    BEGSR
     CSR                   MOVE 'PIR0112' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1001  Invalid value entered.
     C*
     CSR         ZM1001    BEGSR
     CSR                   MOVE 'PIR1001' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   PIR1005  Value must be 'Y' or 'N'
     C*
     CSR         ZM1005    BEGSR
     CSR                   MOVE 'PIR1005' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   SL24201  Slot designation code changed.
     C*
     CSR         ZM2401    BEGSR
     CSR                   MOVE 'SL24201' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*   SL24202  Changing records (Info msg)
     C*
     CSR         ZM2402    BEGSR
     CSR                   MOVE 'SL24202' #MSGID
     CSR                   MOVE '*DIAG  ' #MSGTP
     CSR                   MOVEAERRMSG    $MD
     CSR                   EXSR ZMPMSG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK1   Screen 1 error checking.
     C*
     CSR         ZZCHK1    BEGSR
     CSR                   MOVE *OFF      ERROR
     C*
     C*  Verify warehouse code.
     C*
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN21
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE $LMSG     #MSGK
    DC**                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Verify warehouse department code.
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR                   MOVE '*VERIFY '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*ERROR  '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVEL$LERM     ERRMSG
     CSR                   EXSR ZM0105
     CSR                   ELSE
     CSR         $LRTN     IFEQ '*PGMQ   '
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN22
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE $LMSG     #MSGK
    DC**                   EXSR ZMQMSG
     CSR                   ENDIF
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*    Make sure aisle was entered.
     C*
     CSR         W1ASLE    IFEQ *BLANKS
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN23
     CSR                   MOVE *ON       *IN03
     CSR                   EXSR ZM1001
     CSR                   ENDIF
     C*
     C*  Verify slot location is within range.
     C*
     CSR         W1FLOC    IFLT 1
     CSR         W1FLOC    ORGT 999
     CSR         W1TLOC    ORLE 0
     CSR         W1TLOC    ORLT W1FLOC
     CSR                   MOVE *ON       ERROR
     CSR                   MOVE *ON       *IN24
     CSR                   MOVE *ON       *IN25
     CSR                   MOVE *ON       *IN04
     CSR                   MOVE *BLANKS   ERRMSG
     CSR                   MOVELDESC,2    ERFLD
     CSR                   MOVEL'1'       ERFROM
     CSR                   MOVEL'999'     ERTO
     CSR                   EXSR ZM0112
     CSR                   ENDIF
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR                   MOVELW1WHDP    WHDP    5
     CSR                   ENDIF
     C*
     CSR         W1ASLE    IFNE '*ALL '
     CSR                   MOVE W1ASLE    $CSTR
     CSR                   CALL 'ADJUST'
     CSR                   PARM '*RIGHT  '$CCMD   8
     CSR                   PARM           $CSTR  30
     CSR                   MOVE $CSTR     ASLE    3
     CSR                   ENDIF
     C*
     CSR                   Z-ADDW1FLOC    LOC     30
     C*
     CSR         ENDCK1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK2   Screen 2 error checking.
     C*
     CSR         ZZCHK2    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR         ENDCK2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCHK3   Screen 3 error checking.
     C*
     CSR         ZZCHK3    BEGSR
     CSR                   MOVE *OFF      ERROR
     CSR         ENDCK3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD1   User defined command keys for screen 1.
     C*
     CSR         ZZCMD1    BEGSR
     CSR                   MOVE *OFF      CMDTKN
     C*
     C*  Test for F4 - Lookup
     C*
     CSR         *INKD     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   Z-ADD0         ROW#
     CSR                   MOVE ROWIN     ROW
     CSR                   Z-ADD0         COL#
     CSR                   MOVE COLIN     COL
     C*
     C*     Warehouse department.
     C*
     CSR                   SELEC
     CSR         ROW#      WHEQ 08
     CSR                   MOVE *ON       *IN01
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   MOVE #PROG     $LPRG
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   CALL 'WH900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   Z-ADD$LWHSE    W1WHSE
     CSR                   ENDIF
     C*
     C*     Warehouse department.
     C*
     CSR         ROW#      WHEQ 9
     CSR                   MOVE *ON       *IN02
     CSR                   MOVE '*LOOKUP '$LCMD
     CSR                   Z-ADDW1WHSE    $LWHSE
     CSR                   MOVE W1WHDP    $LWHDP
     CSR                   CALL 'WD900'
     CSR                   PARM           $LPARM
     CSR         $LRTN     IFEQ '*SELECT '
     CSR                   MOVE $LWHDP    W1WHDP
     CSR                   END
     C*
     C*     Cursor not on a valid lookup field.
     C*
     CSR                   OTHER
     CSR                   MOVE *ON       ERROR
     CSR                   EXSR ZM9905
     CSR                   ENDSL
     CSR                   ENDIF
     C*
     CSR         ENDCM1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD2   User defined command keys for screen 2.
     C*
     CSR         ZZCMD2    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F10 - continue
     C*
     CSR         *INKJ     IFEQ *ON
     CSR                   MOVE *ON       CMDTKN
     CSR                   MOVE '03 '     NXTSCR
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZCMD3   User defined command keys for screen 3.
     C*
     CSR         ZZCMD3    BEGSR
     C*
     C*  Command keys to check BEFORE verification and update.
     C*
     CSR         CMDCHK    IFEQ '*BEFORE '
     C*
     C*  Test for F22 - continue
     C*
     CSR         *INKW     IFEQ *ON
     C*
     CSR                   Z-ADD0         ERCNT
     C*
     C*  Put out info message.
     CSR                   EXSR ZM2402
     CSR                   EXSR ZMDMSG
     CSR                   EXSR ZMCPMQ
     CSR                   Z-ADD0         W1CNT   50
     CSR                   EXSR ZZCNT
     CSR                   EXSR ZZCHG
     CSR                   MOVE *ON       ERROR
     CSR                   Z-ADDW1CNT     CGCNT
     CSR                   EXSR ZM2401
     CSR                   MOVE *ON       CMDTKN
     CSR                   MOVE '01 '     NXTSCR
     CSR                   ENDIF
     CSR                   ENDIF
     C*
     C*  Command keys to check AFTER verification and update.
     C*
     CSR         CMDCHK    IFEQ '*AFTER  '
     CSR                   ENDIF
     CSR         ENDCM3    ENDSR
     C*----------------------------------------------------------------
     C*  ZZCNT    Count records to be changed.
     CSR         ZZCNT     BEGSR
     C*
     C*   *ALL *ALL
     C*
     CSR         W1WHDP    IFEQ '*ALL '
     CSR         W1ASLE    ANDEQ'*ALL '
     C/EXEC SQL
     C+  SELECT COUNT(*) INTO :W1CNT
     C+  FROM   SLOT1
     C+  WHERE      (SLWHSE  = :W1WHSE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   CODE CODE
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR         W1ASLE    ANDNE'*ALL '
     C/EXEC SQL
     C+  SELECT COUNT(*) INTO :W1CNT
     C+  FROM   SLOT1
     C+  WHERE      (SLWHSE = :W1WHSE)
     C+         AND (SLWHDP = :WHDP)
     C+         AND (SLAISL = :ASLE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   *ALL CODE
     C*
     CSR         W1WHDP    IFEQ '*ALL '
     CSR         W1ASLE    ANDNE'*ALL '
     C/EXEC SQL
     C+  SELECT COUNT(*) INTO :W1CNT
     C+  FROM   SLOT1
     C+  WHERE      (SLWHSE = :W1WHSE)
     C+         AND (SLAISL = :ASLE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   CODE *ALL
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR         W1ASLE    ANDEQ'*ALL '
     C/EXEC SQL
     C+  SELECT COUNT(*) INTO :W1CNT
     C+  FROM   SLOT1
     C+  WHERE      (SLWHSE = :W1WHSE)
     C+         AND (SLWHDP = :WHDP)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     CSR         ENDCNT    ENDSR
     C*----------------------------------------------------------------
     C*  ZZCHG    Change slot designation code
     CSR         ZZCHG     BEGSR
     C*
     C*   *ALL *ALL
     C*
     CSR         W1WHDP    IFEQ '*ALL '
     CSR         W1ASLE    ANDEQ'*ALL '
     C/EXEC SQL
     C+  UPDATE SLOT1
     C+  SET SLDESG = :W1TDES
     C+  WHERE      (SLWHSE  = :W1WHSE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   CODE CODE
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR         W1ASLE    ANDNE'*ALL '
     C/EXEC SQL
     C+  UPDATE SLOT1
     C+  SET SLDESG = :W1TDES
     C+  WHERE      (SLWHSE  = :W1WHSE)
     C+         AND (SLWHDP  = :WHDP)
     C+         AND (SLAISL  = :ASLE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   *ALL CODE
     C*
     CSR         W1WHDP    IFEQ '*ALL '
     CSR         W1ASLE    ANDNE'*ALL '
     C/EXEC SQL
     C+  UPDATE SLOT1
     C+  SET SLDESG = :W1TDES
     C+  WHERE      (SLWHSE  = :W1WHSE)
     C+         AND (SLAISL  = :ASLE)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     C*   CODE *ALL
     C*
     CSR         W1WHDP    IFNE '*ALL '
     CSR         W1ASLE    ANDEQ'*ALL '
     C/EXEC SQL
     C+  UPDATE SLOT1
     C+  SET SLDESG = :W1TDES
     C+  WHERE      (SLWHSE = :W1WHSE)
     C+         AND (SLWHDP = :WHDP)
     C+         AND (SLLOC  >= :W1FLOC AND SLLOC  <= :W1TLOC)
     C+         AND (SLDESG  = :W1FDES)
     C/END-EXEC
     C*
     CSR                   ENDIF
     C*
     CSR         ENDCHG    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL1   Fill screen 1 fields with info from file.
     C*
     CSR         ZZFIL1    BEGSR
     C*
     CSR                   Z-ADD0         W1WHSE
     CSR                   MOVE *BLANKS   W1WHDP
     CSR                   MOVE *BLANKS   W1ASLE
     CSR                   Z-ADD0         W1FLOC
     CSR                   Z-ADD0         W1TLOC
     CSR                   MOVE *BLANKS   W1FDES
     CSR                   MOVE *BLANKS   W1TDES
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL2   Fill screen 2 fields with info from file.
     C*
     CSR         ZZFIL2    BEGSR
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZFIL3   Fill screen 3 fields with info from file.
     C*
     CSR         ZZFIL3    BEGSR
     C*
     CSR                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*
     C*  ZZGET1   Get record(s) for screen 1.
     C*
     CSR         ZZGET1    BEGSR
     C*
     CSR         ENDGT1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET2   Get record(s) for screen 2.
     C*
     CSR         ZZGET2    BEGSR
     C*
     CSR         ENDGT2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZGET3   Get record(s) for screen 3.
     C*
     CSR         ZZGET3    BEGSR
     C*
     CSR         ENDGT3    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ    Extra program initialization. Called from *INZSR.
     C*
     CSR         ZZINZ     BEGSR
     C*
     CSR                   MOVE #PROG     #PGMQ
     CSR                   MOVE #PROG     $LPRG
     CSR                   ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZINZ2   Program initialization. Called from main line.
     C*
     CSR         ZZINZ2    BEGSR
     C*
     C*   Select first screen to display.
     C*
     CSR                   EXSR SCR01I
     C*
     CSR         ENDIN2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZNXT1   What to do next when screen 1 input is ok.
     C*
     CSR         ZZNXT1    BEGSR
     C*
     CSR                   EXSR SCR02I
     C*
     CSR         ENDNX1    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZNXT2   What to do next when screen 2 input is ok.
     C*
     CSR         ZZNXT2    BEGSR
     C*
     CSR         ENDNX2    ENDSR
     C*----------------------------------------------------------------
     C*
     C*  ZZNXT3   What to do next when screen 3 input is ok.
     C*
     CSR         ZZNXT3    BEGSR
     C*
     CSR         ENDNX3    ENDSR
     C*
     O*----------------------------------------------------------------
     O*
     O*  COMPILE TIME TABLES
     O*
**
Slot
Slot location
Slot level
