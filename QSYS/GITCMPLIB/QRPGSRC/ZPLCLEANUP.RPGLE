      /copy qcopysrc,hspecs
     H DFTACTGRP(*NO) ACTGRP(*CALLER)
     *----------------------------------------------------------------
     *
     *  ZPLCLEANUP   Clean up ZPL code generated by MarkMagic
     *  25 June 2021
     *  Dave Sommerville
     *
     *  Revisions
     *
     *    06/25/21  DAS  7.50
     *      - Created.
     *
     *----------------------------------------------------------------

     *----------------------------------------------------------------
     *  Notes
     *
     *  Every label MarkMagic generates includes a number of
     *  initialization commands. One of those commands clears
     *  stored formats.
     *
     *  For SelectPrime(c), we are using stored formats for the PICK
     *  labels. Therefore, if we print a non-PICK label (e.g., SETHED)
     *  the stored formats would be deleted.
     *
     *  To fix this issue, a BLT set of labels will always include
     *  format INIT. This format will be sent to the printer before
     *  normal labels are printed.
     *
     *  This program will do ...
     *
     *    1) Revise the INIT label so it doesn't print a label.
     *
     *    2) Remove all of the ZPL init commands from all the other
     *       label formats.
     *
     *----------------------------------------------------------------

     *----------------------------------------------------------------
     *  Files
     *----------------------------------------------------------------

     Flblfmtd   uf   e           k disk

     *----------------------------------------------------------------
     *  Standard variables and constants
     *----------------------------------------------------------------

      /copy qcopysrc,c#stdvar

     *----------------------------------------------------------------
     *  Program info data structure
     *----------------------------------------------------------------

      /copy qcopysrc,c#pgminfds

     *----------------------------------------------------------------
     *  Variables
     *----------------------------------------------------------------

     D set             s              6

     *----------------------------------------------------------------
     *  Sub-procedure prototypes
     *----------------------------------------------------------------

     d CleanINIT       pr

     d CleanOther      pr

     *----------------------------------------------------------------
     * Parameters
     *
     *    Input Parameters
     *
     *      pSetId         Last 3 characters of set name (e.g., CB3)
     *                     First 3 characters are hardcoded to BLT
     *
     *    Returned Parameters
     *
     *      none
     *
     *----------------------------------------------------------------

     d ZPLCLEANUP      pr                  extpgm('ZPLCLEANUP')
     d  pSetId                        3    const

     d ZPLCLEANUP      pi
     d  pSetId                        3    const

     *----------------------------------------------------------------
     *  Main Line
     *----------------------------------------------------------------

      /free
        *inlr = *on;

        monitor;
          set = 'BLT' + pSetId;
        on-error;
          dsply 'ZPLCLEANUP (iii), iii is 3 set id';
          return;
        endmon;

        CleanINIT();

        CleanOther();

        return;

      /end-free

     *----------------------------------------------------------------
     *  CleanInit    Clean up INIT format
     *----------------------------------------------------------------

     p CleanInit       b
     d CleanInit       pi

     d  prFlag         s               n

      /free

        prFlag = *off;

        setll (set: 'INIT') lblfmtd;

        dow forever = forever;

          reade (set: 'INIT') lblfmtd;

          if %eof(lblfmtd);
            leave;
          endif;

          // Keep all lines up to and including line with ^PR

          if not prFlag;
            if %subst(lfdstr: 1: 3) = '^PR';
              prFlag = *on;
            endif;
            iter;
          endif;

          // Skip ^XZ record

          if lfdstr = '^XZ';
            iter;
          endif;

          // Delete all other records that come after ^PR
          // This will prevent printing a label for the INIT format

          if prFlag;
            delete lfdrec;
          endif;

        enddo;

      /end-free

     p                 e

     *----------------------------------------------------------------
     *  CleanOther   Clean up other non-INIT formats
     *----------------------------------------------------------------

     p CleanOther      b
     d CleanOther      pi

     d  first          s               n
     d  prFlag         s               n
     d  xaFlag         s               n
     d  alreadyDone    s               n
     d  lastfmt        s                   like(lfdfmt)
     d  zplCmd         s              3

      /free

        first = *on;
        prFlag = *off;
        xaFlag = *off;
        alreadyDone = *off;
        lastfmt = '';

        setll (set) lblfmtd;

        dow forever = forever;

          reade (set) lblfmtd;

          if %eof(lblfmtd);
            leave;
          endif;

          // Skip some formats

          if lfdfmt = 'INIT'
           or lfdfmt = 'BLTTEST';
             iter;
          endif;

          // Reset flags when format changes

          if lfdfmt <> lastfmt;
            first = *on;
            prFlag = *off;
            xaFlag = *off;
            alreadyDone = *off;
            lastfmt = lfdfmt;
          endif;

          // If ~CC not found as first record,
          // Assume init recs have already been deleted for format.

          if first;
            if lfdstr <> '~CC^';
              alreadyDone = *on;
            endif;
            first = *off;
          endif;

          if alreadyDone;
            iter;
          endif;

          // Delete all lines up to and including line with ^PR
          // Once we hit ^PR, we can stop
          // Exception is to keep first line that only contains ^XA

          // Save first ^XA only rec

          if not xaFlag and lfdstr = '^XA';
            xaFlag = *on;
            iter;
          endif;

          // Delete init recs (everything thru ^PR)

          if not prFlag;
            if %subst(lfdstr: 1: 3) = '^PR';
              prFlag = *on;
            endif;
            delete lfdrec;
          endif;

        enddo;

      /end-free

     p                 e

